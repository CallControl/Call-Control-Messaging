io.reactivex.internal.operators.observable.ObservableCombineLatest
io.realm.internal.OsSharedRealm$MigrationCallback
io.reactivex.internal.subscribers.LambdaSubscriber
io.reactivex.android.schedulers.HandlerScheduler$ScheduledRunnable
com.uber.autodispose.android.internal.AutoDisposeAndroidUtil
io.reactivex.Single
io.realm.internal.ObservableSet
io.reactivex.internal.operators.observable.ObservableDoOnEach
com.uber.autodispose.AutoDisposeEndConsumerHelper
io.reactivex.internal.operators.flowable.FlowableCreate$ErrorAsyncEmitter
io.reactivex.internal.operators.observable.ObservableFromUnsafeSource
io.reactivex.internal.observers.BlockingMultiObserver
io.realm.log.RealmLog
com.google.android.material.appbar.AppBarLayout
io.reactivex.internal.schedulers.ComputationScheduler$PoolWorker
io.reactivex.functions.Function3
io.reactivex.internal.operators.flowable.FlowableJust
io.reactivex.internal.operators.flowable.FlowableObserveOn
dev.octoshrimpy.quik.common.QKApplication
dev.octoshrimpy.quik.receiver.SmsReceiver
io.realm.internal.OsSharedRealm$InitializationCallback
com.uber.autodispose.AutoDisposingCompletableObserverImpl$1
io.reactivex.observers.LambdaConsumerIntrospection
dev.octoshrimpy.quik.receiver.SmsProviderChangedReceiver
com.google.android.material.internal.CheckableImageButton
io.reactivex.BackpressureStrategy
io.realm.internal.objectstore.OsObjectBuilder
io.reactivex.exceptions.ProtocolViolationException
android.support.v4.graphics.drawable.IconCompatParcelizer
io.realm.internal.objectstore.OsKeyPathMapping
dev.octoshrimpy.quik.feature.scheduled.ScheduledActivity
androidx.viewpager2.adapter.FragmentStateAdapter$5
io.reactivex.internal.operators.observable.ObservableDebounceTimed$DebounceTimedObserver
io.realm.log.RealmLogger
dev.octoshrimpy.quik.common.widget.SquareImageView
io.reactivex.subjects.PublishSubject
com.uber.autodispose.AutoDispose$1
io.reactivex.internal.functions.Functions$FalsePredicate
io.reactivex.ObservableOnSubscribe
io.reactivex.internal.operators.observable.ObservableWithLatestFromMany$SingletonArrayFunc
io.reactivex.internal.functions.Functions$NullCallable
io.reactivex.internal.util.BlockingHelper
androidx.appcompat.widget.Toolbar
androidx.activity.ComponentActivity$5
com.uber.autodispose.ScopeProvider
io.reactivex.internal.operators.observable.ObservableFilter
com.google.android.exoplayer2.ui.AspectRatioFrameLayout
io.realm.mongodb.sync.SubscriptionSet$StateChangeCallback
io.reactivex.internal.operators.observable.ObservableSubscribeOn$SubscribeOnObserver
io.reactivex.internal.operators.flowable.FlowableDoOnEach$DoOnEachConditionalSubscriber
io.reactivex.internal.util.HalfSerializer
io.reactivex.CompletableConverter
io.reactivex.internal.operators.observable.ObservableWithLatestFrom
androidx.lifecycle.Lifecycling$1
com.squareup.moshi.ArrayJsonAdapter
com.uber.autodispose.AutoDispose$1$4
io.realm.internal.OsSchemaInfo
io.reactivex.internal.operators.flowable.FlowableObserveOn$BaseObserveOnSubscriber
dev.octoshrimpy.quik.receiver.MmsUpdatedReceiver
io.reactivex.internal.operators.observable.ObservableConcatMap$ConcatMapDelayErrorObserver$DelayErrorInnerObserver
io.realm.exceptions.RealmFileException$Kind
io.reactivex.internal.operators.flowable.FlowableScalarXMap
io.reactivex.internal.fuseable.QueueSubscription
androidx.appcompat.widget.FitWindowsFrameLayout
io.reactivex.disposables.Disposable
io.reactivex.disposables.ReferenceDisposable
io.realm.internal.OsObjectStore
com.google.android.material.bottomappbar.BottomAppBar$Behavior
com.uber.autodispose.AutoDisposeCompletable
io.reactivex.internal.fuseable.FuseToObservable
me.leolin.shortcutbadger.impl.AdwHomeBadger
com.uber.autodispose.lifecycle.LifecycleNotStartedException
io.reactivex.internal.operators.observable.ObservableDoOnLifecycle
io.reactivex.internal.operators.flowable.FlowableUnsubscribeOn
dev.octoshrimpy.quik.feature.backup.BackupActivity
dev.octoshrimpy.quik.common.widget.AvatarView
io.reactivex.internal.operators.observable.ObservableWithLatestFrom$WithLatestFromObserver
com.uber.autodispose.AutoDispose
io.reactivex.functions.Consumer
io.reactivex.internal.subscriptions.ScalarSubscription
io.realm.annotations.RealmModule
io.reactivex.internal.operators.observable.ObservableCombineLatest$CombinerObserver
androidx.lifecycle.ReflectiveGenericLifecycleObserver
androidx.core.graphics.drawable.IconCompat
io.reactivex.internal.operators.observable.ObservableFromIterable$FromIterableDisposable
com.uber.rxdogtag.RxDogTag$Configurer
io.reactivex.internal.util.AppendOnlyLinkedArrayList
io.reactivex.internal.operators.observable.ObservableRefCount$RefConnection
com.squareup.moshi.StandardJsonAdapters$ObjectJsonAdapter
com.uber.autodispose.android.lifecycle.LifecycleEventsObservable$1
kotlin.coroutines.jvm.internal.BaseContinuationImpl
io.reactivex.internal.operators.observable.ObservableTakeUntil
io.reactivex.internal.util.AtomicThrowable
io.reactivex.internal.operators.mixed.CompletableAndThenObservable
androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable
io.reactivex.CompletableSource
io.reactivex.internal.schedulers.ScheduledDirectPeriodicTask
io.reactivex.exceptions.CompositeException$PrintStreamOrWriter
io.reactivex.internal.functions.Functions$TruePredicate
io.reactivex.Scheduler$PeriodicDirectTask
io.reactivex.functions.Action
io.reactivex.internal.schedulers.NewThreadWorker
io.reactivex.internal.operators.single.SingleCreate
com.google.android.material.internal.NavigationMenuView
io.reactivex.internal.fuseable.ConditionalSubscriber
io.reactivex.internal.schedulers.SingleScheduler$ScheduledWorker
io.reactivex.exceptions.CompositeException
io.realm.internal.OsObjectSchemaInfo
dev.octoshrimpy.quik.feature.main.MainActivity
me.leolin.shortcutbadger.impl.XiaomiHomeBadger
io.reactivex.schedulers.Schedulers$IoHolder
androidx.appcompat.app.AlertController$RecycleListView
io.reactivex.internal.schedulers.InstantPeriodicTask
com.google.android.material.appbar.CollapsingToolbarLayout
io.reactivex.internal.operators.completable.CompletableSubscribeOn
io.reactivex.internal.schedulers.SchedulerPoolFactory
io.reactivex.internal.operators.observable.ObservableFromCallable
io.reactivex.rxkotlin.FlowableKt
androidx.lifecycle.FullLifecycleObserverAdapter
com.uber.autodispose.android.lifecycle.LifecycleEventsObservable_ArchLifecycleObserver_LifecycleAdapter
io.reactivex.internal.operators.flowable.FlowableCreate$LatestAsyncEmitter
io.reactivex.internal.operators.observable.ObservableScanSeed
com.uber.rxdogtag.RxDogTag
com.uber.rxdogtag.DogTagSubscriber
io.reactivex.internal.operators.flowable.FlowableSubscribeOn$SubscribeOnSubscriber$Request
io.reactivex.internal.operators.observable.ObservableWithLatestFromMany$WithLatestFromObserver
io.reactivex.internal.operators.observable.ObservableFromPublisher$PublisherSubscriber
io.reactivex.internal.operators.observable.ObservableScanSeed$ScanSeedObserver
io.reactivex.observers.SerializedObserver
dev.octoshrimpy.quik.feature.widget.WidgetService
io.reactivex.schedulers.Schedulers$SingleTask
io.reactivex.internal.operators.observable.AbstractObservableWithUpstream
io.reactivex.ObservableEmitter
android.net.NetworkUtilsHelper
io.reactivex.internal.disposables.SequentialDisposable
io.reactivex.subjects.Subject
io.reactivex.internal.operators.single.SingleFromCallable
androidx.savedstate.Recreator
io.reactivex.internal.operators.observable.ObservablePublish$PublishSource
androidx.appcompat.view.menu.ActionMenuItemView
com.uber.autodispose.android.ViewScopeProvider
dev.octoshrimpy.quik.feature.plus.PlusActivity
kotlinx.coroutines.internal.MainDispatcherFactory
io.reactivex.subjects.BehaviorSubject$BehaviorDisposable
androidx.transition.FragmentTransitionSupport
io.reactivex.internal.observers.BasicFuseableObserver
io.reactivex.internal.operators.observable.ObservableSampleTimed
io.reactivex.internal.operators.observable.ObservableMap$MapObserver
io.reactivex.internal.functions.Functions$Array2Func
androidx.emoji.widget.ExtractButtonCompat
io.reactivex.android.MainThreadDisposable
io.reactivex.internal.operators.completable.CompletableFromCallable
io.reactivex.internal.operators.flowable.FlowableFilter
com.uber.autodispose.android.lifecycle.LifecycleEventsObservable
io.realm.internal.OsRealmConfig
org.bson.types.ObjectId
io.reactivex.internal.operators.observable.ObservableMap
io.reactivex.internal.observers.EmptyCompletableObserver
com.uber.rxdogtag.RxDogTag$NonCheckingConsumer
com.uber.rxdogtag.autodispose.AutoDisposeObserverHandler
io.reactivex.internal.disposables.ResettableConnectable
com.android.mms.transaction.TransactionService
io.reactivex.internal.functions.Functions$EmptyConsumer
com.google.android.material.behavior.SwipeDismissBehavior
io.reactivex.android.schedulers.HandlerScheduler$HandlerWorker
io.reactivex.subjects.SingleSubject
io.reactivex.internal.operators.observable.ObservableSubscribeOn$SubscribeTask
io.reactivex.internal.schedulers.IoScheduler$CachedWorkerPool
io.reactivex.internal.operators.flowable.FlowableDoOnEach$DoOnEachSubscriber
io.reactivex.internal.observers.CallbackCompletableObserver
io.reactivex.internal.subscriptions.BasicQueueSubscription
io.reactivex.internal.operators.completable.CompletableDefer
com.squareup.moshi.CollectionJsonAdapter
io.reactivex.Flowable
dev.octoshrimpy.quik.receiver.SendSmsReceiver
dev.octoshrimpy.quik.service.AutoDeleteService
com.uber.autodispose.observers.AutoDisposingMaybeObserver
io.realm.internal.Table
io.reactivex.internal.schedulers.IoScheduler
io.reactivex.internal.operators.observable.ObservableFlatMapCompletableCompletable
io.reactivex.internal.observers.LambdaObserver
com.uber.autodispose.lifecycle.LifecycleScopes
androidx.constraintlayout.widget.ConstraintLayout
io.reactivex.internal.functions.Functions$Identity
io.realm.internal.RealmNotifier
io.reactivex.schedulers.Schedulers
androidx.appcompat.widget.ButtonBarLayout
io.reactivex.internal.fuseable.ScalarCallable
io.reactivex.internal.operators.observable.ObservableSampleTimed$SampleTimedNoLast
io.reactivex.internal.util.EndConsumerHelper
io.reactivex.internal.functions.ObjectHelper
io.reactivex.internal.operators.observable.ObservableSkipUntil$SkipUntilObserver
dev.octoshrimpy.quik.receiver.RemoteMessagingReceiver
androidx.fragment.app.FragmentManager$6
io.realm.internal.UncheckedRow
io.reactivex.internal.schedulers.RxThreadFactory
com.uber.autodispose.ExceptionHelper
com.bumptech.glide.GeneratedAppGlideModuleImpl
androidx.recyclerview.widget.StaggeredGridLayoutManager
io.reactivex.internal.functions.ObjectHelper$BiObjectPredicate
com.uber.autodispose.lifecycle.LifecycleEndedException
io.reactivex.functions.LongConsumer
io.reactivex.internal.operators.observable.ObservableCombineLatest$LatestCoordinator
io.reactivex.internal.operators.observable.ObservableFlatMapCompletable
io.reactivex.internal.util.ExceptionHelper$Termination
io.reactivex.internal.operators.flowable.FlowableScalarXMap$ScalarXMapFlowable
io.realm.internal.OsMap
io.reactivex.android.plugins.RxAndroidPlugins
androidx.annotation.Keep
io.reactivex.internal.operators.flowable.FlowableFromIterable$BaseRangeSubscription
kotlinx.coroutines.CoroutineExceptionHandler
dev.octoshrimpy.quik.receiver.MarkReadReceiver
com.bluelinelabs.conductor.ChangeHandlerFrameLayout
kotlin.Metadata
androidx.appcompat.view.menu.ListMenuItemView
com.uber.autodispose.android.lifecycle.AndroidLifecycleScopeProvider$UntilEventFunction
dev.octoshrimpy.quik.common.widget.QkTextView
dev.octoshrimpy.quik.feature.qkreply.QkReplyActivity
io.reactivex.internal.functions.Functions$Array5Func
androidx.recyclerview.widget.LinearLayoutManager
com.squareup.moshi.MapJsonAdapter
io.reactivex.android.schedulers.HandlerScheduler
dev.octoshrimpy.quik.receiver.SmsDeliveredReceiver
com.squareup.moshi.ClassJsonAdapter
io.reactivex.schedulers.Schedulers$NewThreadTask
com.bumptech.glide.manager.SupportRequestManagerFragment
io.reactivex.internal.operators.observable.ObservableSkipWhile$SkipWhileObserver
io.reactivex.functions.BiFunction
dev.octoshrimpy.quik.common.widget.RadioPreferenceView
com.google.android.material.floatingactionbutton.FloatingActionButton$BaseBehavior
io.reactivex.internal.functions.Functions$Array6Func
com.google.android.material.snackbar.BaseTransientBottomBar$Behavior
androidx.core.app.RemoteActionCompatParcelizer
io.reactivex.internal.functions.Functions
io.reactivex.SingleObserver
kotlinx.coroutines.internal.StackTraceRecoveryKt
io.reactivex.internal.functions.Functions$Array4Func
io.realm.internal.ObservableCollection
io.reactivex.internal.operators.flowable.FlowableSubscribeOn
androidx.lifecycle.LiveData$LifecycleBoundObserver
androidx.viewpager2.adapter.FragmentStateAdapter$2
io.reactivex.internal.schedulers.ScheduledDirectTask
io.reactivex.internal.observers.BasicQueueDisposable
androidx.core.widget.NestedScrollView
dev.octoshrimpy.quik.receiver.DeleteMessagesReceiver
io.reactivex.subjects.BehaviorSubject
io.reactivex.CompletableObserver
io.reactivex.FlowableEmitter
dev.octoshrimpy.quik.common.util.QkChooserTargetService
com.google.android.flexbox.FlexboxLayoutManager
io.reactivex.internal.operators.observable.ObservableWithLatestFrom$WithLatestFromOtherObserver
dev.octoshrimpy.quik.feature.contacts.ContactsActivity
io.reactivex.internal.operators.observable.ObservableDebounceTimed
io.reactivex.schedulers.Schedulers$ComputationTask
com.uber.autodispose.AutoDispose$1$1
com.google.android.material.appbar.AppBarLayout$BaseBehavior
io.reactivex.internal.operators.observable.ObservableFlatMapCompletable$FlatMapCompletableMainObserver
androidx.constraintlayout.widget.Group
dev.octoshrimpy.quik.common.widget.TightTextView
com.google.android.exoplayer2.ui.SubtitleView
io.reactivex.internal.operators.observable.ObservableFlatMapCompletableCompletable$FlatMapCompletableMainObserver$InnerObserver
io.reactivex.functions.Function5
com.google.android.exoplayer2.ui.PlayerView
com.uber.rxdogtag.autodispose.AutoDisposeConfigurer
com.uber.autodispose.android.lifecycle.AndroidLifecycleScopeProvider$1
io.reactivex.internal.operators.observable.ObservableSkip
com.uber.autodispose.AutoDisposeConverter
io.reactivex.internal.operators.observable.ObservableConcatMap$ConcatMapDelayErrorObserver
io.reactivex.internal.operators.flowable.FlowableMap$MapSubscriber
com.google.android.material.internal.NavigationMenuItemView
io.reactivex.internal.operators.flowable.FlowableMap$MapConditionalSubscriber
com.uber.autodispose.AutoDisposingCompletableObserverImpl
io.reactivex.internal.operators.single.SingleCreate$Emitter
io.realm.internal.OsCollectionChangeSet
io.reactivex.SingleOnSubscribe
dev.octoshrimpy.quik.feature.blocking.BlockingActivity
dev.octoshrimpy.quik.feature.gallery.GalleryActivity
io.reactivex.internal.functions.Functions$Array3Func
dev.octoshrimpy.quik.feature.compose.ComposeActivity
androidx.activity.ComponentActivity$4
io.realm.internal.OsList
com.uber.autodispose.android.AutoDisposeAndroidPlugins
kotlinx.coroutines.flow.Flow
io.reactivex.internal.operators.observable.ObservableSwitchMap$SwitchMapObserver
io.realm.internal.Property
io.reactivex.internal.operators.observable.ObservableWithLatestFromMany
io.reactivex.internal.operators.flowable.FlowableObserveOn$ObserveOnSubscriber
com.google.android.exoplayer2.ui.DefaultTimeBar
io.realm.internal.android.AndroidRealmNotifier
androidx.drawerlayout.widget.DrawerLayout
io.reactivex.internal.operators.flowable.FlowableFlatMap$InnerSubscriber
io.realm.internal.OsSharedRealm
androidx.viewpager.widget.ViewPager
androidx.core.app.CoreComponentFactory
io.reactivex.internal.observers.BlockingBaseObserver
com.uber.autodispose.ExceptionHelper$Termination
androidx.appcompat.widget.SearchView
io.reactivex.internal.fuseable.SimplePlainQueue
io.reactivex.internal.util.Pow2
com.uber.autodispose.OutsideScopeException
io.reactivex.internal.operators.observable.ObservableSkipUntil
io.realm.exceptions.RealmMigrationNeededException
com.uber.autodispose.AutoDisposeUtil
io.reactivex.internal.disposables.CancellableDisposable
com.google.android.material.transformation.ExpandableBehavior
dev.octoshrimpy.quik.common.widget.PreferenceView
androidx.activity.ComponentActivity$3
io.reactivex.internal.observers.DeferredScalarDisposable
io.reactivex.internal.operators.flowable.FlowableCreate$1
io.reactivex.internal.operators.observable.ObservableIgnoreElements$IgnoreObservable
io.reactivex.internal.operators.observable.ObservableObserveOn
dev.octoshrimpy.quik.receiver.NightModeReceiver
dev.octoshrimpy.quik.feature.backup.RestoreBackupService
io.reactivex.disposables.RunnableDisposable
io.reactivex.internal.operators.flowable.FlowableDoOnEach
io.realm.internal.TableQuery
me.leolin.shortcutbadger.impl.ApexHomeBadger
io.reactivex.internal.operators.observable.ObservableJust
io.reactivex.internal.operators.observable.ObservableTakeUntilPredicate$TakeUntilPredicateObserver
io.realm.internal.core.NativeRealmAnyCollection
io.reactivex.internal.operators.mixed.CompletableAndThenPublisher$AndThenPublisherSubscriber
com.uber.autodispose.android.lifecycle.AndroidLifecycleScopeProvider
io.reactivex.internal.operators.observable.ObservableDebounceTimed$DebounceEmitter
androidx.coordinatorlayout.widget.CoordinatorLayout
io.reactivex.internal.operators.flowable.FlowableCreate$BaseEmitter
io.reactivex.Emitter
androidx.appcompat.view.menu.ExpandedMenuView
io.realm.RealmFieldType
io.reactivex.internal.functions.Functions$EmptyAction
io.reactivex.internal.queue.SpscLinkedArrayQueue
io.reactivex.internal.util.BackpressureHelper
io.reactivex.internal.operators.mixed.CompletableAndThenObservable$AndThenObservableObserver
io.reactivex.internal.operators.single.SingleMap
com.squareup.moshi.JsonAdapter
dev.octoshrimpy.quik.common.widget.GroupAvatarView
io.reactivex.SingleSource
io.reactivex.internal.operators.observable.ObservableDistinctUntilChanged
io.reactivex.internal.operators.flowable.FlowableFromIterable$IteratorSubscription
androidx.savedstate.SavedStateRegistry$1
androidx.appcompat.widget.ActionBarContainer
dev.octoshrimpy.quik.feature.conversationinfo.ConversationInfoActivity
com.uber.autodispose.HalfSerializer
io.reactivex.functions.Function6
dev.octoshrimpy.quik.receiver.MarkArchivedReceiver
dev.octoshrimpy.quik.common.widget.QkEditText
com.uber.autodispose.AutoDisposingObserverImpl
com.google.android.material.snackbar.SnackbarContentLayout
me.leolin.shortcutbadger.impl.NewHtcHomeBadger
io.realm.internal.NativeObjectReference
io.reactivex.Completable
io.reactivex.exceptions.OnErrorNotImplementedException
io.realm.exceptions.RealmException
com.google.android.material.transformation.FabTransformationSheetBehavior
io.realm.exceptions.RealmError
io.reactivex.internal.schedulers.ComputationScheduler$EventLoopWorker
io.reactivex.internal.operators.observable.ObservableConcatMap$SourceObserver
android.support.v4.app.RemoteActionCompatParcelizer
com.uber.autodispose.android.lifecycle.LifecycleEventsObservable$ArchLifecycleObserver
io.reactivex.internal.operators.observable.ObservableSkipUntil$SkipUntil
io.reactivex.ObservableSource
io.reactivex.internal.subscribers.BasicFuseableConditionalSubscriber
io.reactivex.internal.operators.observable.ObservableWithLatestFromMany$WithLatestInnerObserver
io.reactivex.internal.observers.BasicIntQueueDisposable
io.reactivex.internal.schedulers.ComputationScheduler
io.reactivex.internal.subscriptions.EmptySubscription
dev.octoshrimpy.quik.manager.ChangelogManagerImpl$Changeset
io.reactivex.internal.operators.flowable.FlowableCreate$MissingEmitter
io.reactivex.internal.operators.completable.CompletableFromAction
kotlin.internal.jdk7.JDK7PlatformImplementations
io.reactivex.internal.operators.observable.ObservableFlatMapCompletable$FlatMapCompletableMainObserver$InnerObserver
io.reactivex.internal.operators.observable.ObservableConcatMap
androidx.activity.ImmLeaksCleaner
com.uber.rxdogtag.RxDogTag$Builder
io.reactivex.android.MainThreadDisposable$1
io.reactivex.observers.DisposableCompletableObserver
dev.octoshrimpy.quik.common.widget.PagerTitleView
com.google.android.material.transformation.ExpandableTransformationBehavior
com.google.android.material.floatingactionbutton.FloatingActionButton$Behavior
io.reactivex.internal.operators.flowable.FlowableFlatMap$MergeSubscriber
dev.octoshrimpy.quik.common.widget.BubbleImageView
androidx.recyclerview.widget.RecyclerView
io.reactivex.internal.operators.flowable.FlowableFromIterable
dev.octoshrimpy.quik.receiver.SendScheduledMessageReceiver
io.reactivex.disposables.Disposables
me.leolin.shortcutbadger.impl.NovaHomeBadger
com.uber.autodispose.CompletableSubscribeProxy
io.reactivex.MaybeObserver
io.reactivex.internal.operators.observable.ObservableIgnoreElementsCompletable$IgnoreObservable
io.reactivex.internal.operators.single.SingleMap$MapSingleObserver
io.realm.internal.async.BadVersionException
com.google.android.material.internal.BaselineLayout
io.reactivex.internal.functions.Functions$EmptyRunnable
androidx.appcompat.widget.ActivityChooserView$InnerLayout
com.uber.autodispose.observers.AutoDisposingObserver
io.reactivex.android.schedulers.AndroidSchedulers$MainHolder
io.reactivex.internal.operators.flowable.FlowableUnsubscribeOn$UnsubscribeSubscriber
androidx.appcompat.widget.ActionMenuView
dev.octoshrimpy.quik.feature.notificationprefs.NotificationPrefsActivity
com.google.android.material.theme.MaterialComponentsViewInflater
io.reactivex.rxkotlin.Observables
io.realm.internal.Util
io.reactivex.internal.operators.observable.ObservableFromArray$FromArrayDisposable
io.reactivex.internal.operators.completable.CompletableEmpty
io.reactivex.internal.schedulers.SchedulerPoolFactory$ScheduledTask
io.reactivex.internal.operators.flowable.AbstractFlowableWithUpstream
androidx.versionedparcelable.CustomVersionedParcelable
io.reactivex.internal.operators.observable.ObservableRefCount$RefCountObserver
io.reactivex.Maybe
dev.octoshrimpy.quik.receiver.BootReceiver
io.reactivex.ObservableConverter
io.realm.internal.core.NativeRealmAny
io.reactivex.internal.disposables.ListCompositeDisposable
io.reactivex.internal.queue.SpscArrayQueue
io.reactivex.internal.util.NotificationLite$ErrorNotification
androidx.viewpager2.widget.ViewPager2
io.reactivex.functions.BiPredicate
com.google.android.flexbox.FlexboxLayout
io.reactivex.internal.functions.Functions$EmptyLongConsumer
io.realm.internal.OsMapChangeSet
io.reactivex.internal.functions.Functions$JustValue
io.reactivex.internal.util.ErrorMode
androidx.lifecycle.CompositeGeneratedAdaptersObserver
io.reactivex.internal.operators.observable.ObservableSwitchMap
io.reactivex.internal.operators.flowable.FlowableFromCallable
io.reactivex.internal.schedulers.SchedulerPoolFactory$PurgeProperties
io.reactivex.exceptions.UndeliverableException
io.reactivex.exceptions.CompositeException$WrappedPrintStream
io.reactivex.internal.operators.observable.ObservableSkipWhile
com.google.android.material.floatingactionbutton.FloatingActionButton
kotlin.internal.jdk8.JDK8PlatformImplementations
io.reactivex.internal.operators.observable.ObservableConcatMap$SourceObserver$InnerObserver
io.reactivex.internal.operators.observable.ObservableScalarXMap$ScalarXMapObservable
io.reactivex.internal.schedulers.IoScheduler$EventLoopWorker
com.uber.autodispose.AtomicThrowable
androidx.lifecycle.SavedStateHandleController
com.uber.autodispose.AutoDisposableHelper
com.uber.autodispose.lifecycle.CorrespondingEventsFunction
io.reactivex.internal.operators.flowable.FlowableCreate$BufferAsyncEmitter
io.reactivex.internal.schedulers.TrampolineScheduler$TrampolineWorker
io.reactivex.internal.operators.observable.ObservableScalarXMap$ScalarDisposable
com.google.android.material.transformation.FabTransformationBehavior
io.reactivex.internal.operators.observable.ObservableSubscribeOn
io.reactivex.internal.fuseable.QueueDisposable
io.reactivex.internal.schedulers.ComputationScheduler$FixedSchedulerPool
com.google.android.material.transformation.FabTransformationScrimBehavior
io.reactivex.internal.schedulers.TrampolineScheduler$SleepingRunnable
dev.octoshrimpy.quik.receiver.MmsSentReceiver
io.reactivex.internal.functions.Functions$MaxRequestSubscription
io.realm.internal.OsSharedRealm$SchemaChangedCallback
kotlin.reflect.jvm.internal.ReflectionFactoryImpl
io.reactivex.internal.operators.flowable.FlowableInternalHelper$RequestMax
io.reactivex.internal.fuseable.SimpleQueue
io.reactivex.internal.util.OpenHashSet
io.reactivex.internal.subscriptions.SubscriptionHelper
androidx.core.graphics.drawable.IconCompatParcelizer
io.reactivex.internal.schedulers.RxThreadFactory$RxCustomThread
androidx.appcompat.widget.ContentFrameLayout
io.reactivex.observables.ConnectableObservable
io.reactivex.FlowableOnSubscribe
dev.octoshrimpy.quik.receiver.MmsReceiver
androidx.core.content.FileProvider
io.reactivex.internal.operators.observable.ObservableCreate
io.reactivex.functions.Function4
androidx.fragment.app.Fragment$5
io.reactivex.internal.disposables.ArrayCompositeDisposable
com.uber.autodispose.android.DetachEventCompletable
io.reactivex.internal.operators.observable.ObservableSkip$SkipObserver
io.reactivex.internal.operators.single.SingleToObservable$SingleToObservableObserver
io.reactivex.internal.functions.Functions$OnErrorMissingConsumer
androidx.appcompat.widget.AppCompatImageView
com.squareup.moshi.StandardJsonAdapters$EnumJsonAdapter
dev.octoshrimpy.quik.receiver.MmsReceivedReceiver
io.reactivex.schedulers.Schedulers$NewThreadHolder
com.klinker.android.send_message.MmsFileProvider
io.reactivex.internal.operators.flowable.FlowableCreate$DropAsyncEmitter
com.uber.rxdogtag.RxDogTag$Configuration
io.realm.DefaultRealmModule
io.reactivex.internal.operators.observable.ObservableDistinctUntilChanged$DistinctUntilChangedObserver
io.reactivex.internal.operators.observable.ObservableTakeUntil$TakeUntilMainObserver
com.google.android.exoplayer2.ui.TrackSelectionView
kotlin.jvm.internal.DefaultConstructorMarker
io.realm.RealmQuery
io.reactivex.internal.util.AppendOnlyLinkedArrayList$NonThrowingPredicate
io.reactivex.internal.schedulers.NonBlockingThread
dev.octoshrimpy.quik.common.widget.QkSwitch
dev.octoshrimpy.quik.service.HeadlessSmsSendService
androidx.lifecycle.ProcessLifecycleOwnerInitializer
io.reactivex.internal.operators.flowable.FlowableMap
io.reactivex.internal.operators.observable.ObservableRefCount
io.reactivex.internal.operators.observable.ObservableTakeUntil$TakeUntilMainObserver$OtherObserver
io.reactivex.internal.operators.flowable.FlowableEmpty
com.google.android.material.bottomsheet.BottomSheetBehavior
io.reactivex.internal.operators.flowable.FlowableFilter$FilterConditionalSubscriber
com.uber.autodispose.AutoDisposingObserverImpl$1
androidx.appcompat.widget.ViewStubCompat
kotlinx.coroutines.android.AndroidDispatcherFactory
io.reactivex.android.schedulers.AndroidSchedulers
com.uber.autodispose.observers.AutoDisposingSingleObserver
androidx.activity.result.ActivityResultRegistry$1
io.reactivex.internal.operators.observable.ObservableFromArray
io.reactivex.internal.operators.observable.ObservablePublish
dev.octoshrimpy.quik.feature.settings.SettingsActivity
com.uber.autodispose.lifecycle.LifecycleScopeProvider
io.reactivex.internal.operators.observable.ObservableTakeUntilPredicate
io.realm.internal.CheckedRow
io.reactivex.internal.subscriptions.BasicIntQueueSubscription
io.reactivex.internal.operators.single.SingleToObservable
io.reactivex.internal.util.ExceptionHelper
io.reactivex.Observer
io.reactivex.plugins.RxJavaPlugins
io.reactivex.internal.disposables.DisposableHelper
androidx.appcompat.widget.DialogTitle
androidx.core.app.RemoteActionCompat
com.uber.autodispose.android.internal.MainThreadDisposable
com.squareup.moshi.kotlin.reflect.KotlinJsonAdapter
io.reactivex.functions.Function
io.reactivex.internal.schedulers.IoScheduler$ThreadWorker
io.reactivex.internal.operators.observable.ObservableFlatMap$InnerObserver
com.google.android.material.behavior.HideBottomViewOnScrollBehavior
io.realm.CompactOnLaunchCallback
io.realm.internal.OsSet
com.uber.rxdogtag.DogTagCompletableObserver
io.reactivex.functions.Cancellable
io.reactivex.Scheduler$Worker
dev.octoshrimpy.quik.feature.themepicker.HSVPickerView
androidx.recyclerview.widget.GridLayoutManager
io.reactivex.internal.operators.observable.ObservablePublish$PublishObserver
io.reactivex.functions.BooleanSupplier
io.reactivex.internal.operators.observable.ObservableSampleTimed$SampleTimedEmitLast
androidx.appcompat.widget.FitWindowsLinearLayout
io.reactivex.internal.operators.flowable.FlowableFromIterable$IteratorConditionalSubscription
io.reactivex.internal.operators.mixed.CompletableAndThenPublisher
io.reactivex.internal.operators.flowable.FlowableUnsubscribeOn$UnsubscribeSubscriber$Cancellation
io.reactivex.internal.operators.observable.ObservableSampleTimed$SampleTimedObserver
io.realm.RealmCollection
io.reactivex.internal.operators.observable.ObservableFlatMap
io.reactivex.internal.fuseable.QueueFuseable
com.uber.autodispose.AutoDisposeObservable
me.leolin.shortcutbadger.impl.SonyHomeBadger
io.reactivex.internal.util.NotificationLite$DisposableNotification
androidx.appcompat.widget.SearchView$SearchAutoComplete
io.reactivex.internal.operators.completable.CompletableObserveOn
io.realm.internal.KeepMember
io.reactivex.internal.operators.flowable.FlowableObserveOn$ObserveOnConditionalSubscriber
io.realm.internal.OsObject
dev.octoshrimpy.quik.receiver.BlockThreadReceiver
io.reactivex.internal.operators.observable.ObservableIgnoreElements
androidx.appcompat.widget.ActionBarContextView
io.reactivex.functions.Predicate
io.reactivex.Scheduler$DisposeTask
io.reactivex.internal.schedulers.TrampolineScheduler$TrampolineWorker$AppendToQueueTask
io.realm.exceptions.RealmFileException
io.reactivex.internal.schedulers.NewThreadScheduler
io.reactivex.internal.operators.flowable.FlowableSubscribeOn$SubscribeOnSubscriber
io.reactivex.internal.operators.observable.ObservableCreate$CreateEmitter
com.uber.autodispose.observers.AutoDisposingSubscriber
io.reactivex.internal.observers.DisposableLambdaObserver
io.reactivex.internal.operators.observable.ObservablePublish$InnerDisposable
com.uber.rxdogtag.DogTagSingleObserver
com.uber.rxdogtag.ObserverHandler
androidx.viewpager2.adapter.FragmentStateAdapter$FragmentMaxLifecycleEnforcer$3
dev.octoshrimpy.quik.feature.blocking.manager.BlockingManagerPreferenceView
io.reactivex.internal.subscribers.BasicFuseableSubscriber
com.uber.rxdogtag.RxDogTag$NonCheckingPredicate
io.reactivex.internal.schedulers.AbstractDirectTask
io.reactivex.exceptions.Exceptions
io.realm.internal.ObservableMap
io.reactivex.Scheduler
dev.octoshrimpy.quik.receiver.MarkSeenReceiver
io.reactivex.internal.operators.observable.ObservableFromIterable
io.reactivex.subjects.SingleSubject$SingleDisposable
io.reactivex.internal.schedulers.SingleScheduler
io.reactivex.internal.observers.BlockingFirstObserver
io.reactivex.internal.operators.observable.ObservableScalarXMap
io.reactivex.schedulers.Schedulers$IOTask
com.uber.autodispose.observers.AutoDisposingCompletableObserver
org.bson.types.Decimal128
dev.octoshrimpy.quik.receiver.SmsSentReceiver
io.reactivex.FlowableSubscriber
io.reactivex.schedulers.Schedulers$ComputationHolder
io.reactivex.internal.schedulers.TrampolineScheduler$TimedRunnable
io.reactivex.internal.disposables.DisposableContainer
io.reactivex.Scheduler$Worker$PeriodicTask
io.reactivex.SingleEmitter
com.google.android.material.appbar.AppBarLayout$Behavior
androidx.lifecycle.SavedStateHandleController$1
androidx.appcompat.widget.AppCompatRadioButton
dev.octoshrimpy.quik.feature.widget.WidgetProvider
io.reactivex.internal.functions.Functions$NaturalObjectComparator
io.reactivex.exceptions.CompositeException$CompositeExceptionCausalChain
com.uber.rxdogtag.DogTagMaybeObserver
io.reactivex.internal.operators.completable.CompletableSubscribeOn$SubscribeOnObserver
com.uber.rxdogtag.RxDogTag$Configuration$1
io.realm.OrderedRealmCollection
dev.octoshrimpy.quik.receiver.DefaultSmsChangedReceiver
io.reactivex.rxkotlin.DisposableKt
kotlinx.coroutines.android.AndroidExceptionPreHandler
io.reactivex.exceptions.CompositeException$WrappedPrintWriter
com.uber.autodispose.ObservableSubscribeProxy
com.uber.autodispose.AutoDisposePlugins
io.reactivex.internal.operators.observable.ObservableFlatMap$MergeObserver
io.reactivex.internal.schedulers.TrampolineScheduler
io.reactivex.internal.operators.observable.ObservableDoOnEach$DoOnEachObserver
io.realm.internal.Keep
io.realm.internal.OsResults
io.reactivex.Observable
io.reactivex.internal.disposables.EmptyDisposable
com.github.chrisbanes.photoview.PhotoView
me.leolin.shortcutbadger.impl.DefaultBadger
io.reactivex.internal.operators.observable.ObservableFromPublisher
io.reactivex.internal.operators.completable.CompletableObserveOn$ObserveOnCompletableObserver
io.reactivex.internal.operators.observable.ObservableIgnoreElementsCompletable
androidx.appcompat.widget.AlertDialogLayout
io.reactivex.internal.operators.observable.ObservableEmpty
io.reactivex.subjects.PublishSubject$PublishDisposable
io.reactivex.internal.functions.Functions$ErrorConsumer
io.reactivex.android.schedulers.AndroidSchedulers$1
com.uber.rxdogtag.DogTagObserver
io.reactivex.internal.operators.completable.CompletableError
io.reactivex.internal.subscribers.StrictSubscriber
com.google.android.material.snackbar.Snackbar$SnackbarLayout
io.realm.DefaultRealmModuleMediator
io.reactivex.internal.operators.observable.ObservableObserveOn$ObserveOnObserver
io.reactivex.internal.operators.observable.ObservableFilter$FilterObserver
com.uber.autodispose.android.DetachEventCompletable$Listener
com.google.android.material.appbar.AppBarLayout$ScrollingViewBehavior
io.reactivex.internal.operators.flowable.FlowableFlatMap
io.reactivex.schedulers.Schedulers$SingleHolder
io.reactivex.internal.operators.flowable.FlowableCreate$NoOverflowBaseAsyncEmitter
io.reactivex.internal.util.NotificationLite
io.reactivex.internal.operators.flowable.FlowableFilter$FilterSubscriber
androidx.emoji.widget.EmojiExtractEditText
androidx.lifecycle.SingleGeneratedAdapterObserver
io.realm.exceptions.RealmPrimaryKeyConstraintException
androidx.appcompat.widget.ActionBarOverlayLayout
io.reactivex.exceptions.MissingBackpressureException
io.reactivex.disposables.CompositeDisposable
io.reactivex.internal.operators.flowable.FlowableCreate
io.reactivex.internal.operators.observable.ObservableFlatMapCompletableCompletable$FlatMapCompletableMainObserver
io.reactivex.internal.subscriptions.DeferredScalarSubscription
androidx.versionedparcelable.ParcelImpl
io.reactivex.internal.operators.observable.ObservableSwitchMap$SwitchMapInnerObserver
io.reactivex.internal.schedulers.ScheduledRunnable
io.realm.RealmFieldType: io.realm.RealmFieldType MIXED_SET
com.squareup.moshi.StandardJsonAdapters$ObjectJsonAdapter: com.squareup.moshi.JsonAdapter mapAdapter
io.realm.exceptions.RealmFileException: io.realm.exceptions.RealmFileException$Kind kind
kotlinx.coroutines.CancellableContinuationImpl: java.lang.Object _state
io.realm.RealmFieldType: io.realm.RealmFieldType DECIMAL128_SET
io.realm.exceptions.RealmFileException$Kind: io.realm.exceptions.RealmFileException$Kind NOT_FOUND
androidx.activity.result.IntentSenderRequest: android.os.Parcelable$Creator CREATOR
io.realm.RealmFieldType: io.realm.RealmFieldType OBJECT_ID_LIST
io.realm.RealmFieldType: io.realm.RealmFieldType STRING_TO_DECIMAL128_MAP
io.realm.RealmFieldType: io.realm.RealmFieldType STRING
io.realm.RealmFieldType: io.realm.RealmFieldType BOOLEAN
com.squareup.moshi.ClassJsonAdapter: com.squareup.moshi.JsonAdapter$Factory FACTORY
io.realm.internal.OsSharedRealm: java.util.List sharedRealmsUnderConstruction
androidx.customview.view.AbsSavedState: android.os.Parcelable$Creator CREATOR
kotlinx.coroutines.scheduling.CoroutineScheduler: long controlState
com.squareup.moshi.StandardJsonAdapters$EnumJsonAdapter: java.lang.String[] nameStrings
io.realm.RealmFieldType: io.realm.RealmFieldType FLOAT_LIST
io.realm.internal.OsSharedRealm: java.util.List tempSharedRealmsForCallback
kotlinx.coroutines.JobSupport: java.lang.Object _parentHandle
com.google.android.material.appbar.AppBarLayout$BaseBehavior$SavedState: android.os.Parcelable$Creator CREATOR
kotlinx.coroutines.internal.ThreadSafeHeap: int _size
io.realm.exceptions.RealmFileException$Kind: io.realm.exceptions.RealmFileException$Kind FORMAT_UPGRADE_REQUIRED
io.realm.RealmFieldType: io.realm.RealmFieldType BOOLEAN_LIST
io.realm.internal.OsSharedRealm: byte FILE_EXCEPTION_KIND_PERMISSION_DENIED
com.google.android.exoplayer2.source.TrackGroup: android.os.Parcelable$Creator CREATOR
kotlinx.coroutines.scheduling.CoroutineScheduler: long parkedWorkersStack
com.google.android.exoplayer2.drm.DrmInitData: android.os.Parcelable$Creator CREATOR
com.google.android.exoplayer2.metadata.id3.TextInformationFrame: android.os.Parcelable$Creator CREATOR
androidx.appcompat.widget.AppCompatSpinner$SavedState: android.os.Parcelable$Creator CREATOR
io.realm.RealmFieldType: io.realm.RealmFieldType DATE
io.realm.RealmFieldType: int nativeValue
androidx.appcompat.widget.Toolbar$SavedState: android.os.Parcelable$Creator CREATOR
io.realm.RealmFieldType: io.realm.RealmFieldType STRING_TO_LINK_MAP
androidx.versionedparcelable.ParcelImpl: android.os.Parcelable$Creator CREATOR
io.realm.RealmFieldType: io.realm.RealmFieldType STRING_TO_BINARY_MAP
io.realm.RealmFieldType: io.realm.RealmFieldType DATE_SET
kotlinx.coroutines.internal.LockFreeLinkedListNode: java.lang.Object _next
io.realm.RealmFieldType: io.realm.RealmFieldType UUID
com.squareup.moshi.StandardJsonAdapters$EnumJsonAdapter: com.squareup.moshi.JsonReader$Options options
kotlinx.coroutines.scheduling.CoroutineScheduler$Worker: java.lang.Object nextParkedWorker
io.realm.internal.OsSharedRealm: io.realm.internal.OsSchemaInfo schemaInfo
io.realm.RealmFieldType: io.realm.RealmFieldType FLOAT
androidx.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem: android.os.Parcelable$Creator CREATOR
io.realm.internal.OsSharedRealm: long nativeFinalizerPtr
com.squareup.moshi.kotlin.reflect.KotlinJsonAdapter: java.util.List bindings
io.realm.internal.OsSharedRealm: byte FILE_EXCEPTION_KIND_NOT_FOUND
com.squareup.moshi.StandardJsonAdapters$ObjectJsonAdapter: com.squareup.moshi.JsonAdapter booleanAdapter
io.realm.RealmFieldType: io.realm.RealmFieldType DATE_LIST
io.realm.RealmFieldType: io.realm.RealmFieldType UUID_LIST
io.realm.internal.OsSharedRealm: byte FILE_EXCEPTION_KIND_EXISTS
kotlinx.coroutines.internal.LockFreeTaskQueueCore: long _state
io.realm.internal.OsSharedRealm: byte FILE_EXCEPTION_KIND_BAD_HISTORY
kotlinx.coroutines.internal.LockFreeTaskQueue: java.lang.Object _cur
io.realm.RealmFieldType: io.realm.RealmFieldType FLOAT_SET
com.google.android.exoplayer2.metadata.id3.BinaryFrame: android.os.Parcelable$Creator CREATOR
kotlin.SafePublicationLazyImpl: java.lang.Object _value
io.realm.exceptions.RealmMigrationNeededException: java.lang.String canonicalRealmPath
io.realm.exceptions.RealmFileException$Kind: io.realm.exceptions.RealmFileException$Kind PERMISSION_DENIED
com.google.android.exoplayer2.source.TrackGroupArray: android.os.Parcelable$Creator CREATOR
com.google.android.exoplayer2.metadata.scte35.TimeSignalCommand: android.os.Parcelable$Creator CREATOR
io.realm.RealmFieldType: io.realm.RealmFieldType[] setTypes
com.google.android.exoplayer2.metadata.id3.InternalFrame: android.os.Parcelable$Creator CREATOR
io.realm.exceptions.RealmFileException$Kind: io.realm.exceptions.RealmFileException$Kind BAD_HISTORY
io.realm.RealmFieldType: io.realm.RealmFieldType[] basicTypes
io.realm.internal.RealmNotifier: io.realm.internal.ObserverPairList realmObserverPairs
io.realm.internal.OsSharedRealm: byte FILE_EXCEPTION_INCOMPATIBLE_SYNC_FILE
androidx.viewpager2.widget.ViewPager2$SavedState: android.os.Parcelable$Creator CREATOR
io.realm.RealmFieldType: io.realm.RealmFieldType DECIMAL128_LIST
io.realm.RealmFieldType: io.realm.RealmFieldType BINARY
kotlinx.coroutines.scheduling.CoroutineScheduler: int _isTerminated
com.google.android.exoplayer2.metadata.id3.ApicFrame: android.os.Parcelable$Creator CREATOR
com.google.android.exoplayer2.metadata.id3.ChapterFrame: android.os.Parcelable$Creator CREATOR
io.realm.RealmFieldType: io.realm.RealmFieldType STRING_SET
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_RESUME
com.google.android.exoplayer2.Format: android.os.Parcelable$Creator CREATOR
com.google.android.exoplayer2.metadata.id3.UrlLinkFrame: android.os.Parcelable$Creator CREATOR
io.realm.RealmFieldType: io.realm.RealmFieldType[] $VALUES
androidx.coordinatorlayout.widget.CoordinatorLayout$SavedState: android.os.Parcelable$Creator CREATOR
io.realm.RealmFieldType: io.realm.RealmFieldType UUID_SET
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_STOP
com.google.android.exoplayer2.video.ColorInfo: android.os.Parcelable$Creator CREATOR
com.google.android.exoplayer2.metadata.id3.ChapterTocFrame: android.os.Parcelable$Creator CREATOR
com.bluelinelabs.conductor.internal.LifecycleHandler$PendingPermissionRequest: android.os.Parcelable$Creator CREATOR
com.squareup.moshi.StandardJsonAdapters$ObjectJsonAdapter: com.squareup.moshi.JsonAdapter doubleAdapter
io.realm.internal.core.NativeRealmAny: long nativeFinalizerPtr
com.squareup.moshi.StandardJsonAdapters$ObjectJsonAdapter: com.squareup.moshi.JsonAdapter listJsonAdapter
com.google.android.exoplayer2.metadata.id3.GeobFrame: android.os.Parcelable$Creator CREATOR
io.realm.RealmFieldType: io.realm.RealmFieldType STRING_TO_FLOAT_MAP
com.google.android.exoplayer2.metadata.Metadata: android.os.Parcelable$Creator CREATOR
io.realm.RealmFieldType: io.realm.RealmFieldType DOUBLE_LIST
io.realm.RealmFieldType: io.realm.RealmFieldType BINARY_LIST
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_ANY
io.realm.RealmFieldType: io.realm.RealmFieldType LINKING_OBJECTS
androidx.recyclerview.widget.LinearLayoutManager$SavedState: android.os.Parcelable$Creator CREATOR
io.realm.internal.OsSharedRealm: byte FILE_EXCEPTION_KIND_ACCESS_ERROR
kotlinx.coroutines.scheduling.CoroutineScheduler$Worker: int workerCtl
io.realm.RealmFieldType: io.realm.RealmFieldType[] mapTypes
com.squareup.moshi.StandardJsonAdapters$ObjectJsonAdapter: com.squareup.moshi.Moshi moshi
io.realm.RealmFieldType: io.realm.RealmFieldType BINARY_SET
com.squareup.moshi.ClassJsonAdapter: com.squareup.moshi.JsonReader$Options options
androidx.appcompat.app.AppCompatViewInflater: java.lang.String[] sClassPrefixList
io.realm.RealmFieldType: io.realm.RealmFieldType[] listTypes
androidx.appcompat.app.AppCompatViewInflater: java.lang.Class[] sConstructorSignature
kotlinx.coroutines.JobSupport: java.lang.Object _state
androidx.core.widget.NestedScrollView$SavedState: android.os.Parcelable$Creator CREATOR
kotlinx.coroutines.JobSupport$Finishing: java.lang.Object _exceptionsHolder
io.realm.exceptions.RealmFileException$Kind: io.realm.exceptions.RealmFileException$Kind INCOMPATIBLE_LOCK_FILE
io.realm.RealmFieldType: io.realm.RealmFieldType STRING_TO_UUID_MAP
kotlinx.coroutines.scheduling.LimitingDispatcher: int inFlightTasks
io.realm.RealmFieldType: io.realm.RealmFieldType LIST
io.realm.internal.OsSharedRealm: java.io.File temporaryDirectory
io.realm.RealmFieldType: io.realm.RealmFieldType TYPED_LINK
io.realm.exceptions.RealmFileException$Kind: io.realm.exceptions.RealmFileException$Kind EXISTS
io.realm.internal.RealmNotifier: io.realm.internal.OsSharedRealm sharedRealm
io.realm.RealmFieldType: io.realm.RealmFieldType BOOLEAN_SET
com.squareup.moshi.kotlin.reflect.KotlinJsonAdapter: com.squareup.moshi.JsonReader$Options options
com.squareup.moshi.MapJsonAdapter: com.squareup.moshi.JsonAdapter keyAdapter
com.google.android.exoplayer2.metadata.scte35.SpliceInsertCommand: android.os.Parcelable$Creator CREATOR
androidx.transition.ChangeBounds$7: androidx.transition.ChangeBounds$ViewBounds mViewBounds
io.realm.internal.RealmNotifier: java.util.List transactionCallbacks
androidx.fragment.app.FragmentManagerState: android.os.Parcelable$Creator CREATOR
com.google.android.flexbox.FlexboxLayout$LayoutParams: android.os.Parcelable$Creator CREATOR
androidx.drawerlayout.widget.DrawerLayout$SavedState: android.os.Parcelable$Creator CREATOR
io.realm.internal.OsSharedRealm: long nativePtr
com.squareup.moshi.ArrayJsonAdapter: com.squareup.moshi.JsonAdapter$Factory FACTORY
androidx.viewpager.widget.ViewPager$SavedState: android.os.Parcelable$Creator CREATOR
kotlinx.coroutines.internal.LockFreeTaskQueueCore: java.lang.Object _next
androidx.appcompat.app.AppCompatViewInflater: java.lang.Object[] mConstructorArgs
io.realm.RealmFieldType: io.realm.RealmFieldType STRING_TO_INTEGER_MAP
io.realm.RealmFieldType: io.realm.RealmFieldType STRING_LIST
androidx.fragment.app.BackStackState: android.os.Parcelable$Creator CREATOR
io.realm.RealmFieldType: io.realm.RealmFieldType STRING_TO_DOUBLE_MAP
androidx.recyclerview.widget.RecyclerView$SavedState: android.os.Parcelable$Creator CREATOR
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_CREATE
kotlinx.coroutines.android.HandlerContext: kotlinx.coroutines.android.HandlerContext _immediate
io.realm.internal.android.AndroidRealmNotifier: android.os.Handler handler
kotlinx.coroutines.internal.AtomicOp: java.lang.Object _consensus
kotlinx.coroutines.DefaultExecutor: int debugStatus
io.realm.internal.OsSharedRealm: byte FILE_EXCEPTION_KIND_INCOMPATIBLE_LOCK_FILE
kotlinx.coroutines.CommonPool: java.util.concurrent.Executor pool
kotlinx.coroutines.CompletedExceptionally: int _handled
com.squareup.moshi.StandardJsonAdapters$EnumJsonAdapter: java.lang.Class enumType
com.squareup.moshi.ArrayJsonAdapter: com.squareup.moshi.JsonAdapter elementAdapter
io.realm.RealmFieldType: io.realm.RealmFieldType STRING_TO_DATE_MAP
io.realm.internal.OsSharedRealm: io.realm.internal.NativeContext context
io.realm.internal.OsObject: long nativePtr
com.squareup.moshi.CollectionJsonAdapter: com.squareup.moshi.JsonAdapter$Factory FACTORY
kotlinx.coroutines.scheduling.WorkQueue: java.lang.Object lastScheduledTask
kotlinx.coroutines.DefaultExecutor: java.lang.Thread _thread
com.google.android.exoplayer2.drm.DrmInitData$SchemeData: android.os.Parcelable$Creator CREATOR
io.realm.RealmFieldType: io.realm.RealmFieldType DECIMAL128
com.squareup.moshi.StandardJsonAdapters$ObjectJsonAdapter: com.squareup.moshi.JsonAdapter stringAdapter
com.google.android.exoplayer2.metadata.scte35.SpliceNullCommand: android.os.Parcelable$Creator CREATOR
io.realm.RealmFieldType: io.realm.RealmFieldType INTEGER
io.realm.internal.OsSharedRealm: io.realm.internal.Capabilities capabilities
kotlinx.coroutines.android.HandlerDispatcherKt: android.view.Choreographer choreographer
com.google.android.exoplayer2.metadata.scte35.PrivateCommand: android.os.Parcelable$Creator CREATOR
com.squareup.moshi.ArrayJsonAdapter: java.lang.Class elementClass
io.realm.exceptions.RealmFileException$Kind: io.realm.exceptions.RealmFileException$Kind INCOMPATIBLE_SYNC_FILE
io.realm.internal.OsSharedRealm: io.realm.internal.RealmNotifier realmNotifier
com.google.android.flexbox.FlexboxLayoutManager$SavedState: android.os.Parcelable$Creator CREATOR
androidx.appcompat.app.AppCompatViewInflater: int[] sOnClickAttrs
com.squareup.moshi.MapJsonAdapter: com.squareup.moshi.JsonAdapter valueAdapter
io.realm.internal.OsSharedRealm: byte FILE_EXCEPTION_KIND_FORMAT_UPGRADE_REQUIRED
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_START
io.realm.RealmFieldType: io.realm.RealmFieldType STRING_TO_MIXED_MAP
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_DESTROY
com.google.android.exoplayer2.trackselection.DefaultTrackSelector$SelectionOverride: android.os.Parcelable$Creator CREATOR
io.realm.exceptions.RealmFileException$Kind: io.realm.exceptions.RealmFileException$Kind ACCESS_ERROR
com.google.android.exoplayer2.metadata.scte35.SpliceScheduleCommand: android.os.Parcelable$Creator CREATOR
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event[] $VALUES
kotlinx.coroutines.internal.DispatchedContinuation: java.lang.Object _reusableCancellableContinuation
io.realm.internal.OsSharedRealm: io.realm.internal.OsRealmConfig osRealmConfig
kotlinx.coroutines.internal.LockFreeLinkedListNode: java.lang.Object _prev
io.realm.internal.OsObject: io.realm.internal.ObserverPairList observerPairs
com.google.android.material.bottomsheet.BottomSheetBehavior$SavedState: android.os.Parcelable$Creator CREATOR
io.realm.RealmFieldType: io.realm.RealmFieldType OBJECT
io.realm.RealmFieldType: io.realm.RealmFieldType STRING_TO_BOOLEAN_MAP
kotlinx.coroutines.JobSupport$Finishing: java.lang.Object _rootCause
io.realm.internal.OsObject: long nativeFinalizerPtr
io.realm.internal.OsSharedRealm: java.util.List iterators
io.realm.RealmFieldType: io.realm.RealmFieldType MIXED
kotlinx.coroutines.EventLoopImplBase: int _isCompleted
com.google.android.exoplayer2.metadata.emsg.EventMessage: android.os.Parcelable$Creator CREATOR
kotlinx.coroutines.scheduling.WorkQueue: int consumerIndex
kotlinx.coroutines.JobSupport$Finishing: int _isCompleting
com.google.android.exoplayer2.trackselection.DefaultTrackSelector$Parameters: android.os.Parcelable$Creator CREATOR
kotlinx.coroutines.CancellableContinuationImpl: java.lang.Object _parentHandle
io.realm.exceptions.RealmFileException$Kind: io.realm.exceptions.RealmFileException$Kind[] $VALUES
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_PAUSE
io.realm.RealmFieldType: io.realm.RealmFieldType OBJECT_ID_SET
androidx.fragment.app.FragmentState: android.os.Parcelable$Creator CREATOR
kotlinx.coroutines.internal.LockFreeLinkedListNode: java.lang.Object _removedRef
io.realm.RealmFieldType: io.realm.RealmFieldType MIXED_LIST
com.google.android.exoplayer2.metadata.id3.PrivFrame: android.os.Parcelable$Creator CREATOR
io.realm.RealmFieldType: io.realm.RealmFieldType LINK_SET
com.google.android.flexbox.FlexboxLayoutManager$LayoutParams: android.os.Parcelable$Creator CREATOR
androidx.fragment.app.FragmentManager$LaunchedFragmentInfo: android.os.Parcelable$Creator CREATOR
androidx.recyclerview.widget.StaggeredGridLayoutManager$SavedState: android.os.Parcelable$Creator CREATOR
androidx.appcompat.app.AppCompatViewInflater: androidx.collection.SimpleArrayMap sConstructorMap
io.realm.RealmFieldType: io.realm.RealmFieldType DOUBLE_SET
kotlinx.coroutines.EventLoopImplBase: java.lang.Object _delayed
kotlinx.coroutines.scheduling.CoroutineScheduler$Worker: int indexInArray
io.realm.RealmFieldType: io.realm.RealmFieldType STRING_TO_STRING_MAP
io.realm.RealmFieldType: io.realm.RealmFieldType OBJECT_ID
com.google.android.exoplayer2.metadata.id3.CommentFrame: android.os.Parcelable$Creator CREATOR
kotlinx.coroutines.android.AndroidExceptionPreHandler: java.lang.Object _preHandler
kotlinx.coroutines.InvokeOnCancelling: int _invoked
io.realm.RealmFieldType: io.realm.RealmFieldType INTEGER_LIST
io.realm.RealmFieldType: io.realm.RealmFieldType STRING_TO_OBJECT_ID_MAP
io.realm.internal.OsSharedRealm: java.util.List pendingRows
com.google.android.material.stateful.ExtendableSavedState: android.os.Parcelable$Creator CREATOR
io.realm.internal.RealmNotifier: java.util.List finishedSendingNotificationsCallbacks
androidx.appcompat.widget.SearchView$SavedState: android.os.Parcelable$Creator CREATOR
androidx.activity.result.ActivityResult: android.os.Parcelable$Creator CREATOR
com.squareup.moshi.ClassJsonAdapter: com.squareup.moshi.ClassJsonAdapter$FieldBinding[] fieldsArray
kotlinx.coroutines.DispatchedCoroutine: int _decision
io.realm.RealmFieldType: io.realm.RealmFieldType INTEGER_SET
com.squareup.moshi.ClassJsonAdapter: com.squareup.moshi.ClassFactory classFactory
io.realm.internal.RealmNotifier: java.util.List startSendingNotificationsCallbacks
io.realm.internal.RealmNotifier: io.realm.internal.ObserverPairList$Callback onChangeCallBack
kotlinx.coroutines.EventLoopImplBase: java.lang.Object _queue
kotlinx.coroutines.scheduling.WorkQueue: int blockingTasksInBuffer
kotlinx.coroutines.scheduling.WorkQueue: int producerIndex
com.bluelinelabs.conductor.internal.StringSparseArrayParceler: android.os.Parcelable$Creator CREATOR
kotlinx.coroutines.CancelledContinuation: int _resumed
com.squareup.moshi.MapJsonAdapter: com.squareup.moshi.JsonAdapter$Factory FACTORY
com.callcontrol.datashare.CallControl$Report: android.os.Parcelable$Creator CREATOR
com.squareup.moshi.CollectionJsonAdapter: com.squareup.moshi.JsonAdapter elementAdapter
com.squareup.moshi.StandardJsonAdapters$EnumJsonAdapter: java.lang.Enum[] constants
io.realm.internal.core.NativeRealmAny: long nativePtr
com.squareup.moshi.kotlin.reflect.KotlinJsonAdapter: kotlin.reflect.KFunction constructor
kotlin.coroutines.AbstractCoroutineContextElement: kotlin.coroutines.CoroutineContext$Key key
io.realm.RealmFieldType: io.realm.RealmFieldType DOUBLE
kotlinx.coroutines.CancellableContinuationImpl: int _decision
androidx.appcompat.app.AppCompatViewInflater: java.lang.String LOG_TAG
dev.octoshrimpy.quik.common.widget.BubbleImageView$Style: dev.octoshrimpy.quik.common.widget.BubbleImageView$Style[] values()
com.bumptech.glide.MemoryCategory: com.bumptech.glide.MemoryCategory valueOf(java.lang.String)
io.realm.internal.core.NativeRealmAny: java.lang.String asString()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: int getFillColor()
io.realm.internal.UncheckedRow: long[] nativeGetDecimal128(long,long)
io.realm.internal.OsObject: void removeListener(io.realm.RealmModel)
androidx.viewpager.widget.ViewPager: int getPageMargin()
androidx.appcompat.widget.Toolbar: void setOverflowIcon(android.graphics.drawable.Drawable)
com.google.android.material.appbar.CollapsingToolbarLayout: void setScrimVisibleHeightTrigger(int)
androidx.recyclerview.widget.RecyclerView: int getScrollState()
io.realm.internal.TableQuery: long nativeFind(long)
io.realm.DynamicRealmObject$CollectionType: io.realm.DynamicRealmObject$CollectionType valueOf(java.lang.String)
androidx.core.view.WindowInsetsCompat$Impl: androidx.core.view.WindowInsetsCompat consumeSystemWindowInsets()
io.realm.internal.objectstore.OsObjectBuilder: void nativeAddDateListItem(long,long)
io.realm.internal.UncheckedRow: long nativeGetFinalizerPtr()
com.jakewharton.rxbinding2.internal.Notification: com.jakewharton.rxbinding2.internal.Notification[] values()
io.realm.internal.Table: void nativeMoveLastOver(long,long)
io.realm.internal.core.NativeRealmAnyCollection: long nativeCreateBooleanCollection(boolean[],boolean[])
io.reactivex.internal.functions.Functions$ErrorConsumer: Functions$ErrorConsumer()
io.realm.internal.Property: long nativeCreatePersistedProperty(java.lang.String,java.lang.String,int,boolean,boolean)
dev.octoshrimpy.quik.common.widget.QkTextView: void setTextColor(int)
io.realm.internal.Table: long nativeAddColumnLink(long,int,java.lang.String,long)
io.realm.internal.OsList: void nativeInsertDate(long,long,long)
androidx.appcompat.widget.AppCompatSpinner: void setSupportBackgroundTintList(android.content.res.ColorStateList)
io.reactivex.internal.functions.Functions$EmptyAction: Functions$EmptyAction()
io.realm.internal.OsSharedRealm: void renameTable(java.lang.String,java.lang.String)
io.realm.internal.objectstore.OsObjectBuilder: void nativeAddBooleanListItem(long,boolean)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityResumed(android.app.Activity)
io.realm.internal.OsSharedRealm: void removePendingRow(io.realm.internal.PendingRow)
androidx.appcompat.widget.ActionBarOverlayLayout: void setWindowCallback(android.view.Window$Callback)
io.realm.internal.CheckedRow: void nativeSetByteArray(long,long,byte[])
kotlin.reflect.jvm.internal.impl.renderer.AnnotationArgumentsRenderingPolicy: kotlin.reflect.jvm.internal.impl.renderer.AnnotationArgumentsRenderingPolicy valueOf(java.lang.String)
androidx.appcompat.widget.ActionBarContextView: int getContentHeight()
com.google.android.material.internal.CheckableImageButton: CheckableImageButton(android.content.Context,android.util.AttributeSet)
com.google.android.flexbox.FlexboxLayout: int getJustifyContent()
com.google.android.material.theme.MaterialComponentsViewInflater: MaterialComponentsViewInflater()
androidx.appcompat.widget.AppCompatTextView: void setSupportBackgroundTintList(android.content.res.ColorStateList)
com.google.android.material.button.MaterialButton: int getCornerRadius()
io.reactivex.internal.util.ErrorMode: io.reactivex.internal.util.ErrorMode valueOf(java.lang.String)
io.realm.internal.Table: java.lang.String nativeGetName(long)
io.realm.internal.core.NativeRealmAnyCollection: long nativeCreateObjectCollection(long[],boolean[])
com.google.android.material.snackbar.SnackbarContentLayout: android.widget.Button getActionView()
com.google.android.exoplayer2.ui.DefaultTimeBar: void setPosition(long)
com.google.android.exoplayer2.ui.PlayerView: void setShutterBackgroundColor(int)
kotlin.reflect.jvm.internal.impl.load.kotlin.header.KotlinClassHeader$Kind: kotlin.reflect.jvm.internal.impl.load.kotlin.header.KotlinClassHeader$Kind[] values()
io.realm.internal.OsSet: long nativeGetRow(long,int)
io.reactivex.BackpressureStrategy: io.reactivex.BackpressureStrategy[] values()
com.google.android.material.transformation.FabTransformationBehavior: FabTransformationBehavior(android.content.Context,android.util.AttributeSet)
ezvcard.Messages: ezvcard.Messages[] values()
androidx.appcompat.widget.AppCompatRadioButton: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
com.google.android.material.floatingactionbutton.FloatingActionButton: void setCustomSize(int)
io.realm.internal.OsList: void nativeAddBinary(long,byte[])
androidx.appcompat.widget.AppCompatAutoCompleteTextView: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
com.squareup.moshi.StandardJsonAdapters$EnumJsonAdapter: StandardJsonAdapters$EnumJsonAdapter(java.lang.Class)
io.realm.internal.TableQuery: void nativeEndGroup(long)
androidx.appcompat.widget.AppCompatTextView: void setTextFuture(java.util.concurrent.Future)
kotlinx.coroutines.rx2.Mode: kotlinx.coroutines.rx2.Mode valueOf(java.lang.String)
io.realm.exceptions.RealmFileException$Kind: io.realm.exceptions.RealmFileException$Kind getKind(byte)
dev.octoshrimpy.quik.feature.themepicker.HSVPickerView: void setColor(int)
androidx.drawerlayout.widget.DrawerLayout: float getDrawerElevation()
com.google.android.flexbox.FlexboxLayout: int getFlexItemCount()
androidx.appcompat.app.AppCompatViewInflater: androidx.appcompat.widget.AppCompatRadioButton createRadioButton(android.content.Context,android.util.AttributeSet)
androidx.appcompat.widget.AppCompatTextView: void setPrecomputedText(androidx.core.text.PrecomputedTextCompat)
androidx.core.view.ViewCompat$Api21Impl$1: ViewCompat$Api21Impl$1(android.view.View,androidx.core.view.OnApplyWindowInsetsListener)
dev.octoshrimpy.quik.feature.settings.SettingsActivity: SettingsActivity()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: void setFillColor(int)
io.realm.internal.OsSharedRealm: boolean isAutoRefresh()
com.google.android.material.appbar.CollapsingToolbarLayout: int getExpandedTitleMarginBottom()
io.reactivex.internal.util.NotificationLite: io.reactivex.internal.util.NotificationLite valueOf(java.lang.String)
dev.octoshrimpy.quik.feature.plus.PlusActivity: PlusActivity()
androidx.coordinatorlayout.widget.CoordinatorLayout: void setOnHierarchyChangeListener(android.view.ViewGroup$OnHierarchyChangeListener)
com.github.chrisbanes.photoview.PhotoView: PhotoView(android.content.Context,android.util.AttributeSet)
androidx.appcompat.widget.AppCompatTextView: void setSupportCompoundDrawablesTintList(android.content.res.ColorStateList)
androidx.appcompat.widget.AppCompatSpinner: void setAdapter(android.widget.SpinnerAdapter)
androidx.appcompat.widget.Toolbar: void setCollapseContentDescription(java.lang.CharSequence)
androidx.constraintlayout.solver.widgets.ConstraintWidget$DimensionBehaviour: androidx.constraintlayout.solver.widgets.ConstraintWidget$DimensionBehaviour[] values()
androidx.appcompat.widget.SearchView$SearchAutoComplete: void setImeVisibility(boolean)
io.realm.internal.core.NativeRealmAny: NativeRealmAny(java.util.Date)
com.google.android.flexbox.FlexboxLayout: void setFlexLines(java.util.List)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: android.graphics.Matrix getLocalMatrix()
io.realm.internal.RealmNotifier: boolean post(java.lang.Runnable)
io.reactivex.internal.functions.Functions$EmptyLongConsumer: Functions$EmptyLongConsumer()
androidx.appcompat.widget.AppCompatRadioButton: void setSupportButtonTintList(android.content.res.ColorStateList)
io.realm.internal.UncheckedRow: java.lang.String nativeGetObjectId(long,long)
androidx.constraintlayout.widget.ConstraintLayout: void setConstraintSet(androidx.constraintlayout.widget.ConstraintSet)
androidx.recyclerview.widget.RecyclerView: void setScrollingTouchSlop(int)
dev.octoshrimpy.quik.feature.blocking.manager.BlockingManagerPreferenceView: void setTitle(java.lang.String)
io.realm.internal.OsMap: boolean nativeContainsDate(long,long)
androidx.appcompat.widget.AppCompatImageButton: void setSupportImageTintMode(android.graphics.PorterDuff$Mode)
androidx.emoji.widget.ExtractButtonCompat: void setCustomSelectionActionModeCallback(android.view.ActionMode$Callback)
androidx.constraintlayout.widget.ConstraintLayout: int getOptimizationLevel()
io.realm.internal.OsObject: long nativeGetFinalizerPtr()
com.google.android.exoplayer2.ui.PlayerControlView: void setPlaybackPreparer(com.google.android.exoplayer2.PlaybackPreparer)
androidx.recyclerview.widget.StaggeredGridLayoutManager: StaggeredGridLayoutManager(android.content.Context,android.util.AttributeSet,int,int)
io.realm.internal.objectstore.OsObjectBuilder: void nativeAddObjectIdSetItem(long,java.lang.String)
com.google.android.flexbox.FlexboxLayout: int getLargestMainSize()
androidx.constraintlayout.widget.ConstraintLayout: void setOptimizationLevel(int)
androidx.recyclerview.widget.RecyclerView: java.lang.CharSequence getAccessibilityClassName()
com.google.android.material.floatingactionbutton.FloatingActionButton: void setUseCompatPadding(boolean)
androidx.appcompat.widget.ActionBarOverlayLayout: void setLogo(int)
me.leolin.shortcutbadger.impl.DefaultBadger: DefaultBadger()
androidx.appcompat.widget.AppCompatCheckBox: void setBackgroundDrawable(android.graphics.drawable.Drawable)
io.realm.internal.objectstore.OsObjectBuilder: void nativeAddObjectList(long,long,long[])
androidx.appcompat.widget.AppCompatTextView: java.lang.CharSequence getText()
dev.octoshrimpy.quik.feature.blocking.manager.BlockingManagerPreferenceView: void setSummary(java.lang.String)
io.realm.exceptions.RealmFileException: RealmFileException(io.realm.exceptions.RealmFileException$Kind,java.lang.String)
io.realm.internal.OsSharedRealm: long nativeFreeze(long)
androidx.appcompat.widget.AppCompatButton: void setAutoSizeTextTypeWithDefaults(int)
com.google.android.material.button.MaterialButton: void setIconTint(android.content.res.ColorStateList)
kotlin.reflect.jvm.internal.impl.incremental.components.NoLookupLocation: kotlin.reflect.jvm.internal.impl.incremental.components.NoLookupLocation valueOf(java.lang.String)
io.reactivex.Flowable: Flowable()
com.github.chrisbanes.photoview.PhotoView: void setOnPhotoTapListener(com.github.chrisbanes.photoview.OnPhotoTapListener)
io.realm.internal.OsList: void nativeInsertLong(long,long,long)
io.realm.internal.CheckedRow: java.lang.String nativeGetObjectId(long,long)
androidx.appcompat.widget.Toolbar: android.graphics.drawable.Drawable getNavigationIcon()
dev.octoshrimpy.quik.receiver.SmsProviderChangedReceiver: SmsProviderChangedReceiver()
io.realm.annotations.RealmNamingPolicy: io.realm.annotations.RealmNamingPolicy valueOf(java.lang.String)
com.google.android.material.theme.MaterialComponentsViewInflater: androidx.appcompat.widget.AppCompatButton createButton(android.content.Context,android.util.AttributeSet)
androidx.appcompat.widget.AppCompatCheckBox: void setButtonDrawable(int)
androidx.core.view.WindowInsetsCompat$Impl29: androidx.core.view.WindowInsetsCompat inset(int,int,int,int)
io.realm.internal.OsResults: long nativeGetFinalizerPtr()
io.realm.internal.OsSet: long[] nativeAddDecimal128(long,long,long)
androidx.appcompat.widget.AppCompatTextView: void setTextMetricsParamsCompat(androidx.core.text.PrecomputedTextCompat$Params)
androidx.core.graphics.drawable.IconCompatParcelizer: androidx.core.graphics.drawable.IconCompat read(androidx.versionedparcelable.VersionedParcel)
com.google.android.exoplayer2.ui.PlayerControlView: int getShowTimeoutMs()
androidx.core.view.ViewCompat$Api21Impl: androidx.core.view.WindowInsetsCompat getRootWindowInsets(android.view.View)
io.realm.internal.OsSet: long[] nativeRemoveDate(long,long)
io.realm.mongodb.sync.SubscriptionSet$StateChangeCallback: void onStateChange(io.realm.mongodb.sync.SubscriptionSet)
io.realm.internal.OsSharedRealm: long getNativePtr()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPath: androidx.core.graphics.PathParser$PathDataNode[] getPathData()
androidx.appcompat.widget.AppCompatRadioButton: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
com.google.android.material.appbar.CollapsingToolbarLayout: void setVisibility(int)
androidx.appcompat.widget.AppCompatTextView: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
androidx.appcompat.widget.ActionBarContextView: void setTitleOptional(boolean)
com.google.android.flexbox.FlexboxLayout: int getFlexDirection()
io.realm.internal.core.NativeRealmAny: byte[] nativeAsBinary(long)
com.google.android.material.appbar.CollapsingToolbarLayout: void setScrimsShown(boolean)
androidx.appcompat.widget.ActionBarOverlayLayout: int getActionBarHideOffset()
io.realm.internal.objectstore.OsObjectBuilder: void nativeAddFloatDictionaryEntry(long,java.lang.String,float)
io.realm.internal.OsObjectSchemaInfo: long nativeCreateRealmObjectSchema(java.lang.String,java.lang.String,boolean)
androidx.appcompat.widget.ViewStubCompat: void setInflatedId(int)
com.google.android.exoplayer2.ui.spherical.SphericalSurfaceView: void setSurfaceListener(com.google.android.exoplayer2.ui.spherical.SphericalSurfaceView$SurfaceListener)
com.github.chrisbanes.photoview.PhotoView: void setOnScaleChangeListener(com.github.chrisbanes.photoview.OnScaleChangedListener)
kotlin.reflect.jvm.internal.impl.metadata.ProtoBuf$TypeParameter$Variance: kotlin.reflect.jvm.internal.impl.metadata.ProtoBuf$TypeParameter$Variance valueOf(java.lang.String)
com.google.android.material.appbar.CollapsingToolbarLayout: void setCollapsedTitleTypeface(android.graphics.Typeface)
com.google.android.material.snackbar.BaseTransientBottomBar$Behavior: BaseTransientBottomBar$Behavior()
dev.octoshrimpy.quik.common.widget.PagerTitleView: dev.octoshrimpy.quik.repository.ConversationRepository getConversationRepo()
io.realm.internal.OsObject: long nativeCreateNewObjectWithStringPrimaryKey(long,long,long,java.lang.String)
androidx.appcompat.widget.FitWindowsFrameLayout: void setOnFitSystemWindowsListener(androidx.appcompat.widget.FitWindowsViewGroup$OnFitSystemWindowsListener)
com.google.android.exoplayer2.ui.SubtitleView: void setCues(java.util.List)
androidx.appcompat.widget.AlertDialogLayout: AlertDialogLayout(android.content.Context,android.util.AttributeSet)
kotlin.reflect.jvm.internal.impl.types.checker.TypeCheckerContext$LowerCapturedTypePolicy: kotlin.reflect.jvm.internal.impl.types.checker.TypeCheckerContext$LowerCapturedTypePolicy[] values()
io.reactivex.internal.functions.Functions$EmptyRunnable: Functions$EmptyRunnable()
io.realm.internal.CheckedRow: void nativeSetBoolean(long,long,boolean)
dev.octoshrimpy.quik.common.widget.AvatarView: void setNavigator(dev.octoshrimpy.quik.common.Navigator)
androidx.appcompat.widget.Toolbar: int getTitleMarginEnd()
io.reactivex.internal.observers.BlockingBaseObserver: BlockingBaseObserver()
androidx.viewpager.widget.ViewPager: void setScrollingCacheEnabled(boolean)
androidx.appcompat.widget.SwitchCompat: void setTrackTintList(android.content.res.ColorStateList)
io.realm.internal.OsSet: boolean nativeAddAllRealmAnyCollection(long,long)
androidx.appcompat.widget.AppCompatImageView: android.graphics.PorterDuff$Mode getSupportImageTintMode()
kotlin.coroutines.intrinsics.CoroutineSingletons: kotlin.coroutines.intrinsics.CoroutineSingletons valueOf(java.lang.String)
androidx.appcompat.widget.AppCompatTextView: void setBackgroundDrawable(android.graphics.drawable.Drawable)
androidx.core.view.WindowInsetsCompat$Impl: void setOverriddenInsets(androidx.core.graphics.Insets[])
io.realm.internal.OsObjectSchemaInfo: void nativeAddProperties(long,long[],long[])
androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type: androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type valueOf(java.lang.String)
io.reactivex.internal.subscriptions.SubscriptionHelper: io.reactivex.internal.subscriptions.SubscriptionHelper valueOf(java.lang.String)
com.google.android.material.bottomappbar.BottomAppBar$Behavior: BottomAppBar$Behavior(android.content.Context,android.util.AttributeSet)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivitySaveInstanceState(android.app.Activity,android.os.Bundle)
kotlinx.coroutines.android.AndroidDispatcherFactory: java.lang.String hintOnError()
com.google.android.exoplayer2.ui.spherical.SphericalSurfaceView: void setSingleTapListener(com.google.android.exoplayer2.ui.spherical.SingleTapListener)
com.google.android.material.button.MaterialButton: void setIconPadding(int)
io.realm.internal.OsRealmConfig: long nativeGetFinalizerPtr()
io.realm.internal.OsObject: long nativeCreateRowWithUUIDPrimaryKey(long,long,long,java.lang.String)
io.realm.internal.objectstore.OsObjectBuilder: void nativeAddBinaryDictionaryEntry(long,java.lang.String,byte[])
io.realm.internal.OsMap: boolean nativeContainsKey(long,java.lang.String)
me.leolin.shortcutbadger.impl.NewHtcHomeBadger: NewHtcHomeBadger()
com.bumptech.glide.request.SingleRequest$Status: com.bumptech.glide.request.SingleRequest$Status valueOf(java.lang.String)
io.realm.internal.core.NativeRealmAny: NativeRealmAny(java.lang.String)
io.realm.internal.OsSet: long[] nativeRemoveNull(long)
com.google.android.material.button.MaterialButton: int getStrokeWidth()
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityPreDestroyed(android.app.Activity)
io.realm.internal.OsObject: long createRowWithPrimaryKey(io.realm.internal.Table,long,java.lang.Object)
androidx.recyclerview.widget.RecyclerView: void setScrollState(int)
io.realm.internal.OsSchemaInfo: long nativeGetFinalizerPtr()
io.realm.DynamicRealmObject$CollectionType: io.realm.DynamicRealmObject$CollectionType[] values()
androidx.appcompat.widget.ActionBarContextView: int getAnimatedVisibility()
androidx.appcompat.widget.Toolbar: Toolbar(android.content.Context,android.util.AttributeSet)
io.reactivex.internal.schedulers.IoScheduler: IoScheduler()
io.realm.internal.OsSharedRealm: boolean isEmpty()
androidx.appcompat.widget.AppCompatCheckBox: void setSupportButtonTintList(android.content.res.ColorStateList)
androidx.appcompat.widget.AppCompatImageButton: android.content.res.ColorStateList getSupportBackgroundTintList()
androidx.drawerlayout.widget.DrawerLayout: android.graphics.drawable.Drawable getStatusBarBackgroundDrawable()
io.realm.internal.OsSharedRealm: io.realm.RealmConfiguration getConfiguration()
com.google.android.material.floatingactionbutton.FloatingActionButton: com.google.android.material.animation.MotionSpec getShowMotionSpec()
io.realm.internal.OsSharedRealm: OsSharedRealm(long,io.realm.internal.OsRealmConfig,io.realm.internal.NativeContext)
io.realm.internal.OsResults: void nativeEvaluateQueryIfNeeded(long,boolean)
androidx.viewpager2.widget.ViewPager2: void setAdapter(androidx.recyclerview.widget.RecyclerView$Adapter)
com.google.android.flexbox.FlexboxLayout: FlexboxLayout(android.content.Context,android.util.AttributeSet)
dev.octoshrimpy.quik.feature.backup.RestoreBackupService: RestoreBackupService()
androidx.appcompat.widget.LinearLayoutCompat: int getOrientation()
com.bumptech.glide.load.ImageHeaderParser$ImageType: com.bumptech.glide.load.ImageHeaderParser$ImageType valueOf(java.lang.String)
org.bson.types.ObjectId: ObjectId(int,int)
dev.octoshrimpy.quik.feature.blocking.numbers.BlockedNumbersController: BlockedNumbersController()
io.realm.internal.OsObject: long getAndVerifyPrimaryKeyColumnIndex(io.realm.internal.Table)
dev.octoshrimpy.quik.common.QKApplication: QKApplication()
androidx.core.content.FileProvider: FileProvider()
androidx.appcompat.widget.ActionBarContextView: void setContentHeight(int)
io.realm.internal.OsSet: long[] nativeRemoveBoolean(long,boolean)
io.realm.internal.OsSharedRealm: void commitTransaction()
io.realm.internal.objectstore.OsObjectBuilder: void nativeAddIntegerDictionaryEntry(long,java.lang.String,long)
androidx.appcompat.widget.ActionBarOverlayLayout: void setOverlayMode(boolean)
androidx.constraintlayout.widget.Barrier: int getType()
io.realm.internal.OsMap: boolean nativeContainsRealmAny(long,long)
io.realm.internal.InvalidRow: io.realm.internal.InvalidRow[] values()
com.google.android.exoplayer2.ui.PlayerControlView: void setFastForwardIncrementMs(int)
kotlin.reflect.jvm.internal.impl.types.TypeSubstitutor$VarianceConflictType: kotlin.reflect.jvm.internal.impl.types.TypeSubstitutor$VarianceConflictType valueOf(java.lang.String)
io.realm.internal.OsSharedRealm: io.realm.internal.OsSharedRealm$VersionID getVersionID()
com.google.android.material.appbar.AppBarLayout$Behavior: AppBarLayout$Behavior()
androidx.core.view.WindowInsetsCompat$Impl28: androidx.core.view.DisplayCutoutCompat getDisplayCutout()
io.realm.internal.OsSharedRealm: io.realm.internal.Table getTable(java.lang.String)
io.realm.internal.OsSharedRealm: boolean isInTransaction()
io.realm.internal.OsSharedRealm: long getNativeFinalizerPtr()
androidx.appcompat.widget.ContentFrameLayout: android.util.TypedValue getFixedHeightMajor()
androidx.core.view.WindowInsetsCompat$Impl30: WindowInsetsCompat$Impl30(androidx.core.view.WindowInsetsCompat,android.view.WindowInsets)
io.realm.internal.TableQuery: java.lang.String nativeValidateQuery(long)
io.realm.internal.OsSet: boolean nativeContainsFloat(long,float)
androidx.core.widget.NestedScrollView: void setNestedScrollingEnabled(boolean)
io.reactivex.internal.disposables.DisposableHelper: io.reactivex.internal.disposables.DisposableHelper valueOf(java.lang.String)
io.realm.internal.OsMap: void nativePutRow(long,java.lang.String,long)
kotlin.coroutines.intrinsics.CoroutineSingletons: kotlin.coroutines.intrinsics.CoroutineSingletons[] values()
kotlinx.coroutines.rx2.Mode: kotlinx.coroutines.rx2.Mode[] values()
com.google.android.material.appbar.CollapsingToolbarLayout: void setStatusBarScrimColor(int)
androidx.appcompat.widget.AppCompatEditText: void setTextClassifier(android.view.textclassifier.TextClassifier)
io.realm.internal.OsList: long nativeGetFinalizerPtr()
io.realm.internal.CheckedRow: long nativeGetColumnKey(long,java.lang.String)
com.google.android.material.floatingactionbutton.FloatingActionButton: float getCompatPressedTranslationZ()
androidx.appcompat.widget.AppCompatButton: int getAutoSizeStepGranularity()
dev.octoshrimpy.quik.common.widget.RadioPreferenceView: java.lang.String getTitle()
io.realm.internal.TableQuery: void nativeOr(long)
com.google.android.material.transformation.ExpandableTransformationBehavior: ExpandableTransformationBehavior()
androidx.appcompat.widget.AppCompatCheckBox: void setBackgroundResource(int)
io.realm.internal.OsList: void nativeInsertDecimal128(long,long,long,long)
kotlinx.coroutines.android.AndroidExceptionPreHandler: java.lang.reflect.Method preHandler()
io.realm.internal.OsMap: boolean nativeContainsBoolean(long,boolean)
androidx.appcompat.widget.ButtonBarLayout: void setStacked(boolean)
io.realm.internal.OsSet: boolean nativeContainsAll(long,long)
androidx.fragment.app.SpecialEffectsController$Operation$LifecycleImpact: androidx.fragment.app.SpecialEffectsController$Operation$LifecycleImpact[] values()
androidx.appcompat.widget.AppCompatEditText: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
com.google.android.material.floatingactionbutton.FloatingActionButton: android.content.res.ColorStateList getBackgroundTintList()
androidx.viewpager.widget.ViewPager: ViewPager(android.content.Context,android.util.AttributeSet)
com.bumptech.glide.load.DecodeFormat: com.bumptech.glide.load.DecodeFormat valueOf(java.lang.String)
kotlin.reflect.jvm.internal.AnnotationConstructorCaller$CallMode: kotlin.reflect.jvm.internal.AnnotationConstructorCaller$CallMode[] values()
com.squareup.moshi.JsonReader$Token: com.squareup.moshi.JsonReader$Token valueOf(java.lang.String)
me.leolin.shortcutbadger.impl.NovaHomeBadger: NovaHomeBadger()
androidx.appcompat.widget.AppCompatRadioButton: void setBackgroundDrawable(android.graphics.drawable.Drawable)
androidx.recyclerview.widget.RecyclerView: void setClipToPadding(boolean)
io.realm.internal.objectstore.OsObjectBuilder: void nativeAddIntegerSetItem(long,long)
androidx.appcompat.widget.ActionBarContainer: void setVisibility(int)
dev.octoshrimpy.quik.common.widget.BubbleImageView: BubbleImageView(android.content.Context,android.util.AttributeSet)
org.bson.types.ObjectId: ObjectId(java.util.Date,int,short,int)
androidx.constraintlayout.widget.Group: Group(android.content.Context,android.util.AttributeSet)
io.realm.internal.OsSharedRealm: boolean isFrozen()
androidx.appcompat.widget.Toolbar: void setSubtitle(int)
dev.octoshrimpy.quik.manager.ChangelogManagerImpl$Changeset: dev.octoshrimpy.quik.manager.ChangelogManagerImpl$Changeset copy(java.util.List,java.util.List,java.util.List,java.util.List,java.lang.String,int)
androidx.appcompat.widget.AppCompatTextView: void setLastBaselineToBottomHeight(int)
com.uber.autodispose.android.internal.MainThreadDisposable: MainThreadDisposable()
com.google.android.exoplayer2.ui.PlayerControlView: void setShowShuffleButton(boolean)
androidx.appcompat.widget.ActionBarOverlayLayout: void setShowingForActionMode(boolean)
io.realm.internal.objectstore.OsObjectBuilder: long nativeCreateOrUpdateTopLevelObject(long,long,long,boolean,boolean)
io.realm.internal.OsSet: boolean nativeContainsUUID(long,java.lang.String)
androidx.constraintlayout.widget.Guideline: void setGuidelineEnd(int)
io.realm.internal.OsSharedRealm: void setAutoRefresh(boolean)
com.bumptech.glide.load.ImageHeaderParser$ImageType: com.bumptech.glide.load.ImageHeaderParser$ImageType[] values()
kotlin.reflect.jvm.internal.impl.incremental.components.ScopeKind: kotlin.reflect.jvm.internal.impl.incremental.components.ScopeKind valueOf(java.lang.String)
io.realm.internal.OsSharedRealm: void nativeSetAutoRefresh(long,boolean)
androidx.viewpager2.widget.ViewPager2: java.lang.CharSequence getAccessibilityClassName()
com.bluelinelabs.conductor.archlifecycle.LifecycleController: LifecycleController(android.os.Bundle)
com.google.android.material.appbar.AppBarLayout: int getUpNestedPreScrollRange()
io.realm.internal.core.NativeRealmAny: long asLong()
com.google.android.exoplayer2.ui.SubtitleView: void setApplyEmbeddedFontSizes(boolean)
androidx.appcompat.widget.Toolbar: int getCurrentContentInsetEnd()
androidx.core.view.WindowInsetsCompat$BuilderImpl20: void setStableInsets(androidx.core.graphics.Insets)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityPostCreated(android.app.Activity,android.os.Bundle)
io.realm.internal.core.NativeRealmAny: org.bson.types.Decimal128 asDecimal128()
com.google.android.exoplayer2.ui.PlayerView: void setShowBuffering(boolean)
androidx.appcompat.widget.AppCompatSpinner: void setDropDownWidth(int)
kotlin.reflect.jvm.internal.impl.load.java.BuiltinMethodsWithSpecialGenericSignature$TypeSafeBarrierDescription: kotlin.reflect.jvm.internal.impl.load.java.BuiltinMethodsWithSpecialGenericSignature$TypeSafeBarrierDescription valueOf(java.lang.String)
io.realm.internal.OsList: long nativeCreateAndSetEmbeddedObject(long,long)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: float getTrimPathEnd()
androidx.appcompat.widget.Toolbar: void setTitle(java.lang.CharSequence)
io.realm.Sort: io.realm.Sort[] values()
dev.octoshrimpy.quik.feature.blocking.messages.BlockedMessagesController: BlockedMessagesController()
io.realm.internal.OsResults: long nativeCreateResults(long,long)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: void setScaleY(float)
com.google.android.material.button.MaterialButton: android.content.res.ColorStateList getBackgroundTintList()
io.reactivex.observers.DisposableCompletableObserver: DisposableCompletableObserver()
io.realm.internal.Table: void nativeSetString(long,long,long,java.lang.String,boolean)
com.google.android.exoplayer2.ui.PlayerView: void setControlDispatcher(com.google.android.exoplayer2.ControlDispatcher)
androidx.core.view.WindowInsetsCompat$BuilderImpl29: void setStableInsets(androidx.core.graphics.Insets)
com.github.chrisbanes.photoview.PhotoView: float getScale()
androidx.appcompat.widget.ActionMenuView: int getPopupTheme()
io.realm.internal.OsObject: long createEmbeddedObject(io.realm.internal.Table,long,long)
androidx.lifecycle.Lifecycle$State: androidx.lifecycle.Lifecycle$State[] values()
kotlin.reflect.jvm.internal.impl.protobuf.AbstractMessageLite: AbstractMessageLite()
io.realm.mongodb.sync.SubscriptionSet$StateChangeCallback: void onError(java.lang.Throwable)
com.uber.rxdogtag.RxDogTag$Builder: RxDogTag$Builder()
io.realm.internal.OsList: void nativeInsertDouble(long,long,double)
androidx.appcompat.widget.Toolbar: void setTitleMarginTop(int)
androidx.core.view.WindowInsetsCompat$Impl28: androidx.core.view.WindowInsetsCompat consumeDisplayCutout()
androidx.core.view.WindowInsetsCompat$Impl21: androidx.core.view.WindowInsetsCompat consumeSystemWindowInsets()
io.realm.internal.OsResults$Mode: io.realm.internal.OsResults$Mode valueOf(java.lang.String)
androidx.core.app.CoreComponentFactory: CoreComponentFactory()
androidx.appcompat.widget.ViewStubCompat: void setLayoutResource(int)
androidx.core.view.WindowInsetsCompat$BuilderImpl: void applyInsetTypes()
com.google.android.material.floatingactionbutton.FloatingActionButton: com.google.android.material.floatingactionbutton.FloatingActionButtonImpl getImpl()
io.realm.internal.OsRealmConfig: void nativeSetInMemory(long,boolean)
androidx.recyclerview.widget.RecyclerView: void setAccessibilityDelegateCompat(androidx.recyclerview.widget.RecyclerViewAccessibilityDelegate)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: int getRootAlpha()
io.realm.internal.OsSet: long[] nativeAddFloat(long,float)
androidx.appcompat.widget.AppCompatImageView: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
androidx.appcompat.widget.Toolbar: int getPopupTheme()
androidx.emoji.widget.EmojiExtractEditText: int getMaxEmojiCount()
com.uber.autodispose.AutoDisposableHelper: com.uber.autodispose.AutoDisposableHelper[] values()
com.google.android.material.internal.CheckableImageButton: void setChecked(boolean)
androidx.appcompat.widget.Toolbar: int getTitleMarginStart()
io.realm.internal.core.NativeRealmAny: long nativeCreateNull()
androidx.core.view.WindowInsetsCompat$Impl21: boolean isConsumed()
com.google.android.material.floatingactionbutton.FloatingActionButton: void setSupportBackgroundTintList(android.content.res.ColorStateList)
io.realm.internal.CheckedRow: long[] nativeGetDecimal128(long,long)
androidx.appcompat.widget.AppCompatSpinner: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
io.realm.internal.OsRealmConfig: java.lang.String nativeCreateAndSetSyncConfig(long,long,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,byte,java.lang.String,java.lang.String,java.lang.String[],byte,java.lang.Object,java.lang.Object,java.lang.String,java.lang.Object)
androidx.appcompat.widget.ActionBarOverlayLayout: void setActionBarHideOffset(int)
io.reactivex.internal.subscriptions.EmptySubscription: io.reactivex.internal.subscriptions.EmptySubscription[] values()
androidx.core.view.WindowInsetsCompat$BuilderImpl: void setTappableElementInsets(androidx.core.graphics.Insets)
io.realm.internal.OsSharedRealm: void runMigrationCallback(long,io.realm.internal.OsRealmConfig,io.realm.internal.OsSharedRealm$MigrationCallback,long)
com.google.android.exoplayer2.ui.PlayerView: void setFastForwardIncrementMs(int)
com.google.android.exoplayer2.ui.DefaultTimeBar: DefaultTimeBar(android.content.Context,android.util.AttributeSet)
io.realm.internal.core.NativeRealmAny: long nativeCreateObjectId(java.lang.String)
androidx.appcompat.widget.LinearLayoutCompat: void setWeightSum(float)
androidx.appcompat.widget.AppCompatRadioButton: int getCompoundPaddingLeft()
androidx.lifecycle.ProcessLifecycleOwnerInitializer: ProcessLifecycleOwnerInitializer()
androidx.appcompat.widget.AppCompatAutoCompleteTextView: void setBackgroundDrawable(android.graphics.drawable.Drawable)
io.realm.internal.RealmNotifier: void addBeginSendingNotificationsCallback(java.lang.Runnable)
io.realm.internal.OsSet: long[] nativeAddRealmAny(long,long)
kotlin.reflect.jvm.internal.impl.load.java.structure.LightClassOriginKind: kotlin.reflect.jvm.internal.impl.load.java.structure.LightClassOriginKind valueOf(java.lang.String)
com.uber.autodispose.android.lifecycle.LifecycleEventsObservable_ArchLifecycleObserver_LifecycleAdapter: LifecycleEventsObservable_ArchLifecycleObserver_LifecycleAdapter(com.uber.autodispose.android.lifecycle.LifecycleEventsObservable$ArchLifecycleObserver)
androidx.appcompat.widget.AppCompatImageView: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
androidx.appcompat.widget.LinearLayoutCompat: void setBaselineAligned(boolean)
com.google.android.material.internal.BaselineLayout: BaselineLayout(android.content.Context,android.util.AttributeSet)
com.github.chrisbanes.photoview.PhotoView: void setRotationBy(float)
io.realm.internal.OsSharedRealm: void detachIterators()
androidx.appcompat.app.AppCompatViewInflater: androidx.appcompat.widget.AppCompatImageView createImageView(android.content.Context,android.util.AttributeSet)
androidx.viewpager2.widget.ViewPager2: void setLayoutDirection(int)
com.google.android.material.floatingactionbutton.FloatingActionButton: void setCompatPressedTranslationZResource(int)
androidx.viewpager2.widget.ViewPager2: int getScrollState()
androidx.appcompat.widget.AppCompatEditText: void setSupportBackgroundTintList(android.content.res.ColorStateList)
io.realm.internal.Table: long nativeSize(long)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityPreStopped(android.app.Activity)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: void setRootAlpha(int)
kotlin.reflect.jvm.internal.impl.metadata.ProtoBuf$VersionRequirement$VersionKind: kotlin.reflect.jvm.internal.impl.metadata.ProtoBuf$VersionRequirement$VersionKind[] values()
io.realm.internal.OsList: void nativeInsertBinary(long,long,byte[])
kotlin.reflect.jvm.internal.impl.protobuf.WireFormat$JavaType: kotlin.reflect.jvm.internal.impl.protobuf.WireFormat$JavaType[] values()
kotlin.reflect.jvm.internal.impl.load.java.AnnotationTypeQualifierResolver$QualifierApplicabilityType: kotlin.reflect.jvm.internal.impl.load.java.AnnotationTypeQualifierResolver$QualifierApplicabilityType[] values()
androidx.appcompat.widget.Toolbar: void setSubtitle(java.lang.CharSequence)
dev.octoshrimpy.quik.common.widget.QkEditText: io.reactivex.subjects.Subject getBackspaces()
androidx.viewpager2.widget.ViewPager2: void setCurrentItem(int)
io.realm.internal.objectstore.OsObjectBuilder: void nativeAddDecimal128DictionaryEntry(long,java.lang.String,long,long)
com.google.android.material.floatingactionbutton.FloatingActionButton$BaseBehavior: FloatingActionButton$BaseBehavior(android.content.Context,android.util.AttributeSet)
com.google.android.material.bottomsheet.BottomSheetBehavior: BottomSheetBehavior()
androidx.appcompat.widget.AppCompatCheckBox: void setSupportBackgroundTintList(android.content.res.ColorStateList)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: ReportFragment$LifecycleCallbacks()
androidx.appcompat.widget.AppCompatTextView: void setFirstBaselineToTopHeight(int)
androidx.core.view.WindowInsetsCompat$BuilderImpl: void setMandatorySystemGestureInsets(androidx.core.graphics.Insets)
io.realm.internal.OsSharedRealm: void executePendingRowQueries()
kotlin.reflect.jvm.internal.impl.descriptors.Modality: kotlin.reflect.jvm.internal.impl.descriptors.Modality valueOf(java.lang.String)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityStopped(android.app.Activity)
dev.octoshrimpy.quik.feature.main.NavItem: dev.octoshrimpy.quik.feature.main.NavItem[] values()
androidx.constraintlayout.widget.ConstraintLayout: void setMaxHeight(int)
io.realm.internal.UncheckedRow: void nativeSetLong(long,long,long)
androidx.appcompat.widget.AppCompatTextView: void setBackgroundResource(int)
androidx.appcompat.widget.Toolbar: int getContentInsetStart()
io.realm.internal.InvalidRow: io.realm.internal.InvalidRow valueOf(java.lang.String)
kotlin.reflect.jvm.internal.impl.load.java.typeEnhancement.TypeComponentPosition: kotlin.reflect.jvm.internal.impl.load.java.typeEnhancement.TypeComponentPosition[] values()
com.google.android.material.appbar.AppBarLayout$BaseBehavior: AppBarLayout$BaseBehavior(android.content.Context,android.util.AttributeSet)
kotlin.reflect.jvm.internal.impl.types.Variance: kotlin.reflect.jvm.internal.impl.types.Variance[] values()
io.realm.internal.OsObject: long nativeCreateRowWithStringPrimaryKey(long,long,long,java.lang.String)
io.realm.internal.RealmNotifier: void beforeNotify()
io.realm.internal.Table: long nativeAddColumn(long,int,java.lang.String,boolean)
androidx.appcompat.app.AppCompatViewInflater: androidx.appcompat.widget.AppCompatCheckBox createCheckBox(android.content.Context,android.util.AttributeSet)
com.bumptech.glide.manager.RequestManagerFragment: RequestManagerFragment()
androidx.appcompat.widget.DropDownListView: void setListSelectionHidden(boolean)
com.squareup.moshi.JsonReader$Token: com.squareup.moshi.JsonReader$Token[] values()
io.realm.exceptions.RealmException: RealmException(java.lang.String)
io.reactivex.internal.schedulers.SchedulerPoolFactory$PurgeProperties: SchedulerPoolFactory$PurgeProperties()
com.google.android.material.snackbar.Snackbar$SnackbarLayout: Snackbar$SnackbarLayout(android.content.Context,android.util.AttributeSet)
io.realm.internal.UncheckedRow: java.lang.String nativeGetString(long,long)
io.realm.internal.OsSet: boolean nativeContainsDecimal128(long,long,long)
io.realm.OrderedCollectionChangeSet$State: io.realm.OrderedCollectionChangeSet$State valueOf(java.lang.String)
com.google.android.material.appbar.AppBarLayout: AppBarLayout(android.content.Context,android.util.AttributeSet)
io.realm.internal.OsObject: void removeListener(io.realm.RealmModel,io.realm.RealmObjectChangeListener)
androidx.constraintlayout.widget.ConstraintLayout: void setId(int)
com.google.android.material.behavior.HideBottomViewOnScrollBehavior: HideBottomViewOnScrollBehavior(android.content.Context,android.util.AttributeSet)
io.realm.internal.Table: java.lang.String[] nativeGetColumnNames(long)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityPostResumed(android.app.Activity)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: int getStrokeColor()
androidx.viewpager2.widget.ViewPager2: int getOrientation()
kotlin.reflect.jvm.internal.impl.incremental.components.NoLookupLocation: kotlin.reflect.jvm.internal.impl.incremental.components.NoLookupLocation[] values()
androidx.core.view.ViewCompat$Api21Impl: void setOnApplyWindowInsetsListener(android.view.View,androidx.core.view.OnApplyWindowInsetsListener)
com.bumptech.glide.load.EncodeStrategy: com.bumptech.glide.load.EncodeStrategy valueOf(java.lang.String)
dev.octoshrimpy.quik.feature.blocking.manager.BlockingManagerPreferenceView: void setIcon(android.graphics.drawable.Drawable)
com.google.android.exoplayer2.ui.spherical.SphericalSurfaceView: void setDefaultStereoMode(int)
io.realm.internal.OsSet: boolean nativeRetainAllRealmAnyCollection(long,long)
io.realm.internal.Table: long nativeAddPrimitiveSetColumn(long,int,java.lang.String,boolean)
io.realm.internal.OsSharedRealm: void refresh()
androidx.appcompat.widget.AppCompatAutoCompleteTextView: void setDropDownBackgroundResource(int)
androidx.appcompat.widget.SearchView: int getPreferredHeight()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: void setTrimPathEnd(float)
androidx.appcompat.widget.AppCompatTextView: int getAutoSizeMinTextSize()
androidx.appcompat.widget.ViewStubCompat: android.view.LayoutInflater getLayoutInflater()
androidx.appcompat.widget.SwitchCompat: int getCompoundPaddingLeft()
com.google.android.exoplayer2.ui.SubtitleView: com.google.android.exoplayer2.text.CaptionStyleCompat getUserCaptionStyleV19()
io.realm.internal.OsResults: long nativeGetRow(long,int)
androidx.coordinatorlayout.widget.CoordinatorLayout: void setVisibility(int)
androidx.appcompat.widget.AppCompatTextView: int getAutoSizeMaxTextSize()
androidx.core.graphics.drawable.IconCompat: IconCompat()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: void setPivotY(float)
dev.octoshrimpy.quik.common.widget.PagerTitleView: void setPager(androidx.viewpager.widget.ViewPager)
kotlin.reflect.jvm.internal.impl.load.java.FieldOverridabilityCondition: FieldOverridabilityCondition()
io.realm.internal.OsSet: long[] nativeAddBoolean(long,boolean)
io.realm.internal.OsSet: long[] nativeRemoveBinary(long,byte[])
io.realm.annotations.RealmNamingPolicy: io.realm.annotations.RealmNamingPolicy[] values()
androidx.core.view.WindowInsetsCompat$Impl: androidx.core.view.WindowInsetsCompat inset(int,int,int,int)
androidx.coordinatorlayout.widget.CoordinatorLayout: CoordinatorLayout(android.content.Context,android.util.AttributeSet)
io.realm.internal.OsSharedRealm: long size()
com.bumptech.glide.load.resource.bitmap.DownsampleStrategy$SampleSizeRounding: com.bumptech.glide.load.resource.bitmap.DownsampleStrategy$SampleSizeRounding valueOf(java.lang.String)
androidx.appcompat.widget.AppCompatSpinner: int getDropDownVerticalOffset()
io.realm.internal.objectstore.OsObjectBuilder: void nativeAddNull(long,long)
androidx.recyclerview.widget.GridLayoutManager: GridLayoutManager(android.content.Context,android.util.AttributeSet,int,int)
io.realm.internal.OsRealmConfig: void nativeSetInitializationCallback(long,io.realm.internal.OsSharedRealm$InitializationCallback)
io.realm.internal.OsList: void nativeAddRow(long,long)
io.realm.internal.OsMap: void nativePutBinary(long,java.lang.String,byte[])
androidx.fragment.app.FragmentContainerView: void setLayoutTransition(android.animation.LayoutTransition)
androidx.viewpager.widget.ViewPager: void setPageMargin(int)
androidx.core.view.WindowInsetsCompat$Impl: boolean isRound()
androidx.core.view.WindowInsetsCompat$Impl20: WindowInsetsCompat$Impl20(androidx.core.view.WindowInsetsCompat,androidx.core.view.WindowInsetsCompat$Impl20)
io.realm.internal.OsResults: void nativeStartListening(long)
io.realm.internal.CheckedRow: long nativeGetLink(long,long)
dev.octoshrimpy.quik.receiver.DeleteMessagesReceiver: DeleteMessagesReceiver()
com.google.android.material.floatingactionbutton.FloatingActionButton: void setCompatPressedTranslationZ(float)
com.google.android.material.appbar.CollapsingToolbarLayout: int getExpandedTitleMarginStart()
androidx.appcompat.widget.ViewStubCompat: ViewStubCompat(android.content.Context,android.util.AttributeSet)
io.realm.internal.core.NativeRealmAny: java.util.Date asDate()
dev.octoshrimpy.quik.common.widget.RadioPreferenceView: void setSummary(java.lang.String)
androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$LayoutManager getLayoutManager()
androidx.appcompat.widget.Toolbar: void setCollapseContentDescription(int)
androidx.appcompat.widget.SwitchCompat: android.content.res.ColorStateList getTrackTintList()
io.reactivex.exceptions.CompositeException$PrintStreamOrWriter: CompositeException$PrintStreamOrWriter()
kotlin.reflect.jvm.internal.impl.descriptors.CallableMemberDescriptor$Kind: kotlin.reflect.jvm.internal.impl.descriptors.CallableMemberDescriptor$Kind[] values()
io.realm.internal.OsMap: void nativeRemove(long,java.lang.String)
com.google.android.flexbox.FlexboxLayout: void setShowDividerHorizontal(int)
androidx.core.view.ViewCompat$Api21Impl: androidx.core.view.WindowInsetsCompat computeSystemWindowInsets(android.view.View,androidx.core.view.WindowInsetsCompat,android.graphics.Rect)
com.google.android.material.internal.ForegroundLinearLayout: void setForeground(android.graphics.drawable.Drawable)
kotlin.reflect.jvm.internal.impl.protobuf.WireFormat$FieldType: kotlin.reflect.jvm.internal.impl.protobuf.WireFormat$FieldType valueOf(java.lang.String)
com.google.android.exoplayer2.ui.PlayerView: void setRewindIncrementMs(int)
io.realm.internal.Table: void nativeRemoveSearchIndex(long,long)
com.google.android.material.appbar.CollapsingToolbarLayout: int getExpandedTitleMarginEnd()
com.google.android.material.appbar.CollapsingToolbarLayout: void setExpandedTitleMarginBottom(int)
io.realm.internal.objectstore.OsObjectBuilder: void nativeAddObjectIdListItem(long,java.lang.String)
androidx.core.view.WindowInsetsCompat$Impl29: WindowInsetsCompat$Impl29(androidx.core.view.WindowInsetsCompat,android.view.WindowInsets)
dev.octoshrimpy.quik.feature.settings.about.AboutController: AboutController()
kotlin.reflect.jvm.internal.AnnotationConstructorCaller$Origin: kotlin.reflect.jvm.internal.AnnotationConstructorCaller$Origin[] values()
androidx.appcompat.view.menu.ListMenuItemView: void setSubMenuArrowVisible(boolean)
io.realm.internal.core.NativeRealmAny: long nativeCreateFloat(float)
io.realm.internal.OsSharedRealm: io.realm.internal.Table createTable(java.lang.String)
com.github.chrisbanes.photoview.PhotoView: void setZoomable(boolean)
com.google.android.material.button.MaterialButton: void setCornerRadiusResource(int)
com.google.android.material.button.MaterialButton: int getIconPadding()
io.realm.internal.OsMap: void nativePutFloat(long,java.lang.String,float)
io.realm.internal.TableQuery: java.lang.Double nativeMaximumDouble(long,long)
androidx.appcompat.widget.AppCompatImageButton: void setSupportBackgroundTintList(android.content.res.ColorStateList)
androidx.appcompat.widget.SearchView: int getSuggestionCommitIconResId()
androidx.appcompat.widget.Toolbar: int getTitleMarginBottom()
androidx.core.view.WindowInsetsCompat$Impl: WindowInsetsCompat$Impl(androidx.core.view.WindowInsetsCompat)
io.realm.internal.OsMap: java.lang.Object nativeGetValue(long,java.lang.String)
io.realm.internal.OsSet: boolean nativeContainsString(long,java.lang.String)
com.google.android.material.button.MaterialButton: void setStrokeColor(android.content.res.ColorStateList)
com.google.android.material.appbar.AppBarLayout: void setLiftOnScroll(boolean)
com.google.android.exoplayer2.ui.PlayerView: void setControllerHideDuringAds(boolean)
com.google.android.exoplayer2.ui.DefaultTimeBar: void setAdMarkerColor(int)
androidx.core.view.WindowInsetsCompat$Impl: void setRootWindowInsets(androidx.core.view.WindowInsetsCompat)
androidx.appcompat.widget.AppCompatImageView: void setSupportImageTintMode(android.graphics.PorterDuff$Mode)
com.google.android.material.button.MaterialButton: void setBackgroundColor(int)
com.github.chrisbanes.photoview.PhotoView: void setRotationTo(float)
io.realm.internal.OsList: void nativeAddRealmAny(long,long)
io.realm.internal.core.NativeRealmAny: org.bson.types.ObjectId asObjectId()
io.realm.internal.OsSharedRealm: void nativeInit(java.lang.String)
androidx.core.view.WindowInsetsCompat$Impl20: androidx.core.view.WindowInsetsCompat inset(int,int,int,int)
io.realm.internal.OsList: void nativeAddDecimal128(long,long,long)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: void setAlpha(float)
androidx.constraintlayout.solver.widgets.ConstraintAnchor$ConnectionType: androidx.constraintlayout.solver.widgets.ConstraintAnchor$ConnectionType[] values()
io.realm.internal.OsSharedRealm$MigrationCallback: void onMigrationNeeded(io.realm.internal.OsSharedRealm,long,long)
io.reactivex.observables.ConnectableObservable: ConnectableObservable()
io.realm.internal.OsList: long nativeCreateAndAddEmbeddedObject(long,long)
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView: void setBackgroundResource(int)
io.realm.internal.RealmNotifier: void removeChangeListeners(java.lang.Object)
com.google.android.material.appbar.CollapsingToolbarLayout: CollapsingToolbarLayout(android.content.Context,android.util.AttributeSet)
androidx.appcompat.widget.AppCompatCheckedTextView: void setCheckMarkDrawable(int)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: float getAlpha()
androidx.core.view.WindowInsetsCompat$Impl29: WindowInsetsCompat$Impl29(androidx.core.view.WindowInsetsCompat,androidx.core.view.WindowInsetsCompat$Impl29)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: void setStrokeWidth(float)
io.realm.internal.Property: long nativeCreateComputedLinkProperty(java.lang.String,java.lang.String,java.lang.String)
com.google.android.material.floatingactionbutton.FloatingActionButton: android.graphics.PorterDuff$Mode getBackgroundTintMode()
dev.octoshrimpy.quik.service.AutoDeleteService: AutoDeleteService()
kotlin.reflect.jvm.internal.impl.metadata.ProtoBuf$QualifiedNameTable$QualifiedName$Kind: kotlin.reflect.jvm.internal.impl.metadata.ProtoBuf$QualifiedNameTable$QualifiedName$Kind valueOf(java.lang.String)
androidx.appcompat.widget.SwitchCompat: android.graphics.drawable.Drawable getThumbDrawable()
dev.octoshrimpy.quik.common.widget.PagerTitleView: PagerTitleView(android.content.Context,android.util.AttributeSet)
androidx.appcompat.widget.SwitchCompat: void setTextOn(java.lang.CharSequence)
androidx.emoji.widget.ExtractButtonCompat: ExtractButtonCompat(android.content.Context,android.util.AttributeSet)
androidx.constraintlayout.widget.Guideline: void setVisibility(int)
androidx.constraintlayout.widget.Guideline: void setGuidelineBegin(int)
kotlin.reflect.jvm.internal.impl.types.checker.TypeCheckingProcedure$EnrichedProjectionKind: kotlin.reflect.jvm.internal.impl.types.checker.TypeCheckingProcedure$EnrichedProjectionKind[] values()
kotlin.reflect.jvm.internal.impl.descriptors.Modality: kotlin.reflect.jvm.internal.impl.descriptors.Modality[] values()
io.realm.internal.CheckedRow: void nativeSetString(long,long,java.lang.String)
io.realm.internal.OsList: void nativeInsertString(long,long,java.lang.String)
io.realm.internal.Table: long nativeGetColumnCount(long)
io.michaelrocks.libphonenumber.android.Phonenumber$PhoneNumber$CountryCodeSource: io.michaelrocks.libphonenumber.android.Phonenumber$PhoneNumber$CountryCodeSource[] values()
dev.octoshrimpy.quik.common.widget.RadioPreferenceView: void setColors(dev.octoshrimpy.quik.common.util.Colors)
com.google.android.material.appbar.AppBarLayout: int getDownNestedPreScrollRange()
androidx.appcompat.view.menu.ExpandedMenuView: int getWindowAnimations()
io.realm.internal.OsSet: long[] nativeAddDate(long,long)
androidx.core.view.WindowInsetsCompat$Impl20: void loadReflectionField()
androidx.core.view.WindowInsetsCompat$Impl: int hashCode()
io.realm.internal.UncheckedRow: long nativeGetColumnKey(long,java.lang.String)
androidx.core.widget.NestedScrollView: float getVerticalScrollFactorCompat()
io.realm.internal.core.NativeRealmAny: java.util.UUID asUUID()
io.realm.internal.core.NativeRealmAny: float nativeAsFloat(long)
androidx.core.view.WindowInsetsCompat$Impl20: boolean equals(java.lang.Object)
com.google.android.material.internal.NavigationMenuItemView: NavigationMenuItemView(android.content.Context,android.util.AttributeSet)
androidx.appcompat.widget.AppCompatImageButton: android.content.res.ColorStateList getSupportImageTintList()
dev.octoshrimpy.quik.feature.contacts.ContactsActivity: ContactsActivity()
io.reactivex.internal.disposables.ListCompositeDisposable: ListCompositeDisposable()
io.realm.internal.OsSet: boolean nativeIntersect(long,long)
androidx.appcompat.widget.AppCompatRadioButton: void setBackgroundResource(int)
androidx.appcompat.widget.LinearLayoutCompat: void setShowDividers(int)
androidx.emoji.widget.EmojiExtractEditText: androidx.emoji.widget.EmojiEditTextHelper getEmojiEditTextHelper()
io.realm.internal.ObservableMap: void notifyChangeListeners(long)
androidx.appcompat.widget.ActionBarContainer: ActionBarContainer(android.content.Context,android.util.AttributeSet)
io.michaelrocks.libphonenumber.android.PhoneNumberUtil$ValidationResult: io.michaelrocks.libphonenumber.android.PhoneNumberUtil$ValidationResult[] values()
androidx.recyclerview.widget.RecyclerView: int getBaseline()
io.realm.internal.Table: void nativeSetNull(long,long,long,boolean)
com.google.android.material.floatingactionbutton.FloatingActionButton: android.content.res.ColorStateList getSupportBackgroundTintList()
kotlin.DeprecationLevel: kotlin.DeprecationLevel valueOf(java.lang.String)
com.google.android.exoplayer2.ui.PlayerView: android.view.View getVideoSurfaceView()
io.realm.internal.RealmNotifier: void removeChangeListener(java.lang.Object,io.realm.RealmChangeListener)
androidx.appcompat.widget.SwitchCompat: void setTrackTintMode(android.graphics.PorterDuff$Mode)
com.google.android.material.appbar.CollapsingToolbarLayout: void setScrimAnimationDuration(long)
io.realm.internal.OsObject: long createRow(io.realm.internal.Table)
androidx.appcompat.widget.Toolbar: android.graphics.drawable.Drawable getOverflowIcon()
androidx.viewpager2.widget.ViewPager2: androidx.recyclerview.widget.RecyclerView$Adapter getAdapter()
androidx.appcompat.widget.SwitchCompat: void setTrackResource(int)
com.bumptech.glide.load.DataSource: com.bumptech.glide.load.DataSource valueOf(java.lang.String)
kotlin.reflect.jvm.internal.impl.renderer.OverrideRenderingPolicy: kotlin.reflect.jvm.internal.impl.renderer.OverrideRenderingPolicy[] values()
kotlin.reflect.jvm.internal.impl.descriptors.ClassKind: kotlin.reflect.jvm.internal.impl.descriptors.ClassKind[] values()
com.google.android.exoplayer2.ui.PlayerView: void setResizeMode(int)
io.realm.internal.UncheckedRow: java.lang.String[] nativeGetColumnNames(long)
dev.octoshrimpy.quik.feature.conversationinfo.ConversationInfoActivity: ConversationInfoActivity()
io.realm.internal.objectstore.OsObjectBuilder: void nativeAddObjectIdDictionaryEntry(long,java.lang.String,java.lang.String)
com.google.android.exoplayer2.ui.PlayerControlView: void setControlDispatcher(com.google.android.exoplayer2.ControlDispatcher)
io.realm.internal.OsList: java.lang.Object nativeGetValue(long,long)
io.realm.internal.CheckedRow: long nativeGetTimestamp(long,long)
io.reactivex.internal.subscriptions.BasicIntQueueSubscription: BasicIntQueueSubscription()
androidx.appcompat.widget.AppCompatCheckBox: android.content.res.ColorStateList getSupportButtonTintList()
androidx.appcompat.widget.SearchView: void setOnCloseListener(androidx.appcompat.widget.SearchView$OnCloseListener)
io.realm.internal.Table: long nativeFreeze(long,long)
io.reactivex.internal.functions.Functions$FalsePredicate: Functions$FalsePredicate()
io.realm.internal.core.NativeRealmAny: float asFloat()
androidx.appcompat.widget.ActionBarOverlayLayout: java.lang.CharSequence getTitle()
com.google.android.material.button.MaterialButton: android.content.res.ColorStateList getStrokeColor()
androidx.drawerlayout.widget.DrawerLayout: void setDrawerListener(androidx.drawerlayout.widget.DrawerLayout$DrawerListener)
kotlin.reflect.jvm.internal.impl.metadata.ProtoBuf$VersionRequirement$Level: kotlin.reflect.jvm.internal.impl.metadata.ProtoBuf$VersionRequirement$Level[] values()
dev.octoshrimpy.quik.common.widget.QkEditText: io.reactivex.subjects.Subject getInputContentSelected()
kotlin.reflect.jvm.internal.impl.descriptors.annotations.AnnotationUseSiteTarget: kotlin.reflect.jvm.internal.impl.descriptors.annotations.AnnotationUseSiteTarget[] values()
io.realm.exceptions.RealmFileException: java.lang.String toString()
androidx.constraintlayout.solver.SolverVariable$Type: androidx.constraintlayout.solver.SolverVariable$Type valueOf(java.lang.String)
io.realm.internal.OsSharedRealm: void cancelTransaction()
kotlin.reflect.jvm.internal.impl.metadata.ProtoBuf$TypeParameter$Variance: kotlin.reflect.jvm.internal.impl.metadata.ProtoBuf$TypeParameter$Variance[] values()
io.realm.internal.OsSharedRealm: long nativeGetFinalizerPtr()
com.google.android.material.button.MaterialButton: void setBackgroundTintMode(android.graphics.PorterDuff$Mode)
com.github.chrisbanes.photoview.PhotoView: com.github.chrisbanes.photoview.PhotoViewAttacher getAttacher()
dev.octoshrimpy.quik.common.widget.RadioPreferenceView: java.lang.String getSummary()
androidx.appcompat.widget.Toolbar: void setNavigationIcon(int)
ezvcard.VCardVersion: ezvcard.VCardVersion[] values()
kotlin.reflect.jvm.internal.impl.descriptors.ClassKind: kotlin.reflect.jvm.internal.impl.descriptors.ClassKind valueOf(java.lang.String)
androidx.core.view.WindowInsetsCompat$Impl28: WindowInsetsCompat$Impl28(androidx.core.view.WindowInsetsCompat,android.view.WindowInsets)
kotlinx.coroutines.android.AndroidDispatcherFactory: kotlinx.coroutines.android.HandlerContext createDispatcher(java.util.List)
com.github.chrisbanes.photoview.PhotoView: android.graphics.RectF getDisplayRect()
androidx.constraintlayout.widget.ConstraintLayout: ConstraintLayout(android.content.Context,android.util.AttributeSet)
io.realm.internal.OsCollectionChangeSet: long nativeGetFinalizerPtr()
io.realm.internal.objectstore.OsObjectBuilder: long nativeStartList(long)
io.reactivex.android.schedulers.AndroidSchedulers$1: AndroidSchedulers$1()
io.realm.internal.OsSet: long[] nativeAddLong(long,long)
com.google.android.exoplayer2.ui.PlayerView: void setShowShuffleButton(boolean)
com.google.android.material.appbar.CollapsingToolbarLayout: int getExpandedTitleMarginTop()
androidx.fragment.app.SpecialEffectsController$Operation$State: androidx.fragment.app.SpecialEffectsController$Operation$State valueOf(java.lang.String)
io.realm.internal.OsList: void nativeInsertBoolean(long,long,boolean)
androidx.appcompat.widget.AppCompatCheckBox: int getCompoundPaddingLeft()
kotlin.reflect.jvm.internal.impl.serialization.deserialization.AnnotatedCallableKind: kotlin.reflect.jvm.internal.impl.serialization.deserialization.AnnotatedCallableKind valueOf(java.lang.String)
dev.octoshrimpy.quik.common.widget.AvatarView: dev.octoshrimpy.quik.common.util.Colors getColors()
io.realm.internal.OsSharedRealm: io.realm.internal.OsSharedRealm getInstance(io.realm.internal.OsRealmConfig$Builder,io.realm.internal.OsSharedRealm$VersionID)
androidx.appcompat.widget.SearchView: androidx.cursoradapter.widget.CursorAdapter getSuggestionsAdapter()
kotlin.reflect.jvm.internal.impl.metadata.ProtoBuf$Visibility: kotlin.reflect.jvm.internal.impl.metadata.ProtoBuf$Visibility valueOf(java.lang.String)
io.realm.log.RealmLogger: void log(int,java.lang.String,java.lang.Throwable,java.lang.String)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: float getTranslateY()
androidx.appcompat.view.menu.ListMenuItemView: ListMenuItemView(android.content.Context,android.util.AttributeSet)
androidx.appcompat.widget.Toolbar: android.graphics.drawable.Drawable getCollapseIcon()
dev.octoshrimpy.quik.common.widget.SquareImageView: SquareImageView(android.content.Context,android.util.AttributeSet)
io.reactivex.internal.subscriptions.SubscriptionHelper: io.reactivex.internal.subscriptions.SubscriptionHelper[] values()
com.uber.autodispose.android.lifecycle.LifecycleEventsObservable$ArchLifecycleObserver: void onStateChange(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)
androidx.appcompat.widget.Toolbar: android.widget.TextView getSubtitleTextView()
dev.octoshrimpy.quik.model.Message$AttachmentType: dev.octoshrimpy.quik.model.Message$AttachmentType valueOf(java.lang.String)
io.realm.internal.OsMap: java.lang.Object[] nativeGetEntryForPrimitive(long,int)
org.bson.types.Decimal128: org.bson.types.Decimal128 fromIEEE754BIDEncoding(long,long)
androidx.appcompat.widget.LinearLayoutCompat: int getVirtualChildCount()
androidx.versionedparcelable.CustomVersionedParcelable: CustomVersionedParcelable()
io.realm.internal.OsRealmConfig: void nativeSetSchemaConfig(long,byte,long,long,io.realm.internal.OsSharedRealm$MigrationCallback)
kotlin.coroutines.AbstractCoroutineContextElement: java.lang.Object fold(java.lang.Object,kotlin.jvm.functions.Function2)
com.jakewharton.rxbinding2.internal.Notification: com.jakewharton.rxbinding2.internal.Notification valueOf(java.lang.String)
io.realm.internal.TableQuery: long[] nativeMaximumDecimal128(long,long)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: void setStrokeAlpha(float)
com.google.android.exoplayer2.ui.PlayerView: void setAspectRatioListener(com.google.android.exoplayer2.ui.AspectRatioFrameLayout$AspectRatioListener)
io.realm.internal.core.NativeRealmAny: double asDouble()
androidx.core.view.WindowInsetsCompat$Impl: androidx.core.graphics.Insets getSystemWindowInsets()
androidx.recyclerview.widget.RecyclerView: void setRecyclerListener(androidx.recyclerview.widget.RecyclerView$RecyclerListener)
com.google.android.material.button.MaterialButton: void setIconGravity(int)
io.realm.internal.OsObject: void addListener(io.realm.RealmModel,io.realm.RealmObjectChangeListener)
io.realm.internal.OsSharedRealm: long[] nativeGetVersionID(long)
androidx.appcompat.widget.SearchView: void setInputType(int)
androidx.appcompat.widget.AppCompatAutoCompleteTextView: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
androidx.appcompat.widget.AppCompatSpinner: void setBackgroundResource(int)
androidx.appcompat.widget.AppCompatButton: android.graphics.PorterDuff$Mode getSupportCompoundDrawablesTintMode()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: void setTranslateX(float)
io.reactivex.internal.operators.completable.CompletableEmpty: CompletableEmpty()
io.realm.internal.OsRealmConfig$SchemaMode: io.realm.internal.OsRealmConfig$SchemaMode[] values()
io.realm.internal.OsList: long nativeGetRow(long,long)
com.google.android.material.floatingactionbutton.FloatingActionButton: int getRippleColor()
com.google.android.material.appbar.AppBarLayout: int getMinimumHeightForVisibleOverlappingContent()
androidx.appcompat.widget.LinearLayoutCompat: float getWeightSum()
com.google.android.material.internal.NavigationMenuItemView: void setTitle(java.lang.CharSequence)
kotlin.reflect.jvm.internal.impl.descriptors.annotations.KotlinTarget: kotlin.reflect.jvm.internal.impl.descriptors.annotations.KotlinTarget valueOf(java.lang.String)
androidx.appcompat.widget.SwitchCompat: void setThumbPosition(float)
com.google.android.exoplayer2.ui.SubtitleView: void setFractionalTextSize(float)
io.reactivex.android.MainThreadDisposable: MainThreadDisposable()
com.google.android.material.internal.NavigationMenuItemView: void setIcon(android.graphics.drawable.Drawable)
androidx.appcompat.widget.SwitchCompat: int getSwitchPadding()
io.realm.internal.OsSharedRealm: boolean nativeIsInTransaction(long)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: float getStrokeWidth()
androidx.appcompat.widget.AppCompatToggleButton: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
androidx.core.view.WindowInsetsCompat$BuilderImpl20: WindowInsetsCompat$BuilderImpl20(androidx.core.view.WindowInsetsCompat)
androidx.appcompat.widget.AppCompatCheckedTextView: void setCustomSelectionActionModeCallback(android.view.ActionMode$Callback)
androidx.viewpager.widget.ViewPager: void setCurrentItem(int)
io.michaelrocks.libphonenumber.android.PhoneNumberUtil$PhoneNumberFormat: io.michaelrocks.libphonenumber.android.PhoneNumberUtil$PhoneNumberFormat valueOf(java.lang.String)
androidx.appcompat.widget.Toolbar: android.view.Menu getMenu()
androidx.viewpager.widget.ViewPager: int getOffscreenPageLimit()
com.google.android.material.button.MaterialButton: android.content.res.ColorStateList getSupportBackgroundTintList()
io.realm.internal.OsMap: boolean nativeContainsUUID(long,java.lang.String)
io.michaelrocks.libphonenumber.android.PhoneNumberUtil$ValidationResult: io.michaelrocks.libphonenumber.android.PhoneNumberUtil$ValidationResult valueOf(java.lang.String)
androidx.appcompat.app.AppCompatViewInflater: androidx.appcompat.widget.AppCompatImageButton createImageButton(android.content.Context,android.util.AttributeSet)
me.leolin.shortcutbadger.impl.XiaomiHomeBadger: XiaomiHomeBadger()
dev.octoshrimpy.quik.common.widget.PreferenceView: void setTitle(java.lang.String)
androidx.viewpager.widget.ViewPager: void setOffscreenPageLimit(int)
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper$Impl29: boolean isHorizontallyScrollable(android.widget.TextView)
com.bumptech.glide.load.DataSource: com.bumptech.glide.load.DataSource[] values()
io.reactivex.internal.operators.flowable.FlowableInternalHelper$RequestMax: io.reactivex.internal.operators.flowable.FlowableInternalHelper$RequestMax[] values()
io.realm.internal.OsObjectStore: void nativeSetSchemaVersion(long,long)
com.google.android.material.internal.NavigationMenuItemView: void setIconTintList(android.content.res.ColorStateList)
androidx.appcompat.widget.ActionBarOverlayLayout: void setUiOptions(int)
android.support.v4.app.RemoteActionCompatParcelizer: androidx.core.app.RemoteActionCompat read(androidx.versionedparcelable.VersionedParcel)
com.google.android.material.appbar.CollapsingToolbarLayout: int getCollapsedTitleGravity()
io.realm.internal.OsMap: long nativeCreateAndPutEmbeddedObject(long,java.lang.String)
io.realm.internal.OsSet: long nativeGetRealmAny(long,int)
io.realm.internal.core.NativeRealmAnyCollection: long nativeCreateDateCollection(long[],boolean[])
kotlin.reflect.jvm.internal.impl.metadata.ProtoBuf$Modality: kotlin.reflect.jvm.internal.impl.metadata.ProtoBuf$Modality[] values()
io.realm.internal.UncheckedRow: long nativeFreeze(long,long)
dev.octoshrimpy.quik.feature.themepicker.HSVPickerView: void setHue(float)
androidx.core.view.WindowInsetsCompat$Impl29: void setStableInsets(androidx.core.graphics.Insets)
androidx.appcompat.widget.SearchView: void setSubmitButtonEnabled(boolean)
io.realm.exceptions.RealmFileException: RealmFileException(byte,java.lang.String)
io.realm.internal.UncheckedRow: boolean nativeGetBoolean(long,long)
androidx.core.view.ViewCompat$Api23Impl: androidx.core.view.WindowInsetsCompat getRootWindowInsets(android.view.View)
androidx.fragment.app.SpecialEffectsController$Operation$State: androidx.fragment.app.SpecialEffectsController$Operation$State[] values()
com.uber.autodispose.AutoDisposableHelper: com.uber.autodispose.AutoDisposableHelper valueOf(java.lang.String)
me.leolin.shortcutbadger.impl.AdwHomeBadger: AdwHomeBadger()
dev.octoshrimpy.quik.feature.scheduled.ScheduledActivity: ScheduledActivity()
io.realm.internal.async.BadVersionException: BadVersionException(java.lang.String)
io.realm.internal.OsSharedRealm: boolean nativeCompact(long)
androidx.appcompat.widget.FitWindowsLinearLayout: FitWindowsLinearLayout(android.content.Context,android.util.AttributeSet)
dev.octoshrimpy.quik.feature.themepicker.HSVPickerView: io.reactivex.subjects.Subject getSelectedColor()
dev.octoshrimpy.quik.feature.compose.editing.DetailedChipView: void setColors(dev.octoshrimpy.quik.common.util.Colors)
io.realm.internal.async.BadVersionException: BadVersionException(java.lang.String,java.lang.Throwable)
androidx.recyclerview.widget.RecyclerView: void suppressLayout(boolean)
com.google.android.material.floatingactionbutton.FloatingActionButton$Behavior: FloatingActionButton$Behavior(android.content.Context,android.util.AttributeSet)
io.realm.internal.OsSet: long[] nativeAddDouble(long,double)
io.realm.internal.OsList: void nativeSetObjectId(long,long,java.lang.String)
androidx.appcompat.widget.AppCompatTextView: int getLastBaselineToBottomHeight()
com.google.android.material.button.MaterialButton: void setBackgroundDrawable(android.graphics.drawable.Drawable)
io.realm.internal.UncheckedRow: long nativeGetObjectKey(long)
io.realm.internal.OsMap: void nativePutDate(long,java.lang.String,long)
com.google.android.material.button.MaterialButton: void setInternalBackground(android.graphics.drawable.Drawable)
io.realm.internal.OsMap: boolean nativeContainsNull(long)
com.github.chrisbanes.photoview.PhotoView: void setOnOutsidePhotoTapListener(com.github.chrisbanes.photoview.OnOutsidePhotoTapListener)
com.github.chrisbanes.photoview.PhotoView: float getMaximumScale()
androidx.core.view.WindowInsetsCompat$Impl28: int hashCode()
io.reactivex.schedulers.Schedulers$NewThreadTask: Schedulers$NewThreadTask()
kotlin.reflect.jvm.internal.impl.resolve.ExternalOverridabilityCondition$Result: kotlin.reflect.jvm.internal.impl.resolve.ExternalOverridabilityCondition$Result valueOf(java.lang.String)
io.realm.internal.OsSharedRealm: void beginTransaction()
androidx.appcompat.widget.SearchView: int getImeOptions()
dev.octoshrimpy.quik.feature.backup.BackupController: BackupController()
com.google.android.exoplayer2.ui.AspectRatioFrameLayout: void setAspectRatioListener(com.google.android.exoplayer2.ui.AspectRatioFrameLayout$AspectRatioListener)
io.realm.exceptions.RealmMigrationNeededException: java.lang.String getPath()
io.realm.internal.OsCollectionChangeSet: int[] nativeGetRanges(long,int)
androidx.appcompat.widget.Toolbar: void setTitle(int)
io.realm.internal.Table: long nativeGetLinkTarget(long,long)
io.realm.internal.OsMap: java.lang.Object[] nativeGetEntryForModel(long,int)
com.google.android.material.appbar.CollapsingToolbarLayout: void setExpandedTitleMarginTop(int)
com.squareup.moshi.CollectionJsonAdapter: CollectionJsonAdapter(com.squareup.moshi.JsonAdapter)
androidx.appcompat.widget.ContentFrameLayout: android.util.TypedValue getMinWidthMajor()
io.realm.RealmFieldType: io.realm.RealmFieldType valueOf(java.lang.String)
androidx.viewpager2.widget.ViewPager2: void setPageTransformer(androidx.viewpager2.widget.ViewPager2$PageTransformer)
androidx.core.view.WindowInsetsCompat$BuilderImpl30: WindowInsetsCompat$BuilderImpl30(androidx.core.view.WindowInsetsCompat)
io.reactivex.subjects.PublishSubject: PublishSubject()
com.bumptech.glide.load.engine.DecodeJob$RunReason: com.bumptech.glide.load.engine.DecodeJob$RunReason[] values()
kotlin.reflect.jvm.internal.impl.load.java.JavaIncompatibilityRulesOverridabilityCondition: kotlin.reflect.jvm.internal.impl.resolve.ExternalOverridabilityCondition$Result isOverridable(kotlin.reflect.jvm.internal.impl.descriptors.CallableDescriptor,kotlin.reflect.jvm.internal.impl.descriptors.CallableDescriptor,kotlin.reflect.jvm.internal.impl.descriptors.ClassDescriptor)
com.google.android.material.button.MaterialButton: void setIconResource(int)
kotlin.reflect.jvm.internal.impl.types.TypeSubstitutor$VarianceConflictType: kotlin.reflect.jvm.internal.impl.types.TypeSubstitutor$VarianceConflictType[] values()
androidx.appcompat.view.menu.ActionMenuItemView: androidx.appcompat.view.menu.MenuItemImpl getItemData()
androidx.appcompat.widget.AppCompatImageButton: void setImageResource(int)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPath: void setPathData(androidx.core.graphics.PathParser$PathDataNode[])
com.google.android.material.appbar.CollapsingToolbarLayout: android.graphics.drawable.Drawable getStatusBarScrim()
androidx.appcompat.widget.AppCompatEditText: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
kotlin.reflect.jvm.internal.impl.builtins.functions.FunctionClassDescriptor$Kind: kotlin.reflect.jvm.internal.impl.builtins.functions.FunctionClassDescriptor$Kind valueOf(java.lang.String)
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView: void setSupportBackgroundTintList(android.content.res.ColorStateList)
android.support.v4.app.RemoteActionCompatParcelizer: void write(androidx.core.app.RemoteActionCompat,androidx.versionedparcelable.VersionedParcel)
io.realm.internal.OsResults: byte nativeGetMode(long)
dev.octoshrimpy.quik.common.widget.AvatarView: AvatarView(android.content.Context,android.util.AttributeSet)
io.realm.internal.core.NativeRealmAny: java.lang.String nativeAsUUID(long)
io.realm.internal.OsObject: io.realm.internal.UncheckedRow create(io.realm.internal.Table)
dev.octoshrimpy.quik.receiver.MarkArchivedReceiver: MarkArchivedReceiver()
androidx.appcompat.widget.SearchView: void setOnSuggestionListener(androidx.appcompat.widget.SearchView$OnSuggestionListener)
io.reactivex.internal.util.OpenHashSet: OpenHashSet()
kotlin.reflect.jvm.internal.impl.load.java.typeEnhancement.MutabilityQualifier: kotlin.reflect.jvm.internal.impl.load.java.typeEnhancement.MutabilityQualifier valueOf(java.lang.String)
io.realm.internal.OsSharedRealm: java.lang.String getPath()
androidx.appcompat.widget.Toolbar: int getContentInsetStartWithNavigation()
androidx.core.view.WindowInsetsCompat$BuilderImpl29: void setSystemGestureInsets(androidx.core.graphics.Insets)
io.realm.internal.OsObjectStore: boolean nativeCallWithLock(java.lang.String,java.lang.Runnable)
androidx.appcompat.widget.ActionBarContextView: ActionBarContextView(android.content.Context,android.util.AttributeSet)
com.google.android.material.appbar.CollapsingToolbarLayout: void setCollapsedTitleGravity(int)
androidx.appcompat.widget.AppCompatButton: void setSupportCompoundDrawablesTintMode(android.graphics.PorterDuff$Mode)
io.reactivex.internal.util.ExceptionHelper$Termination: ExceptionHelper$Termination()
io.realm.internal.OsSet: boolean nativeContainsObjectId(long,java.lang.String)
kotlin.reflect.jvm.internal.impl.load.java.BuiltinMethodsWithSpecialGenericSignature$SpecialSignatureInfo: kotlin.reflect.jvm.internal.impl.load.java.BuiltinMethodsWithSpecialGenericSignature$SpecialSignatureInfo valueOf(java.lang.String)
dev.octoshrimpy.quik.feature.settings.swipe.SwipeActionsView$Action: dev.octoshrimpy.quik.feature.settings.swipe.SwipeActionsView$Action valueOf(java.lang.String)
com.google.android.exoplayer2.ui.PlayerView: boolean getControllerHideOnTouch()
com.google.android.material.internal.NavigationMenuItemView: void setCheckable(boolean)
io.realm.internal.core.NativeRealmAny: NativeRealmAny(java.lang.Float)
io.realm.internal.OsSharedRealm: void stopWaitForChange()
io.reactivex.schedulers.Schedulers$SingleTask: Schedulers$SingleTask()
dev.octoshrimpy.quik.feature.widget.WidgetProvider: WidgetProvider()
kotlin.reflect.jvm.internal.impl.resolve.ExternalOverridabilityCondition$Contract: kotlin.reflect.jvm.internal.impl.resolve.ExternalOverridabilityCondition$Contract[] values()
io.realm.internal.OsObject: long nativeCreateNewObjectWithLongPrimaryKey(long,long,long,long,boolean)
com.google.android.exoplayer2.ui.PlayerView: void setDefaultArtwork(android.graphics.drawable.Drawable)
androidx.appcompat.widget.SearchView: void setSuggestionsAdapter(androidx.cursoradapter.widget.CursorAdapter)
io.realm.internal.OsObject: long nativeCreateRowWithObjectIdPrimaryKey(long,long,long,java.lang.String)
androidx.appcompat.view.menu.ListMenuItemView: void setCheckable(boolean)
androidx.appcompat.widget.AppCompatToggleButton: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
androidx.appcompat.widget.SwitchCompat: void setTrackDrawable(android.graphics.drawable.Drawable)
androidx.appcompat.widget.Toolbar: androidx.appcompat.widget.ActionMenuPresenter getOuterActionMenuPresenter()
kotlin.reflect.jvm.internal.ReflectionFactoryImpl: ReflectionFactoryImpl()
dev.octoshrimpy.quik.feature.blocking.manager.BlockingManagerController: BlockingManagerController()
com.google.android.material.floatingactionbutton.FloatingActionButton$Behavior: FloatingActionButton$Behavior()
androidx.appcompat.widget.AppCompatRadioButton: void setSupportBackgroundTintList(android.content.res.ColorStateList)
androidx.appcompat.widget.SearchView$SearchAutoComplete: void setSearchView(androidx.appcompat.widget.SearchView)
androidx.appcompat.widget.AppCompatImageView: void setImageDrawable(android.graphics.drawable.Drawable)
com.google.android.material.transformation.FabTransformationScrimBehavior: FabTransformationScrimBehavior()
dev.octoshrimpy.quik.common.widget.AvatarView: dev.octoshrimpy.quik.common.Navigator getNavigator()
io.realm.internal.core.NativeRealmAny: java.lang.String getRealmModelTableName(io.realm.internal.OsSharedRealm)
io.realm.internal.core.NativeRealmAnyCollection: int nativeGetCollectionSize(long)
dev.octoshrimpy.quik.common.widget.QkSwitch: dev.octoshrimpy.quik.util.Preferences getPrefs()
io.realm.internal.CheckedRow: boolean nativeIsNullLink(long,long)
androidx.core.view.WindowInsetsCompat$Impl20: void setRootViewData(androidx.core.graphics.Insets)
com.google.android.exoplayer2.ui.PlayerView: int getResizeMode()
androidx.appcompat.widget.AppCompatSpinner: int getDropDownHorizontalOffset()
androidx.appcompat.widget.AppCompatButton: void setSupportCompoundDrawablesTintList(android.content.res.ColorStateList)
io.realm.internal.core.NativeRealmAnyCollection: long nativeGetFinalizerPtr()
androidx.appcompat.widget.SwitchCompat: void setThumbTextPadding(int)
androidx.core.widget.NestedScrollView: float getTopFadingEdgeStrength()
androidx.appcompat.widget.AppCompatButton: android.content.res.ColorStateList getSupportCompoundDrawablesTintList()
io.realm.internal.OsMap: void nativePutBoolean(long,java.lang.String,boolean)
androidx.core.view.WindowInsetsCompat$BuilderImpl30: WindowInsetsCompat$BuilderImpl30()
androidx.core.view.WindowInsetsCompat$Impl: boolean isConsumed()
io.realm.internal.OsRealmConfig: long nativeCreate(java.lang.String,java.lang.String,boolean,long)
androidx.appcompat.widget.AppCompatSpinner: java.lang.CharSequence getPrompt()
dev.octoshrimpy.quik.feature.settings.swipe.SwipeActionsController: SwipeActionsController()
io.realm.internal.OsObject: long getNativePtr()
kotlin.reflect.jvm.internal.impl.renderer.AnnotationArgumentsRenderingPolicy: kotlin.reflect.jvm.internal.impl.renderer.AnnotationArgumentsRenderingPolicy[] values()
dev.octoshrimpy.quik.common.widget.PagerTitleView: void setRecipientId(long)
io.realm.internal.OsSet: void nativeClear(long)
com.google.android.material.appbar.AppBarLayout$ScrollingViewBehavior: AppBarLayout$ScrollingViewBehavior()
androidx.appcompat.widget.AppCompatSpinner: androidx.appcompat.widget.AppCompatSpinner$SpinnerPopup getInternalPopup()
io.realm.internal.OsMap: void nativePutObjectId(long,java.lang.String,java.lang.String)
androidx.recyclerview.widget.RecyclerView: boolean isLayoutSuppressed()
dev.octoshrimpy.quik.common.base.QkController: QkController()
com.github.chrisbanes.photoview.PhotoView: void setMaximumScale(float)
androidx.appcompat.widget.LinearLayoutCompat: void setOrientation(int)
io.realm.internal.OsList: void nativeSetString(long,long,java.lang.String)
io.realm.internal.OsSharedRealm: void addIterator(io.realm.internal.OsResults$Iterator)
androidx.core.graphics.drawable.IconCompatParcelizer: void write(androidx.core.graphics.drawable.IconCompat,androidx.versionedparcelable.VersionedParcel)
androidx.appcompat.widget.Toolbar: int getCurrentContentInsetLeft()
com.google.android.exoplayer2.ui.AspectRatioFrameLayout: int getResizeMode()
androidx.appcompat.widget.AppCompatImageButton: void setBackgroundResource(int)
io.realm.RealmFieldType: int getNativeValue()
com.google.android.material.internal.NavigationMenuItemView: void setTextColor(android.content.res.ColorStateList)
androidx.appcompat.widget.SwitchCompat: boolean getTargetCheckedState()
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView: android.content.res.ColorStateList getSupportBackgroundTintList()
io.realm.internal.OsSharedRealm: void writeCopy(java.io.File,byte[])
dev.octoshrimpy.quik.feature.gallery.GalleryActivity: GalleryActivity()
kotlin.coroutines.AbstractCoroutineContextElement: kotlin.coroutines.CoroutineContext minusKey(kotlin.coroutines.CoroutineContext$Key)
com.github.chrisbanes.photoview.PhotoView: void setOnSingleFlingListener(com.github.chrisbanes.photoview.OnSingleFlingListener)
io.realm.internal.objectstore.OsObjectBuilder: void nativeAddByteArrayListItem(long,byte[])
androidx.appcompat.widget.AppCompatSpinner: android.content.res.ColorStateList getSupportBackgroundTintList()
io.realm.internal.OsResults: java.lang.Object nativeGetValue(long,int)
androidx.appcompat.widget.SearchView: void setIconifiedByDefault(boolean)
io.realm.internal.OsList: void nativeAddUUID(long,java.lang.String)
io.realm.internal.OsSet$ExternalCollectionOperation: io.realm.internal.OsSet$ExternalCollectionOperation[] values()
kotlin.reflect.jvm.internal.impl.protobuf.WireFormat$FieldType: kotlin.reflect.jvm.internal.impl.protobuf.WireFormat$FieldType[] values()
kotlin.reflect.jvm.internal.impl.load.java.descriptors.JavaMethodDescriptor$ParameterNamesStatus: kotlin.reflect.jvm.internal.impl.load.java.descriptors.JavaMethodDescriptor$ParameterNamesStatus[] values()
dev.octoshrimpy.quik.feature.compose.editing.DetailedChipView: dev.octoshrimpy.quik.common.util.Colors getColors()
androidx.appcompat.widget.AppCompatSpinner: void setAdapter(android.widget.Adapter)
kotlin.reflect.jvm.internal.impl.metadata.ProtoBuf$Effect$InvocationKind: kotlin.reflect.jvm.internal.impl.metadata.ProtoBuf$Effect$InvocationKind[] values()
io.realm.internal.OsMap: void nativePutDecimal128(long,java.lang.String,long,long)
io.realm.internal.OsSharedRealm: boolean waitForChange()
com.google.android.material.floatingactionbutton.FloatingActionButton: android.graphics.drawable.Drawable getContentBackground()
dev.octoshrimpy.quik.feature.compose.ComposeActivity: ComposeActivity()
io.realm.internal.OsSharedRealm: void initialize(java.io.File)
com.google.android.flexbox.FlexboxLayout: void setDividerDrawable(android.graphics.drawable.Drawable)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: void setFillAlpha(float)
io.realm.internal.OsMap: void nativePutRealmAny(long,java.lang.String,long)
androidx.appcompat.widget.AppCompatToggleButton: void setBackgroundDrawable(android.graphics.drawable.Drawable)
androidx.lifecycle.SavedStateHandleController$OnRecreation: SavedStateHandleController$OnRecreation()
io.realm.internal.OsSharedRealm: long nativeGetSharedRealm(long,long,long,io.realm.internal.RealmNotifier)
androidx.core.view.WindowInsetsCompat$BuilderImpl20: WindowInsetsCompat$BuilderImpl20()
androidx.appcompat.app.AppCompatViewInflater: androidx.appcompat.widget.AppCompatAutoCompleteTextView createAutoCompleteTextView(android.content.Context,android.util.AttributeSet)
androidx.appcompat.widget.AppCompatSpinner: int getDropDownWidth()
kotlin.reflect.jvm.internal.impl.types.Variance: kotlin.reflect.jvm.internal.impl.types.Variance valueOf(java.lang.String)
kotlin.reflect.jvm.internal.impl.load.kotlin.header.KotlinClassHeader$Kind: kotlin.reflect.jvm.internal.impl.load.kotlin.header.KotlinClassHeader$Kind valueOf(java.lang.String)
io.reactivex.rxkotlin.Observables: Observables()
com.google.android.material.floatingactionbutton.FloatingActionButton: android.graphics.PorterDuff$Mode getSupportImageTintMode()
kotlin.reflect.jvm.internal.impl.utils.ReportLevel: kotlin.reflect.jvm.internal.impl.utils.ReportLevel valueOf(java.lang.String)
androidx.constraintlayout.widget.ConstraintHelper: void setIds(java.lang.String)
androidx.appcompat.widget.ActionBarContextView: void setVisibility(int)
androidx.emoji.widget.EmojiExtractEditText: void setEmojiReplaceStrategy(int)
androidx.appcompat.widget.Toolbar: androidx.appcompat.widget.DecorToolbar getWrapper()
androidx.core.view.WindowInsetsCompat$Impl20: androidx.core.graphics.Insets getVisibleInsets(android.view.View)
androidx.core.view.WindowInsetsCompat$Impl: void setRootViewData(androidx.core.graphics.Insets)
io.realm.internal.core.NativeRealmAnyCollection: long nativeCreateDecimal128Collection(long[],long[],boolean[])
kotlin.reflect.jvm.internal.impl.load.java.BuiltinMethodsWithSpecialGenericSignature$SpecialSignatureInfo: kotlin.reflect.jvm.internal.impl.load.java.BuiltinMethodsWithSpecialGenericSignature$SpecialSignatureInfo[] values()
androidx.constraintlayout.solver.widgets.ConstraintWidget$DimensionBehaviour: androidx.constraintlayout.solver.widgets.ConstraintWidget$DimensionBehaviour valueOf(java.lang.String)
com.google.android.material.appbar.CollapsingToolbarLayout: android.graphics.Typeface getExpandedTitleTypeface()
androidx.core.widget.NestedScrollView: int getMaxScrollAmount()
androidx.constraintlayout.widget.ConstraintLayout: int getMinWidth()
androidx.core.view.WindowInsetsCompat$Impl20: void copyWindowDataInto(androidx.core.view.WindowInsetsCompat)
androidx.appcompat.widget.SwitchCompat: void setShowText(boolean)
kotlin.coroutines.AbstractCoroutineContextElement: kotlin.coroutines.CoroutineContext$Key getKey()
me.leolin.shortcutbadger.impl.ApexHomeBadger: ApexHomeBadger()
io.realm.internal.OsRealmConfig: void nativeSetSyncConfigSslSettings(long,boolean,java.lang.String)
io.realm.internal.RealmNotifier: void removeAllChangeListeners()
io.realm.internal.OsMap: boolean nativeContainsObjectId(long,java.lang.String)
io.realm.internal.UncheckedRow: java.lang.String nativeGetUUID(long,long)
androidx.appcompat.widget.AppCompatAutoCompleteTextView: void setBackgroundResource(int)
com.google.android.material.floatingactionbutton.FloatingActionButton: void setBackgroundTintList(android.content.res.ColorStateList)
io.realm.internal.OsSharedRealm: java.io.File getTemporaryDirectory()
androidx.coordinatorlayout.widget.CoordinatorLayout: void setStatusBarBackground(android.graphics.drawable.Drawable)
io.reactivex.internal.operators.flowable.FlowableInternalHelper$RequestMax: io.reactivex.internal.operators.flowable.FlowableInternalHelper$RequestMax valueOf(java.lang.String)
io.realm.internal.OsSharedRealm: boolean nativeHasTable(long,java.lang.String)
org.bson.types.ObjectId: ObjectId(java.util.Date)
androidx.appcompat.widget.AppCompatCheckBox: void setButtonDrawable(android.graphics.drawable.Drawable)
com.github.chrisbanes.photoview.PhotoView: void setImageURI(android.net.Uri)
io.realm.internal.OsSharedRealm: long nativeSize(long)
androidx.appcompat.widget.ContentFrameLayout: ContentFrameLayout(android.content.Context,android.util.AttributeSet)
com.google.android.exoplayer2.ui.DefaultTimeBar: void setKeyTimeIncrement(long)
androidx.appcompat.widget.AppCompatButton: int getAutoSizeMaxTextSize()
com.google.android.exoplayer2.ui.DefaultTimeBar: void setKeyCountIncrement(int)
android.support.v4.graphics.drawable.IconCompatParcelizer: IconCompatParcelizer()
androidx.appcompat.widget.LinearLayoutCompat: int getDividerPadding()
dev.octoshrimpy.quik.feature.settings.swipe.SwipeActionsView$Action: dev.octoshrimpy.quik.feature.settings.swipe.SwipeActionsView$Action[] values()
androidx.appcompat.widget.LinearLayoutCompat: android.graphics.drawable.Drawable getDividerDrawable()
androidx.appcompat.widget.AppCompatTextView: android.graphics.PorterDuff$Mode getSupportCompoundDrawablesTintMode()
androidx.appcompat.widget.ActionBarOverlayLayout: void setIcon(android.graphics.drawable.Drawable)
kotlin.reflect.jvm.internal.impl.types.checker.TypeCheckerContext$SeveralSupertypesWithSameConstructorPolicy: kotlin.reflect.jvm.internal.impl.types.checker.TypeCheckerContext$SeveralSupertypesWithSameConstructorPolicy valueOf(java.lang.String)
androidx.appcompat.widget.SwitchCompat: int getThumbOffset()
com.google.android.exoplayer2.ui.SubtitleView: void setStyle(com.google.android.exoplayer2.text.CaptionStyleCompat)
com.google.android.material.floatingactionbutton.FloatingActionButton: void setCompatHoveredFocusedTranslationZResource(int)
com.google.android.material.floatingactionbutton.FloatingActionButton: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
io.realm.internal.core.NativeRealmAny: long nativeAsDate(long)
com.github.chrisbanes.photoview.PhotoView: void setOnViewDragListener(com.github.chrisbanes.photoview.OnViewDragListener)
dev.octoshrimpy.quik.common.widget.RadioPreferenceView: void setTitle(java.lang.String)
dev.octoshrimpy.quik.common.widget.QkEditText: boolean getSupportsInputContent()
androidx.emoji.widget.EmojiExtractEditText: void setCustomSelectionActionModeCallback(android.view.ActionMode$Callback)
dev.octoshrimpy.quik.common.widget.QkTextView: dev.octoshrimpy.quik.common.util.TextViewStyler getTextViewStyler()
androidx.appcompat.widget.AppCompatImageButton: android.graphics.PorterDuff$Mode getSupportImageTintMode()
androidx.appcompat.widget.Toolbar: void setCollapsible(boolean)
io.realm.internal.NativeObjectReference: void nativeCleanUp(long,long)
io.realm.internal.RealmNotifier: void willSendNotifications()
androidx.recyclerview.widget.RecyclerView: void setOnScrollListener(androidx.recyclerview.widget.RecyclerView$OnScrollListener)
com.uber.rxdogtag.autodispose.AutoDisposeObserverHandler: AutoDisposeObserverHandler()
io.realm.internal.OsSharedRealm: java.lang.String[] getTablesNames()
kotlin.reflect.jvm.internal.impl.resolve.OverridingUtil$OverrideCompatibilityInfo$Result: kotlin.reflect.jvm.internal.impl.resolve.OverridingUtil$OverrideCompatibilityInfo$Result[] values()
io.realm.internal.RealmNotifier: RealmNotifier(io.realm.internal.OsSharedRealm)
com.google.android.material.floatingactionbutton.FloatingActionButton: void setExpandedComponentIdHint(int)
dev.octoshrimpy.quik.common.widget.TightTextView: TightTextView(android.content.Context,android.util.AttributeSet)
io.realm.internal.OsSharedRealm: void nativeCommitTransaction(long)
kotlin.reflect.jvm.internal.impl.builtins.UnsignedType: kotlin.reflect.jvm.internal.impl.builtins.UnsignedType valueOf(java.lang.String)
kotlin.DeprecationLevel: kotlin.DeprecationLevel[] values()
io.realm.internal.OsSharedRealm: OsSharedRealm(io.realm.internal.OsRealmConfig,io.realm.internal.OsSharedRealm$VersionID)
androidx.appcompat.widget.ActionBarOverlayLayout: int getNestedScrollAxes()
io.realm.internal.core.NativeRealmAny: long nativeCreateDecimal128(long,long)
dev.octoshrimpy.quik.receiver.MmsSentReceiver: MmsSentReceiver()
io.realm.internal.OsSharedRealm: boolean nativeIsClosed(long)
androidx.drawerlayout.widget.DrawerLayout: void setDrawerLockMode(int)
io.realm.internal.OsMap: void nativePutLong(long,java.lang.String,long)
io.realm.internal.objectstore.OsObjectBuilder: void nativeAddObject(long,long,long)
io.realm.internal.core.NativeRealmAny: NativeRealmAny(long)
androidx.appcompat.app.AppCompatViewInflater: android.view.View createView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet,boolean,boolean,boolean,boolean)
kotlin.reflect.jvm.internal.impl.metadata.ProtoBuf$Effect$EffectType: kotlin.reflect.jvm.internal.impl.metadata.ProtoBuf$Effect$EffectType valueOf(java.lang.String)
androidx.appcompat.view.menu.ActionMenuItemView: void setPopupCallback(androidx.appcompat.view.menu.ActionMenuItemView$PopupCallback)
com.google.android.exoplayer2.ui.DefaultTimeBar: void setScrubberColor(int)
com.google.android.exoplayer2.ui.PlayerView: void setControllerShowTimeoutMs(int)
io.realm.internal.ObservableSet: void notifyChangeListeners(long)
io.realm.internal.objectstore.OsKeyPathMapping: long nativeGetFinalizerMethodPtr()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: void setStrokeColor(int)
io.realm.internal.OsResults: void nativeStopListening(long)
com.google.android.material.appbar.CollapsingToolbarLayout: void setExpandedTitleTypeface(android.graphics.Typeface)
io.realm.internal.TableQuery: void nativeRawDescriptor(long,java.lang.String,long)
kotlin.reflect.jvm.internal.impl.load.java.FieldOverridabilityCondition: kotlin.reflect.jvm.internal.impl.resolve.ExternalOverridabilityCondition$Contract getContract()
io.realm.internal.OsList: void nativeInsertUUID(long,long,java.lang.String)
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper$Impl29: void computeAndSetTextDirection(android.text.StaticLayout$Builder,android.widget.TextView)
io.reactivex.internal.util.ErrorMode: io.reactivex.internal.util.ErrorMode[] values()
io.realm.internal.core.NativeRealmAny: long nativeAsLong(long)
androidx.appcompat.widget.SwitchCompat: void setSplitTrack(boolean)
androidx.core.view.WindowInsetsCompat$BuilderImpl20: android.view.WindowInsets createWindowInsetsInstance()
androidx.appcompat.widget.AppCompatImageView: android.content.res.ColorStateList getSupportImageTintList()
io.realm.internal.OsList: void nativeSetRow(long,long,long)
androidx.appcompat.widget.SearchView: SearchView(android.content.Context,android.util.AttributeSet,int)
androidx.appcompat.widget.AppCompatAutoCompleteTextView: android.content.res.ColorStateList getSupportBackgroundTintList()
io.realm.internal.OsSet: boolean nativeContainsDate(long,long)
kotlin.reflect.jvm.internal.impl.metadata.ProtoBuf$Visibility: kotlin.reflect.jvm.internal.impl.metadata.ProtoBuf$Visibility[] values()
io.realm.internal.core.NativeRealmAny: NativeRealmAny(java.lang.Number)
com.google.android.flexbox.FlexboxLayout: java.util.List getFlexLines()
io.reactivex.internal.functions.Functions$NaturalObjectComparator: Functions$NaturalObjectComparator()
androidx.appcompat.widget.AppCompatTextView: void setAutoSizeTextTypeWithDefaults(int)
com.google.android.material.internal.ForegroundLinearLayout: android.graphics.drawable.Drawable getForeground()
androidx.appcompat.view.menu.ListMenuItemView: void setIcon(android.graphics.drawable.Drawable)
io.reactivex.internal.observers.BlockingFirstObserver: BlockingFirstObserver()
io.realm.internal.OsSharedRealm: boolean isClosed()
io.realm.internal.OsSharedRealm: void nativeRegisterSchemaChangedCallback(long,io.realm.internal.OsSharedRealm$SchemaChangedCallback)
io.realm.internal.core.NativeRealmAnyCollection: long nativeCreateIntegerCollection(long[],boolean[])
io.realm.internal.objectstore.OsObjectBuilder: void nativeAddStringSetItem(long,java.lang.String)
androidx.appcompat.widget.AppCompatRadioButton: void setButtonDrawable(android.graphics.drawable.Drawable)
com.google.android.exoplayer2.ui.PlayerView: void setUseController(boolean)
androidx.appcompat.app.AppCompatViewInflater: androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView createMultiAutoCompleteTextView(android.content.Context,android.util.AttributeSet)
org.bson.types.ObjectId: ObjectId(byte[])
androidx.appcompat.widget.SwitchCompat: void setThumbDrawable(android.graphics.drawable.Drawable)
android.support.v4.graphics.drawable.IconCompatParcelizer: androidx.core.graphics.drawable.IconCompat read(androidx.versionedparcelable.VersionedParcel)
androidx.appcompat.widget.AppCompatImageView: android.content.res.ColorStateList getSupportBackgroundTintList()
kotlin.reflect.jvm.internal.impl.metadata.ProtoBuf$MemberKind: kotlin.reflect.jvm.internal.impl.metadata.ProtoBuf$MemberKind[] values()
androidx.core.view.WindowInsetsCompat$BuilderImpl20: androidx.core.view.WindowInsetsCompat build()
io.realm.internal.Table: boolean nativeIsColumnNullable(long,long)
androidx.appcompat.widget.LinearLayoutCompat: void setHorizontalGravity(int)
androidx.appcompat.widget.AppCompatEditText: android.view.textclassifier.TextClassifier getTextClassifier()
androidx.constraintlayout.widget.ConstraintLayout: void setMinHeight(int)
dev.octoshrimpy.quik.common.widget.QkTextView: void setCollapseEnabled(boolean)
androidx.appcompat.widget.ActionMenuView: void setExpandedActionViewsExclusive(boolean)
io.realm.internal.Table: void nativeClear(long)
io.realm.internal.core.NativeRealmAnyCollection: long nativeCreateDoubleCollection(double[],boolean[])
com.google.android.material.button.MaterialButton: android.graphics.PorterDuff$Mode getIconTintMode()
androidx.appcompat.widget.SearchView: java.lang.CharSequence getQuery()
io.realm.internal.objectstore.OsObjectBuilder: void nativeAddInteger(long,long,long)
androidx.core.view.WindowInsetsCompat$BuilderImpl: void setStableInsets(androidx.core.graphics.Insets)
kotlin.reflect.jvm.internal.impl.types.checker.TypeIntersector$ResultNullability: kotlin.reflect.jvm.internal.impl.types.checker.TypeIntersector$ResultNullability[] values()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: void setPivotX(float)
androidx.appcompat.widget.ViewStubCompat: void setVisibility(int)
io.realm.FieldAttribute: io.realm.FieldAttribute valueOf(java.lang.String)
io.realm.CompactOnLaunchCallback: boolean shouldCompact(long,long)
dev.octoshrimpy.quik.common.widget.BubbleImageView: void setBubbleStyle(dev.octoshrimpy.quik.common.widget.BubbleImageView$Style)
io.michaelrocks.libphonenumber.android.PhoneNumberUtil$PhoneNumberFormat: io.michaelrocks.libphonenumber.android.PhoneNumberUtil$PhoneNumberFormat[] values()
io.realm.internal.OsSet: boolean nativeContainsRow(long,long)
androidx.appcompat.widget.ViewStubCompat: void setLayoutInflater(android.view.LayoutInflater)
kotlin.reflect.jvm.internal.impl.types.checker.CaptureStatus: kotlin.reflect.jvm.internal.impl.types.checker.CaptureStatus valueOf(java.lang.String)
io.realm.internal.OsObject: long nativeCreateRowWithLongPrimaryKey(long,long,long,long,boolean)
io.realm.internal.objectstore.OsObjectBuilder: void nativeAddDateSetItem(long,long)
io.realm.internal.core.NativeRealmAny: boolean nativeAsBoolean(long)
androidx.appcompat.widget.SwitchCompat: void setTextOff(java.lang.CharSequence)
io.realm.internal.UncheckedRow: long nativeGetLong(long,long)
org.bson.types.ObjectId: ObjectId()
androidx.appcompat.widget.ActionMenuView: int getWindowAnimations()
androidx.recyclerview.widget.RecyclerView: androidx.core.view.NestedScrollingChildHelper getScrollingChildHelper()
com.google.android.material.floatingactionbutton.FloatingActionButton: void setBackgroundColor(int)
io.realm.internal.core.NativeRealmAny: boolean nativeEquals(long,long)
android.support.v4.graphics.drawable.IconCompatParcelizer: void write(androidx.core.graphics.drawable.IconCompat,androidx.versionedparcelable.VersionedParcel)
io.reactivex.subjects.SingleSubject: SingleSubject()
dev.octoshrimpy.quik.blocking.BlockingClient$Capability: dev.octoshrimpy.quik.blocking.BlockingClient$Capability[] values()
androidx.appcompat.widget.Toolbar: void setLogoDescription(java.lang.CharSequence)
com.google.android.exoplayer2.ui.TrackSelectionView: void setShowDisableOption(boolean)
kotlin.reflect.jvm.internal.impl.metadata.ProtoBuf$Annotation$Argument$Value$Type: kotlin.reflect.jvm.internal.impl.metadata.ProtoBuf$Annotation$Argument$Value$Type valueOf(java.lang.String)
io.realm.internal.OsList: void nativeInsertObjectId(long,long,java.lang.String)
com.google.android.material.transformation.FabTransformationSheetBehavior: FabTransformationSheetBehavior(android.content.Context,android.util.AttributeSet)
io.realm.internal.OsList: void nativeSetRealmAny(long,long,long)
dev.octoshrimpy.quik.common.widget.QkSwitch: dev.octoshrimpy.quik.common.util.Colors getColors()
com.google.android.exoplayer2.ui.DefaultTimeBar: void setPlayedColor(int)
com.google.android.flexbox.FlexboxLayout: void setAlignItems(int)
androidx.appcompat.widget.AppCompatEditText: java.lang.CharSequence getText()
io.realm.internal.OsObjectStore: java.lang.String nativeGetPrimaryKeyForObject(long,java.lang.String)
io.reactivex.internal.util.NotificationLite: io.reactivex.internal.util.NotificationLite[] values()
com.bumptech.glide.load.engine.DecodeJob$Stage: com.bumptech.glide.load.engine.DecodeJob$Stage valueOf(java.lang.String)
io.realm.internal.OsList: void nativeAddLong(long,long)
io.realm.internal.OsObject: void nativeStartListening(long)
dev.octoshrimpy.quik.common.widget.QkTextView: boolean getCollapseEnabled()
androidx.recyclerview.widget.RecyclerView: void setItemViewCacheSize(int)
dev.octoshrimpy.quik.feature.blocking.manager.BlockingManagerPreferenceView: java.lang.String getSummary()
dev.octoshrimpy.quik.feature.conversationinfo.ConversationInfoController: ConversationInfoController()
com.google.android.material.floatingactionbutton.FloatingActionButton: void setSupportImageTintMode(android.graphics.PorterDuff$Mode)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void registerIn(android.app.Activity)
androidx.appcompat.widget.ActionBarOverlayLayout: void setIcon(int)
com.google.android.material.button.MaterialButton: void setIconSize(int)
com.google.android.material.snackbar.BaseTransientBottomBar$SnackbarBaseLayout: void setClickableOrFocusableBasedOnAccessibility(boolean)
com.google.android.material.appbar.CollapsingToolbarLayout: android.graphics.drawable.Drawable getContentScrim()
androidx.coordinatorlayout.widget.CoordinatorLayout: void setStatusBarBackgroundColor(int)
com.google.android.exoplayer2.ui.PlayerView: com.google.android.exoplayer2.Player getPlayer()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: void setRotation(float)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: float getFillAlpha()
io.reactivex.internal.functions.ObjectHelper$BiObjectPredicate: ObjectHelper$BiObjectPredicate()
androidx.core.app.RemoteActionCompatParcelizer: RemoteActionCompatParcelizer()
com.google.android.flexbox.FlexboxLayout: void setDividerDrawableHorizontal(android.graphics.drawable.Drawable)
com.google.android.material.button.MaterialButton: void setIcon(android.graphics.drawable.Drawable)
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper$Impl29: AppCompatTextViewAutoSizeHelper$Impl29()
androidx.constraintlayout.solver.widgets.ConstraintAnchor$ConnectionType: androidx.constraintlayout.solver.widgets.ConstraintAnchor$ConnectionType valueOf(java.lang.String)
kotlin.reflect.jvm.internal.impl.descriptors.annotations.AnnotationUseSiteTarget: kotlin.reflect.jvm.internal.impl.descriptors.annotations.AnnotationUseSiteTarget valueOf(java.lang.String)
io.reactivex.internal.schedulers.NewThreadScheduler: NewThreadScheduler()
io.realm.internal.Property: java.lang.String nativeGetLinkedObjectName(long)
androidx.appcompat.app.AppCompatViewInflater: androidx.appcompat.widget.AppCompatTextView createTextView(android.content.Context,android.util.AttributeSet)
androidx.coordinatorlayout.widget.CoordinatorLayout: int getSuggestedMinimumWidth()
io.realm.internal.core.NativeRealmAny: long nativeCreateString(java.lang.String)
com.github.chrisbanes.photoview.PhotoView: void setMediumScale(float)
com.google.android.material.appbar.CollapsingToolbarLayout: void setContentScrimColor(int)
androidx.recyclerview.widget.RecyclerView: void setPreserveFocusAfterLayout(boolean)
androidx.core.view.WindowInsetsCompat$Impl20: boolean isRound()
androidx.appcompat.widget.Toolbar: int getCurrentContentInsetStart()
kotlin.reflect.jvm.internal.impl.renderer.ParameterNameRenderingPolicy: kotlin.reflect.jvm.internal.impl.renderer.ParameterNameRenderingPolicy valueOf(java.lang.String)
io.realm.internal.Table: long nativeGetRowPtr(long,long)
com.google.android.exoplayer2.ui.SubtitleView: void setApplyEmbeddedStyles(boolean)
io.realm.internal.OsObject: void nativeStopListening(long)
androidx.appcompat.widget.SearchView: void setQueryRefinementEnabled(boolean)
kotlin.reflect.jvm.internal.KDeclarationContainerImpl$MemberBelonginess: kotlin.reflect.jvm.internal.KDeclarationContainerImpl$MemberBelonginess[] values()
kotlin.reflect.jvm.internal.impl.builtins.jvm.JvmBuiltInsSettings$JDKMemberStatus: kotlin.reflect.jvm.internal.impl.builtins.jvm.JvmBuiltInsSettings$JDKMemberStatus valueOf(java.lang.String)
io.realm.internal.UncheckedRow: boolean nativeIsNullLink(long,long)
com.google.android.material.floatingactionbutton.FloatingActionButton: void setImageDrawable(android.graphics.drawable.Drawable)
io.realm.internal.Table: long nativeGetColumnKey(long,java.lang.String)
androidx.recyclerview.widget.RecyclerView: boolean getPreserveFocusAfterLayout()
io.reactivex.internal.subscriptions.EmptySubscription: io.reactivex.internal.subscriptions.EmptySubscription valueOf(java.lang.String)
androidx.appcompat.widget.AppCompatSpinner: android.graphics.drawable.Drawable getPopupBackground()
com.github.chrisbanes.photoview.PhotoView: float getMediumScale()
com.google.android.material.appbar.AppBarLayout$ScrollingViewBehavior: AppBarLayout$ScrollingViewBehavior(android.content.Context,android.util.AttributeSet)
io.realm.internal.core.NativeRealmAny: double nativeAsDouble(long)
dev.octoshrimpy.quik.common.widget.PreferenceView: PreferenceView(android.content.Context,android.util.AttributeSet)
androidx.emoji.widget.EmojiExtractEditText: void setMaxEmojiCount(int)
com.google.android.material.internal.NavigationMenuItemView: void setActionView(android.view.View)
kotlin.reflect.jvm.internal.AnnotationConstructorCaller$CallMode: kotlin.reflect.jvm.internal.AnnotationConstructorCaller$CallMode valueOf(java.lang.String)
io.reactivex.Scheduler$Worker: Scheduler$Worker()
io.reactivex.internal.observers.BlockingMultiObserver: BlockingMultiObserver()
io.realm.internal.OsMap: void nativeClear(long)
androidx.viewpager.widget.ViewPager: void setScrollState(int)
androidx.appcompat.widget.ContentFrameLayout: void setAttachListener(androidx.appcompat.widget.ContentFrameLayout$OnAttachListener)
androidx.appcompat.widget.ActionMenuView: void setPopupTheme(int)
com.github.chrisbanes.photoview.PhotoView: void setOnLongClickListener(android.view.View$OnLongClickListener)
androidx.recyclerview.widget.RecyclerView: int getMaxFlingVelocity()
androidx.appcompat.app.AppCompatViewInflater: androidx.appcompat.widget.AppCompatSeekBar createSeekBar(android.content.Context,android.util.AttributeSet)
androidx.core.view.WindowInsetsCompat$Impl21: androidx.core.graphics.Insets getStableInsets()
io.realm.internal.core.NativeRealmAny: long getNativePtr()
dev.octoshrimpy.quik.feature.compose.editing.DetailedChipView: void setOnDeleteListener(kotlin.jvm.functions.Function1)
io.michaelrocks.libphonenumber.android.PhoneNumberUtil$MatchType: io.michaelrocks.libphonenumber.android.PhoneNumberUtil$MatchType[] values()
androidx.core.view.WindowInsetsCompat$Impl30: void copyRootViewBounds(android.view.View)
org.bson.types.ObjectId: ObjectId(java.util.Date,int)
androidx.appcompat.widget.AppCompatRadioButton: android.content.res.ColorStateList getSupportButtonTintList()
androidx.appcompat.widget.Toolbar: int getContentInsetRight()
kotlin.reflect.jvm.internal.impl.load.java.descriptors.JavaMethodDescriptor$ParameterNamesStatus: kotlin.reflect.jvm.internal.impl.load.java.descriptors.JavaMethodDescriptor$ParameterNamesStatus valueOf(java.lang.String)
androidx.constraintlayout.widget.ConstraintLayout: int getMaxHeight()
kotlin.reflect.jvm.internal.impl.metadata.ProtoBuf$Class$Kind: kotlin.reflect.jvm.internal.impl.metadata.ProtoBuf$Class$Kind[] values()
com.google.android.flexbox.FlexboxLayout: void setAlignContent(int)
io.realm.internal.core.NativeRealmAny: long nativeCreateLong(long)
io.realm.internal.OsSharedRealm: void nativeRenameTable(long,java.lang.String,java.lang.String)
androidx.appcompat.widget.ActionBarOverlayLayout: void setHideOnContentScrollEnabled(boolean)
com.google.android.exoplayer2.ui.PlayerControlView: void setPlayer(com.google.android.exoplayer2.Player)
io.reactivex.Scheduler: Scheduler()
io.realm.internal.OsList: long nativeSize(long)
io.reactivex.internal.disposables.SequentialDisposable: SequentialDisposable()
kotlin.reflect.jvm.internal.impl.metadata.ProtoBuf$Type$Argument$Projection: kotlin.reflect.jvm.internal.impl.metadata.ProtoBuf$Type$Argument$Projection[] values()
com.google.android.exoplayer2.ui.PlayerControlView: void setVisibilityListener(com.google.android.exoplayer2.ui.PlayerControlView$VisibilityListener)
io.realm.internal.OsSharedRealm: long nativeGetLatestSubscriptionSet(long)
dev.octoshrimpy.quik.feature.blocking.BlockingController: BlockingController()
io.realm.internal.Table: boolean nativeIsValid(long)
androidx.appcompat.view.menu.ActionMenuItemView: void setTitle(java.lang.CharSequence)
kotlin.reflect.jvm.internal.impl.name.State: kotlin.reflect.jvm.internal.impl.name.State[] values()
io.realm.internal.OsMap: boolean nativeContainsLong(long,long)
androidx.appcompat.widget.SwitchCompat: void setSwitchPadding(int)
io.realm.internal.OsMap: long nativeGetRealmAnyPtr(long,java.lang.String)
com.github.chrisbanes.photoview.PhotoView: void setOnClickListener(android.view.View$OnClickListener)
io.realm.internal.TableQuery: void nativeBeginGroup(long)
io.realm.internal.OsSharedRealm: boolean hasTable(java.lang.String)
kotlin.reflect.jvm.internal.impl.builtins.PrimitiveType: kotlin.reflect.jvm.internal.impl.builtins.PrimitiveType[] values()
kotlin.reflect.jvm.internal.impl.renderer.DescriptorRendererModifier: kotlin.reflect.jvm.internal.impl.renderer.DescriptorRendererModifier[] values()
com.google.android.material.appbar.CollapsingToolbarLayout: int getExpandedTitleGravity()
com.github.chrisbanes.photoview.PhotoView: float getMinimumScale()
com.google.android.exoplayer2.ui.PlayerView: int getControllerShowTimeoutMs()
io.realm.internal.OsList: boolean nativeIsValid(long)
kotlin.coroutines.AbstractCoroutineContextElement: kotlin.coroutines.CoroutineContext$Element get(kotlin.coroutines.CoroutineContext$Key)
com.github.chrisbanes.photoview.PhotoView: android.graphics.Matrix getImageMatrix()
androidx.constraintlayout.solver.widgets.ConstraintAnchor$Strength: androidx.constraintlayout.solver.widgets.ConstraintAnchor$Strength valueOf(java.lang.String)
io.realm.internal.OsSharedRealm: boolean nativeIsAutoRefresh(long)
com.google.android.material.appbar.CollapsingToolbarLayout: void setTitle(java.lang.CharSequence)
androidx.recyclerview.widget.RecyclerView: void setViewCacheExtension(androidx.recyclerview.widget.RecyclerView$ViewCacheExtension)
io.realm.RealmFieldType: RealmFieldType(java.lang.String,int,int)
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper$Impl: void computeAndSetTextDirection(android.text.StaticLayout$Builder,android.widget.TextView)
kotlin.random.Random: Random()
io.realm.internal.core.NativeRealmAnyCollection: long nativeCreateBinaryCollection(byte[][],boolean[])
androidx.appcompat.widget.ActionBarContextView: java.lang.CharSequence getTitle()
androidx.recyclerview.widget.RecyclerView: long getNanoTime()
androidx.appcompat.widget.AppCompatEditText: void setBackgroundResource(int)
com.squareup.moshi.MapJsonAdapter: MapJsonAdapter(com.squareup.moshi.Moshi,java.lang.reflect.Type,java.lang.reflect.Type)
androidx.appcompat.widget.SwitchCompat: void setThumbTintList(android.content.res.ColorStateList)
io.realm.internal.CheckedRow: double nativeGetDouble(long,long)
io.realm.internal.OsObject: OsObject(io.realm.internal.OsSharedRealm,io.realm.internal.UncheckedRow)
dev.octoshrimpy.quik.common.widget.AvatarView: void setColors(dev.octoshrimpy.quik.common.util.Colors)
kotlin.reflect.jvm.internal.KDeclarationContainerImpl$MemberBelonginess: kotlin.reflect.jvm.internal.KDeclarationContainerImpl$MemberBelonginess valueOf(java.lang.String)
androidx.appcompat.widget.ActionMenuView: void setOnMenuItemClickListener(androidx.appcompat.widget.ActionMenuView$OnMenuItemClickListener)
com.google.android.material.button.MaterialButton: void setBackgroundResource(int)
io.realm.exceptions.RealmFileException: RealmFileException(io.realm.exceptions.RealmFileException$Kind,java.lang.Throwable)
kotlin.reflect.jvm.internal.impl.metadata.ProtoBuf$Class$Kind: kotlin.reflect.jvm.internal.impl.metadata.ProtoBuf$Class$Kind valueOf(java.lang.String)
io.realm.internal.android.AndroidRealmNotifier: boolean post(java.lang.Runnable)
dev.octoshrimpy.quik.common.widget.GroupAvatarView: GroupAvatarView(android.content.Context,android.util.AttributeSet)
androidx.appcompat.app.AppCompatViewInflater: androidx.appcompat.widget.AppCompatCheckedTextView createCheckedTextView(android.content.Context,android.util.AttributeSet)
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView: void setBackgroundDrawable(android.graphics.drawable.Drawable)
io.realm.internal.OsResults: long nativeSize(long)
io.realm.internal.Table: boolean nativeIsEmbedded(long)
androidx.appcompat.widget.AppCompatTextView: void setCustomSelectionActionModeCallback(android.view.ActionMode$Callback)
io.realm.internal.OsSet: long[] nativeAddObjectId(long,java.lang.String)
androidx.drawerlayout.widget.DrawerLayout: void setStatusBarBackground(android.graphics.drawable.Drawable)
dev.octoshrimpy.quik.common.widget.QkTextView: void setTextViewStyler(dev.octoshrimpy.quik.common.util.TextViewStyler)
kotlin.reflect.jvm.internal.impl.storage.LockBasedStorageManager$NotValue: kotlin.reflect.jvm.internal.impl.storage.LockBasedStorageManager$NotValue[] values()
kotlin.reflect.jvm.internal.impl.renderer.DescriptorRendererModifier: kotlin.reflect.jvm.internal.impl.renderer.DescriptorRendererModifier valueOf(java.lang.String)
io.realm.internal.UncheckedRow: double nativeGetDouble(long,long)
androidx.appcompat.widget.AppCompatImageButton: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
io.reactivex.internal.schedulers.SchedulerPoolFactory$ScheduledTask: SchedulerPoolFactory$ScheduledTask()
androidx.appcompat.widget.Toolbar: java.lang.CharSequence getCollapseContentDescription()
androidx.appcompat.widget.Toolbar: void setLogoDescription(int)
kotlin.reflect.jvm.internal.impl.load.java.JavaIncompatibilityRulesOverridabilityCondition: kotlin.reflect.jvm.internal.impl.resolve.ExternalOverridabilityCondition$Contract getContract()
androidx.appcompat.widget.ContentFrameLayout: android.util.TypedValue getFixedWidthMajor()
androidx.recyclerview.widget.RecyclerView: RecyclerView(android.content.Context,android.util.AttributeSet)
io.realm.internal.core.NativeRealmAny: java.lang.String nativeGetRealmModelTableName(long,long)
com.bluelinelabs.conductor.internal.ViewAttachHandler$ReportedState: com.bluelinelabs.conductor.internal.ViewAttachHandler$ReportedState valueOf(java.lang.String)
com.google.android.material.floatingactionbutton.FloatingActionButton: void setBackgroundDrawable(android.graphics.drawable.Drawable)
androidx.recyclerview.widget.RecyclerView: void setChildDrawingOrderCallback(androidx.recyclerview.widget.RecyclerView$ChildDrawingOrderCallback)
com.google.android.exoplayer2.ui.DefaultTimeBar: long getScrubberPosition()
com.uber.autodispose.AtomicThrowable: AtomicThrowable()
io.realm.internal.objectstore.OsObjectBuilder: void nativeAddDoubleSetItem(long,double)
io.realm.internal.OsRealmConfig: void nativeSetSyncConfigProxySettings(long,byte,java.lang.String,int)
com.google.android.material.appbar.CollapsingToolbarLayout: void setTitleEnabled(boolean)
io.realm.internal.OsSharedRealm: void invalidateIterators()
androidx.appcompat.widget.Toolbar: java.lang.CharSequence getTitle()
androidx.appcompat.widget.ViewStubCompat: int getLayoutResource()
io.realm.internal.OsSet: java.lang.Object nativeGetValueAtIndex(long,int)
androidx.appcompat.widget.AppCompatTextView: int getAutoSizeStepGranularity()
io.realm.internal.OsList: void nativeInsertRealmAny(long,long,long)
io.realm.internal.objectstore.OsObjectBuilder: void nativeAddDecimal128SetItem(long,long,long)
androidx.appcompat.widget.ViewStubCompat: int getInflatedId()
io.realm.internal.OsList: long[] nativeCreate(long,long,long)
io.realm.exceptions.RealmMigrationNeededException: RealmMigrationNeededException(java.lang.String,java.lang.String)
androidx.appcompat.widget.AppCompatImageButton: void setImageDrawable(android.graphics.drawable.Drawable)
androidx.appcompat.view.menu.ListMenuItemView: androidx.appcompat.view.menu.MenuItemImpl getItemData()
com.google.android.exoplayer2.ui.DefaultTimeBar: void setEnabled(boolean)
io.realm.internal.core.NativeRealmAny: boolean asBoolean()
io.reactivex.subjects.Subject: Subject()
com.google.android.material.appbar.CollapsingToolbarLayout: java.lang.CharSequence getTitle()
androidx.emoji.widget.EmojiExtractEditText: int getEmojiReplaceStrategy()
androidx.constraintlayout.widget.ConstraintLayout: int getMaxWidth()
androidx.core.view.WindowInsetsCompat$Impl20: WindowInsetsCompat$Impl20(androidx.core.view.WindowInsetsCompat,android.view.WindowInsets)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityPaused(android.app.Activity)
com.github.chrisbanes.photoview.PhotoView: void setImageResource(int)
io.realm.internal.CheckedRow: void nativeNullifyLink(long,long)
com.google.android.material.transformation.FabTransformationScrimBehavior: FabTransformationScrimBehavior(android.content.Context,android.util.AttributeSet)
dev.octoshrimpy.quik.receiver.MmsUpdatedReceiver: MmsUpdatedReceiver()
androidx.core.widget.NestedScrollView: NestedScrollView(android.content.Context,android.util.AttributeSet)
io.realm.annotations.RealmModule: boolean library()
io.realm.internal.OsSharedRealm: void close()
com.google.android.material.floatingactionbutton.FloatingActionButton: void setBackgroundResource(int)
com.google.android.exoplayer2.ui.DefaultTimeBar: void setBufferedColor(int)
androidx.appcompat.widget.Toolbar: void setTitleMarginEnd(int)
io.realm.internal.Table: void nativeSetLink(long,long,long,long,boolean)
dev.octoshrimpy.quik.feature.main.MainActivity: MainActivity()
androidx.core.view.WindowInsetsCompat$Impl20: void setOverriddenInsets(androidx.core.graphics.Insets[])
io.realm.internal.CheckedRow: float nativeGetFloat(long,long)
com.google.android.material.floatingactionbutton.FloatingActionButton: void setShowMotionSpecResource(int)
com.google.android.material.button.MaterialButton: int getIconGravity()
androidx.appcompat.widget.Toolbar: android.widget.TextView getTitleTextView()
io.realm.internal.OsSet: long[] nativeRemoveRealmAny(long,long)
androidx.core.widget.NestedScrollView: int getScrollRange()
androidx.appcompat.widget.ActionBarContextView: void setTitle(java.lang.CharSequence)
androidx.appcompat.widget.ActionBarContainer: void setStackedBackground(android.graphics.drawable.Drawable)
androidx.appcompat.view.menu.ActionMenuItemView: void setChecked(boolean)
androidx.constraintlayout.widget.ConstraintLayout: void setMaxWidth(int)
io.realm.internal.OsList: void nativeInsertRow(long,long,long)
dev.octoshrimpy.quik.common.widget.QkSwitch: QkSwitch(android.content.Context,android.util.AttributeSet)
com.google.android.material.appbar.CollapsingToolbarLayout: void setExpandedTitleMarginStart(int)
com.google.android.material.button.MaterialButton: android.content.res.ColorStateList getRippleColor()
io.realm.internal.OsResults: long nativeFirstRow(long)
androidx.appcompat.app.AppCompatViewInflater: androidx.appcompat.widget.AppCompatSpinner createSpinner(android.content.Context,android.util.AttributeSet)
io.realm.internal.Table: boolean nativeHasSearchIndex(long,long)
io.realm.internal.OsSet: boolean nativeContainsRealmAny(long,long)
com.google.android.material.floatingactionbutton.FloatingActionButton$BaseBehavior: FloatingActionButton$BaseBehavior()
androidx.transition.FragmentTransitionSupport: FragmentTransitionSupport()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: float getTranslateX()
androidx.core.view.WindowInsetsCompat$BuilderImpl29: void setSystemWindowInsets(androidx.core.graphics.Insets)
dev.octoshrimpy.quik.feature.blocking.manager.BlockingManagerPreferenceView: BlockingManagerPreferenceView(android.content.Context,android.util.AttributeSet)
androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$EdgeEffectFactory getEdgeEffectFactory()
io.realm.internal.OsMap: boolean nativeContainsRealmModel(long,long,long)
androidx.recyclerview.widget.RecyclerView: void setItemAnimator(androidx.recyclerview.widget.RecyclerView$ItemAnimator)
com.google.android.material.floatingactionbutton.FloatingActionButton: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
androidx.core.view.WindowInsetsCompat$BuilderImpl: WindowInsetsCompat$BuilderImpl(androidx.core.view.WindowInsetsCompat)
com.bumptech.glide.load.DecodeFormat: com.bumptech.glide.load.DecodeFormat[] values()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: float getStrokeAlpha()
io.realm.internal.UncheckedRow: boolean nativeIsValid(long)
androidx.appcompat.widget.SwitchCompat: boolean getShowText()
com.bluelinelabs.conductor.internal.ViewAttachHandler$ReportedState: com.bluelinelabs.conductor.internal.ViewAttachHandler$ReportedState[] values()
io.realm.internal.OsObject: long nativeCreateRow(long)
io.realm.internal.core.NativeRealmAny: int nativeGetType(long)
androidx.appcompat.widget.SearchView: void setIconified(boolean)
com.google.android.material.appbar.CollapsingToolbarLayout: android.graphics.Typeface getCollapsedTitleTypeface()
com.google.android.flexbox.FlexboxLayout: int getShowDividerHorizontal()
kotlin.reflect.jvm.internal.impl.metadata.ProtoBuf$VersionRequirement$Level: kotlin.reflect.jvm.internal.impl.metadata.ProtoBuf$VersionRequirement$Level valueOf(java.lang.String)
io.realm.internal.objectstore.OsObjectBuilder: void nativeAddBooleanDictionaryEntry(long,java.lang.String,boolean)
io.realm.internal.OsMap: boolean nativeContainsDecimal128(long,long,long)
io.realm.internal.OsSet: long[] nativeAddBinary(long,byte[])
io.realm.Sort: io.realm.Sort valueOf(java.lang.String)
androidx.core.view.WindowInsetsCompat$BuilderImpl29: void setTappableElementInsets(androidx.core.graphics.Insets)
io.realm.internal.OsList: void nativeRemoveAll(long)
com.bluelinelabs.conductor.Controller$RetainViewMode: com.bluelinelabs.conductor.Controller$RetainViewMode[] values()
io.realm.internal.OsMap: void nativePutDouble(long,java.lang.String,double)
androidx.core.view.WindowInsetsCompat$Impl21: void setStableInsets(androidx.core.graphics.Insets)
androidx.core.view.WindowInsetsCompat$BuilderImpl: void setSystemGestureInsets(androidx.core.graphics.Insets)
io.realm.internal.objectstore.OsObjectBuilder: void nativeDestroyBuilder(long)
io.realm.internal.OsSet: long[] nativeAddString(long,java.lang.String)
com.google.android.flexbox.FlexboxLayout: java.util.List getFlexLinesInternal()
kotlin.reflect.jvm.internal.impl.metadata.ProtoBuf$Modality: kotlin.reflect.jvm.internal.impl.metadata.ProtoBuf$Modality valueOf(java.lang.String)
com.google.android.material.floatingactionbutton.FloatingActionButton: void setCompatHoveredFocusedTranslationZ(float)
androidx.core.app.RemoteActionCompatParcelizer: androidx.core.app.RemoteActionCompat read(androidx.versionedparcelable.VersionedParcel)
io.michaelrocks.libphonenumber.android.PhoneNumberUtil$PhoneNumberType: io.michaelrocks.libphonenumber.android.PhoneNumberUtil$PhoneNumberType valueOf(java.lang.String)
com.google.android.material.internal.NavigationMenuItemView: androidx.appcompat.view.menu.MenuItemImpl getItemData()
com.google.android.exoplayer2.ui.PlayerView: PlayerView(android.content.Context,android.util.AttributeSet)
com.google.android.exoplayer2.ui.AspectRatioFrameLayout: AspectRatioFrameLayout(android.content.Context,android.util.AttributeSet)
androidx.drawerlayout.widget.DrawerLayout: void setStatusBarBackground(int)
io.realm.internal.OsResults: boolean nativeIsValid(long)
com.google.android.flexbox.FlexboxLayout: void setJustifyContent(int)
androidx.appcompat.widget.SwitchCompat: android.content.res.ColorStateList getThumbTintList()
androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type: androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type[] values()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: float getRotation()
io.realm.annotations.RealmModule: io.realm.annotations.RealmNamingPolicy classNamingPolicy()
com.google.android.material.transformation.ExpandableTransformationBehavior: ExpandableTransformationBehavior(android.content.Context,android.util.AttributeSet)
io.realm.internal.core.NativeRealmAny: long nativeCreateBinary(byte[])
io.realm.exceptions.RealmFileException$Kind: io.realm.exceptions.RealmFileException$Kind valueOf(java.lang.String)
androidx.core.view.WindowInsetsCompat$Impl20: void copyRootViewBounds(android.view.View)
io.reactivex.internal.functions.Functions$EmptyConsumer: Functions$EmptyConsumer()
kotlin.reflect.jvm.internal.impl.types.checker.TypeIntersector$ResultNullability: kotlin.reflect.jvm.internal.impl.types.checker.TypeIntersector$ResultNullability valueOf(java.lang.String)
io.realm.internal.OsList: void nativeAddNull(long)
androidx.constraintlayout.widget.ConstraintLayout: void setMinWidth(int)
androidx.viewpager.widget.ViewPager: int getClientWidth()
io.realm.internal.objectstore.OsObjectBuilder: void nativeStopList(long,long,long)
com.github.mangstadt.vinnie.io.Warning: com.github.mangstadt.vinnie.io.Warning valueOf(java.lang.String)
io.realm.internal.OsSharedRealm: void nativeBeginTransaction(long)
io.realm.internal.core.NativeRealmAny: io.realm.RealmAny$Type getType()
io.realm.RealmAny$Type: io.realm.RealmAny$Type valueOf(java.lang.String)
com.google.android.material.floatingactionbutton.FloatingActionButton: int getSize()
io.realm.internal.OsSharedRealm: io.realm.internal.OsSchemaInfo getSchemaInfo()
kotlin.reflect.KParameter$Kind: kotlin.reflect.KParameter$Kind[] values()
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
kotlin.reflect.jvm.internal.impl.storage.LockBasedStorageManager$NotValue: kotlin.reflect.jvm.internal.impl.storage.LockBasedStorageManager$NotValue valueOf(java.lang.String)
io.realm.internal.OsMap: void nativePutString(long,java.lang.String,java.lang.String)
io.realm.internal.OsRealmConfig: void nativeSetCompactOnLaunchCallback(long,io.realm.CompactOnLaunchCallback)
kotlin.reflect.jvm.internal.impl.metadata.ProtoBuf$Annotation$Argument$Value$Type: kotlin.reflect.jvm.internal.impl.metadata.ProtoBuf$Annotation$Argument$Value$Type[] values()
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityCreated(android.app.Activity,android.os.Bundle)
androidx.lifecycle.ReportFragment: ReportFragment()
com.github.chrisbanes.photoview.PhotoView: void setOnDoubleTapListener(android.view.GestureDetector$OnDoubleTapListener)
com.google.android.material.button.MaterialButton: void setRippleColor(android.content.res.ColorStateList)
androidx.appcompat.widget.AppCompatButton: int getAutoSizeMinTextSize()
io.realm.FrozenPendingRow: io.realm.FrozenPendingRow[] values()
org.bson.types.ObjectId: ObjectId(java.lang.String)
com.google.android.exoplayer2.ui.PlayerView: void setErrorMessageProvider(com.google.android.exoplayer2.util.ErrorMessageProvider)
androidx.recyclerview.widget.LinearLayoutManager: LinearLayoutManager(android.content.Context,android.util.AttributeSet,int,int)
org.bson.types.ObjectId: ObjectId(int,int,short,int,boolean)
com.google.android.exoplayer2.ui.SubtitleView: SubtitleView(android.content.Context,android.util.AttributeSet)
androidx.core.view.WindowInsetsCompat$Impl: void setStableInsets(androidx.core.graphics.Insets)
dev.octoshrimpy.quik.common.widget.PagerTitleView: void setConversationRepo(dev.octoshrimpy.quik.repository.ConversationRepository)
com.klinker.android.send_message.MmsFileProvider: MmsFileProvider()
androidx.appcompat.widget.SearchView: void setOnQueryTextListener(androidx.appcompat.widget.SearchView$OnQueryTextListener)
androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$Adapter getAdapter()
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityPrePaused(android.app.Activity)
io.realm.internal.Table: java.lang.String nativeGetColumnName(long,long)
com.google.android.material.button.MaterialButton: void setStrokeWidthResource(int)
io.realm.internal.OsSharedRealm: OsSharedRealm(long,io.realm.internal.OsRealmConfig)
io.realm.internal.core.NativeRealmAny: long[] nativeAsDecimal128(long)
io.realm.internal.OsSharedRealm: io.realm.internal.OsSharedRealm getInstance(io.realm.RealmConfiguration,io.realm.internal.OsSharedRealm$VersionID)
io.realm.internal.OsSet: long[] nativeRemoveFloat(long,float)
io.realm.internal.OsSet: long[] nativeRemoveString(long,java.lang.String)
kotlin.reflect.jvm.internal.impl.metadata.ProtoBuf$Effect$EffectType: kotlin.reflect.jvm.internal.impl.metadata.ProtoBuf$Effect$EffectType[] values()
dev.octoshrimpy.quik.common.widget.GroupAvatarView: void setRecipients(java.util.List)
androidx.appcompat.widget.SearchView: int getMaxWidth()
androidx.appcompat.widget.ActionMenuView: void setOverflowIcon(android.graphics.drawable.Drawable)
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
androidx.recyclerview.widget.RecyclerView: void setLayoutTransition(android.animation.LayoutTransition)
io.realm.internal.OsSharedRealm: long getNumberOfVersions()
org.bson.types.ObjectId: ObjectId(int,int,int)
dev.octoshrimpy.quik.common.widget.QkEditText: QkEditText(android.content.Context,android.util.AttributeSet)
com.google.android.material.button.MaterialButton: android.content.res.ColorStateList getIconTint()
io.realm.internal.OsMap: long nativeGetFinalizerPtr()
io.realm.internal.OsList: void nativeSetFloat(long,long,float)
io.realm.internal.OsSet: long[] nativeRemoveUUID(long,java.lang.String)
androidx.appcompat.widget.ActionBarContainer: void setSplitBackground(android.graphics.drawable.Drawable)
com.google.android.flexbox.FlexboxLayout: int getAlignItems()
androidx.core.view.WindowInsetsCompat$Impl20: androidx.core.graphics.Insets getSystemWindowInsets()
io.realm.internal.RealmNotifier: void addFinishedSendingNotificationsCallback(java.lang.Runnable)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: float getTrimPathStart()
androidx.appcompat.widget.Toolbar: java.lang.CharSequence getSubtitle()
androidx.appcompat.widget.AppCompatCheckBox: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
io.realm.internal.objectstore.OsObjectBuilder: void nativeAddUUIDDictionaryEntry(long,java.lang.String,java.lang.String)
io.michaelrocks.libphonenumber.android.PhoneNumberUtil$MatchType: io.michaelrocks.libphonenumber.android.PhoneNumberUtil$MatchType valueOf(java.lang.String)
androidx.drawerlayout.widget.DrawerLayout: void setDrawerElevation(float)
dev.octoshrimpy.quik.receiver.MmsReceiver: MmsReceiver()
dev.octoshrimpy.quik.feature.qkreply.QkReplyActivity: QkReplyActivity()
io.reactivex.internal.operators.flowable.FlowableEmpty: FlowableEmpty()
io.realm.internal.OsSet: boolean nativeUnion(long,long)
androidx.core.graphics.drawable.IconCompatParcelizer: IconCompatParcelizer()
io.realm.internal.Table: long nativeAddPrimitiveListColumn(long,int,java.lang.String,boolean)
io.realm.RealmFieldType: io.realm.RealmFieldType fromNativeValue(int)
androidx.appcompat.widget.AppCompatButton: int[] getAutoSizeTextAvailableSizes()
androidx.appcompat.widget.AppCompatSpinner: void setDropDownVerticalOffset(int)
dev.octoshrimpy.quik.feature.compose.editing.PhoneNumberAction: dev.octoshrimpy.quik.feature.compose.editing.PhoneNumberAction[] values()
io.realm.internal.objectstore.OsObjectBuilder: void nativeAddBoolean(long,long,boolean)
io.realm.internal.OsRealmConfig: void nativeSetEncryptionKey(long,byte[])
io.realm.internal.objectstore.OsObjectBuilder: void nativeAddFloatListItem(long,float)
dev.octoshrimpy.quik.feature.themepicker.ThemePickerController: ThemePickerController()
androidx.appcompat.widget.FitWindowsLinearLayout: void setOnFitSystemWindowsListener(androidx.appcompat.widget.FitWindowsViewGroup$OnFitSystemWindowsListener)
androidx.appcompat.widget.Toolbar: android.graphics.drawable.Drawable getLogo()
io.realm.internal.OsSet: long[] nativeRemoveDouble(long,double)
io.realm.log.RealmLog: int nativeGetLogLevel()
io.realm.internal.Table: void nativeSetLong(long,long,long,long,boolean)
com.google.android.material.appbar.CollapsingToolbarLayout: void setCollapsedTitleTextColor(android.content.res.ColorStateList)
com.bumptech.glide.Priority: com.bumptech.glide.Priority[] values()
com.google.android.flexbox.FlexboxLayout: android.graphics.drawable.Drawable getDividerDrawableVertical()
com.google.android.flexbox.FlexboxLayout: void setFlexWrap(int)
io.realm.internal.objectstore.OsObjectBuilder: void nativeAddByteArraySetItem(long,byte[])
androidx.recyclerview.widget.RecyclerView: int getItemDecorationCount()
androidx.core.view.WindowInsetsCompat$Impl20: void setRootWindowInsets(androidx.core.view.WindowInsetsCompat)
io.realm.internal.Table: long nativeFindFirstInt(long,long,long)
androidx.appcompat.widget.SearchView: int getPreferredWidth()
androidx.emoji.widget.EmojiAppCompatTextView: void setFilters(android.text.InputFilter[])
kotlin.reflect.jvm.internal.impl.metadata.ProtoBuf$Expression$ConstantValue: kotlin.reflect.jvm.internal.impl.metadata.ProtoBuf$Expression$ConstantValue valueOf(java.lang.String)
androidx.appcompat.widget.ContentFrameLayout: android.util.TypedValue getFixedWidthMinor()
androidx.appcompat.widget.ActionBarContainer: android.view.View getTabContainer()
io.realm.internal.OsMap: boolean nativeContainsDouble(long,double)
com.squareup.moshi.StandardJsonAdapters$ObjectJsonAdapter: StandardJsonAdapters$ObjectJsonAdapter(com.squareup.moshi.Moshi)
androidx.core.view.ViewCompat$Api29Impl: void saveAttributeDataForStyleable(android.view.View,android.content.Context,int[],android.util.AttributeSet,android.content.res.TypedArray,int,int)
com.google.android.material.appbar.CollapsingToolbarLayout: void setContentScrim(android.graphics.drawable.Drawable)
com.google.android.exoplayer2.ui.spherical.SphericalSurfaceView: void setVideoComponent(com.google.android.exoplayer2.Player$VideoComponent)
androidx.appcompat.view.menu.ActionMenuItemView: void setIcon(android.graphics.drawable.Drawable)
androidx.core.view.WindowInsetsCompat$BuilderImpl29: androidx.core.view.WindowInsetsCompat build()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: float getPivotY()
androidx.appcompat.widget.LinearLayoutCompat: void setGravity(int)
io.realm.internal.OsSharedRealm: void nativeWriteCopy(long,java.lang.String,byte[])
androidx.appcompat.widget.ButtonBarLayout: void setAllowStacking(boolean)
androidx.appcompat.widget.ActionBarContextView: void setCustomView(android.view.View)
androidx.appcompat.widget.AppCompatButton: void setSupportBackgroundTintList(android.content.res.ColorStateList)
io.realm.exceptions.RealmFileException: io.realm.exceptions.RealmFileException$Kind getKind()
androidx.core.widget.NestedScrollView: void setOnScrollChangeListener(androidx.core.widget.NestedScrollView$OnScrollChangeListener)
io.realm.internal.UncheckedRow: long nativeGetRealmAny(long,long)
androidx.appcompat.widget.LinearLayoutCompat: void setMeasureWithLargestChildEnabled(boolean)
kotlin.reflect.jvm.internal.impl.load.java.typeEnhancement.MutabilityQualifier: kotlin.reflect.jvm.internal.impl.load.java.typeEnhancement.MutabilityQualifier[] values()
io.realm.internal.core.NativeRealmAny: long nativeCreateDouble(double)
kotlin.reflect.jvm.internal.impl.load.java.typeEnhancement.NullabilityQualifier: kotlin.reflect.jvm.internal.impl.load.java.typeEnhancement.NullabilityQualifier[] values()
io.realm.internal.RealmNotifier: io.realm.internal.OsSharedRealm access$000(io.realm.internal.RealmNotifier)
androidx.appcompat.widget.SearchView: int getSuggestionRowLayout()
androidx.appcompat.widget.AppCompatButton: android.content.res.ColorStateList getSupportBackgroundTintList()
androidx.appcompat.widget.AppCompatTextView: int getFirstBaselineToTopHeight()
com.uber.autodispose.ExceptionHelper$Termination: ExceptionHelper$Termination()
androidx.appcompat.widget.SwitchCompat: void setChecked(boolean)
androidx.appcompat.widget.AppCompatCheckBox: void setSupportButtonTintMode(android.graphics.PorterDuff$Mode)
dev.octoshrimpy.quik.common.widget.QkTextView: QkTextView(android.content.Context,android.util.AttributeSet)
com.google.android.exoplayer2.ui.TrackSelectionView: void setTrackNameProvider(com.google.android.exoplayer2.ui.TrackNameProvider)
androidx.appcompat.widget.AppCompatEditText: android.content.res.ColorStateList getSupportBackgroundTintList()
androidx.appcompat.view.menu.ListMenuItemView: void setForceShowIcon(boolean)
com.google.android.exoplayer2.ui.PlayerView: void setUseArtwork(boolean)
dev.octoshrimpy.quik.common.widget.QkSwitch: void setPrefs(dev.octoshrimpy.quik.util.Preferences)
io.realm.internal.OsSharedRealm: boolean nativeIsEmpty(long)
io.realm.internal.RealmNotifier: void close()
com.google.android.exoplayer2.ui.DefaultTimeBar: long getPositionIncrement()
kotlin.reflect.jvm.internal.impl.load.java.BuiltinMethodsWithSpecialGenericSignature$TypeSafeBarrierDescription: kotlin.reflect.jvm.internal.impl.load.java.BuiltinMethodsWithSpecialGenericSignature$TypeSafeBarrierDescription[] values()
dev.octoshrimpy.quik.feature.widget.WidgetService: WidgetService()
com.google.android.material.internal.BaselineLayout: int getBaseline()
androidx.appcompat.widget.AppCompatToggleButton: void setBackgroundResource(int)
androidx.recyclerview.widget.RecyclerView: void setHasFixedSize(boolean)
io.realm.internal.objectstore.OsObjectBuilder: long nativeCreateBuilder()
com.google.android.exoplayer2.ui.PlayerControlView: void setRepeatToggleModes(int)
io.reactivex.internal.functions.Functions$Identity: Functions$Identity()
com.google.android.exoplayer2.ui.PlayerControlView: com.google.android.exoplayer2.Player getPlayer()
androidx.appcompat.widget.AppCompatTextView: android.content.res.ColorStateList getSupportCompoundDrawablesTintList()
kotlin.reflect.jvm.internal.impl.name.State: kotlin.reflect.jvm.internal.impl.name.State valueOf(java.lang.String)
androidx.constraintlayout.widget.ConstraintHelper: int[] getReferencedIds()
com.google.android.material.button.MaterialButton: void setRippleColorResource(int)
androidx.appcompat.app.AppCompatViewInflater: android.view.View createView(android.content.Context,java.lang.String,android.util.AttributeSet)
androidx.appcompat.widget.Toolbar: int getCurrentContentInsetRight()
com.google.android.material.internal.NavigationMenuItemView: void setHorizontalPadding(int)
dev.octoshrimpy.quik.feature.themepicker.HSVPickerView: HSVPickerView(android.content.Context,android.util.AttributeSet)
kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState: kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState valueOf(java.lang.String)
com.google.android.material.internal.VisibilityAwareImageButton: void setVisibility(int)
com.google.android.exoplayer2.ui.PlayerView: android.graphics.drawable.Drawable getDefaultArtwork()
com.google.android.material.appbar.CollapsingToolbarLayout: void setExpandedTitleMarginEnd(int)
androidx.recyclerview.widget.RecyclerView: void setLayoutFrozen(boolean)
dev.octoshrimpy.quik.common.widget.PagerTitleView: void setColors(dev.octoshrimpy.quik.common.util.Colors)
kotlin.reflect.jvm.internal.impl.descriptors.annotations.KotlinRetention: kotlin.reflect.jvm.internal.impl.descriptors.annotations.KotlinRetention valueOf(java.lang.String)
io.reactivex.internal.observers.BasicIntQueueDisposable: BasicIntQueueDisposable()
com.google.android.material.internal.ForegroundLinearLayout: int getForegroundGravity()
com.squareup.moshi.ClassJsonAdapter: ClassJsonAdapter(com.squareup.moshi.ClassFactory,java.util.Map)
androidx.core.view.WindowInsetsCompat$BuilderImpl29: WindowInsetsCompat$BuilderImpl29()
io.realm.internal.OsObjectStore: void nativeSetPrimaryKeyForObject(long,java.lang.String,java.lang.String)
androidx.appcompat.view.menu.ListMenuItemView: android.view.LayoutInflater getInflater()
androidx.appcompat.widget.AppCompatSpinner: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
androidx.appcompat.widget.AppCompatRadioButton: void setButtonDrawable(int)
io.reactivex.Completable: Completable()
com.google.android.exoplayer2.ui.SubtitleView: void setBottomPaddingFraction(float)
io.realm.internal.UncheckedRow: void nativeSetNull(long,long)
androidx.appcompat.widget.AppCompatEditText: android.text.Editable getText()
com.google.android.exoplayer2.ui.PlayerView: void setRepeatToggleModes(int)
com.google.android.flexbox.FlexboxLayout: int getSumOfCrossSize()
androidx.appcompat.widget.SearchView: void setQueryHint(java.lang.CharSequence)
androidx.viewpager.widget.ViewPager: void setPageMarginDrawable(android.graphics.drawable.Drawable)
kotlin.reflect.jvm.internal.impl.descriptors.annotations.KotlinTarget: kotlin.reflect.jvm.internal.impl.descriptors.annotations.KotlinTarget[] values()
com.google.android.material.button.MaterialButton: void setIconTintResource(int)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityPostStarted(android.app.Activity)
io.realm.exceptions.RealmPrimaryKeyConstraintException: RealmPrimaryKeyConstraintException(java.lang.String)
androidx.appcompat.widget.LinearLayoutCompat: void setVerticalGravity(int)
androidx.appcompat.widget.AppCompatSpinner: void setPopupBackgroundDrawable(android.graphics.drawable.Drawable)
dev.octoshrimpy.quik.feature.notificationprefs.NotificationPrefsActivity: NotificationPrefsActivity()
com.google.android.material.button.MaterialButton: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
io.realm.internal.TableQuery: long nativeGetFinalizerPtr()
io.realm.internal.OsSet: boolean nativeContainsBoolean(long,boolean)
androidx.appcompat.view.menu.ListMenuItemView: void setGroupDividerEnabled(boolean)
com.google.android.material.floatingactionbutton.FloatingActionButton: void setSize(int)
io.realm.internal.Table: long nativeGetFinalizerPtr()
androidx.appcompat.widget.SwitchCompat: int getThumbTextPadding()
io.realm.RealmCache$RealmCacheType: io.realm.RealmCache$RealmCacheType[] values()
io.realm.internal.objectstore.OsObjectBuilder: void nativeAddDoubleListItem(long,double)
androidx.coordinatorlayout.widget.CoordinatorLayout: int getNestedScrollAxes()
com.google.android.exoplayer2.ui.PlayerControlView: void setShowTimeoutMs(int)
io.realm.internal.CheckedRow: boolean nativeGetBoolean(long,long)
androidx.appcompat.widget.SearchView: void setImeOptions(int)
androidx.appcompat.widget.AppCompatImageView: void setBackgroundResource(int)
com.google.android.material.floatingactionbutton.FloatingActionButton: void setSupportImageTintList(android.content.res.ColorStateList)
androidx.appcompat.widget.ActionMenuView: void setPresenter(androidx.appcompat.widget.ActionMenuPresenter)
io.realm.DefaultRealmModuleMediator: DefaultRealmModuleMediator()
io.realm.internal.Table: void nativeNullifyLink(long,long,long)
androidx.appcompat.widget.AppCompatAutoCompleteTextView: void setCustomSelectionActionModeCallback(android.view.ActionMode$Callback)
io.realm.internal.objectstore.OsObjectBuilder: void nativeAddStringDictionaryEntry(long,java.lang.String,java.lang.String)
dev.octoshrimpy.quik.receiver.RemoteMessagingReceiver: RemoteMessagingReceiver()
com.google.android.material.internal.VisibilityAwareImageButton: int getUserSetVisibility()
io.realm.internal.OsMap: void nativePutNull(long,java.lang.String)
dev.octoshrimpy.quik.common.widget.RadioPreferenceView: RadioPreferenceView(android.content.Context,android.util.AttributeSet)
androidx.appcompat.widget.ActionMenuView: android.view.Menu getMenu()
androidx.drawerlayout.widget.DrawerLayout: void setStatusBarBackgroundColor(int)
androidx.appcompat.widget.AppCompatCheckBox: android.graphics.PorterDuff$Mode getSupportButtonTintMode()
com.google.android.material.appbar.AppBarLayout: int getTopInset()
io.realm.internal.OsMap: boolean nativeContainsFloat(long,float)
androidx.appcompat.app.AppCompatActivity: void setContentView(android.view.View)
kotlinx.coroutines.android.AndroidDispatcherFactory: AndroidDispatcherFactory()
io.realm.internal.OsObject: void notifyChangeListeners(java.lang.String[])
androidx.appcompat.widget.LinearLayoutCompat: int getBaseline()
com.bluelinelabs.conductor.internal.LifecycleHandler: LifecycleHandler()
dev.octoshrimpy.quik.feature.blocking.manager.BlockingManagerPreferenceView: android.graphics.drawable.Drawable getIcon()
androidx.core.view.WindowInsetsCompat$Impl: androidx.core.view.DisplayCutoutCompat getDisplayCutout()
com.google.android.material.internal.NavigationMenuView: NavigationMenuView(android.content.Context,android.util.AttributeSet)
io.realm.internal.core.NativeRealmAny: java.lang.String nativeAsString(long)
androidx.appcompat.widget.AppCompatButton: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
io.realm.exceptions.RealmFileException$Kind: RealmFileException$Kind(java.lang.String,int)
io.realm.internal.UncheckedRow: void nativeSetLink(long,long,long)
com.google.android.material.button.MaterialButton: android.graphics.PorterDuff$Mode getBackgroundTintMode()
io.realm.internal.UncheckedRow: void nativeSetString(long,long,java.lang.String)
io.realm.internal.RealmNotifier: int getListenersListSize()
io.realm.internal.OsSharedRealm: boolean nativeIsFrozen(long)
io.realm.internal.Property: int nativeGetType(long)
androidx.appcompat.widget.Toolbar: void setNavigationContentDescription(java.lang.CharSequence)
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event valueOf(java.lang.String)
io.realm.RealmMapEntrySet$IteratorType: io.realm.RealmMapEntrySet$IteratorType valueOf(java.lang.String)
kotlin.reflect.jvm.internal.impl.metadata.ProtoBuf$VersionRequirement$VersionKind: kotlin.reflect.jvm.internal.impl.metadata.ProtoBuf$VersionRequirement$VersionKind valueOf(java.lang.String)
dev.octoshrimpy.quik.receiver.MmsReceivedReceiver: MmsReceivedReceiver()
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event[] values()
androidx.appcompat.widget.DialogTitle: DialogTitle(android.content.Context,android.util.AttributeSet)
io.realm.internal.OsSchemaInfo: long nativeGetObjectSchemaInfo(long,java.lang.String)
io.reactivex.BackpressureStrategy: io.reactivex.BackpressureStrategy valueOf(java.lang.String)
io.realm.exceptions.RealmException: RealmException(java.lang.String,java.lang.Throwable)
dev.octoshrimpy.quik.receiver.SmsReceiver: SmsReceiver()
androidx.appcompat.widget.Toolbar: void setSubtitleTextColor(android.content.res.ColorStateList)
androidx.core.view.WindowInsetsCompat$BuilderImpl: void setSystemWindowInsets(androidx.core.graphics.Insets)
io.realm.internal.core.NativeRealmAny: boolean coercedEquals(io.realm.internal.core.NativeRealmAny)
androidx.activity.ComponentActivity: void setContentView(android.view.View)
com.google.android.material.floatingactionbutton.FloatingActionButton: com.google.android.material.animation.MotionSpec getHideMotionSpec()
com.uber.rxdogtag.RxDogTag$Configuration$1: RxDogTag$Configuration$1()
com.squareup.moshi.kotlin.reflect.KotlinJsonAdapter: KotlinJsonAdapter(kotlin.reflect.KFunction,java.util.List,com.squareup.moshi.JsonReader$Options)
com.google.android.exoplayer2.ui.PlayerView: void setPlaybackPreparer(com.google.android.exoplayer2.PlaybackPreparer)
androidx.coordinatorlayout.widget.CoordinatorLayout: java.util.List getDependencySortedChildren()
com.google.android.exoplayer2.ui.PlayerView: void setControllerHideOnTouch(boolean)
kotlin.reflect.jvm.internal.impl.metadata.jvm.JvmProtoBuf$StringTableTypes$Record$Operation: kotlin.reflect.jvm.internal.impl.metadata.jvm.JvmProtoBuf$StringTableTypes$Record$Operation valueOf(java.lang.String)
androidx.appcompat.widget.ActionBarOverlayLayout: void setWindowTitle(java.lang.CharSequence)
io.realm.internal.OsObject: long nativeCreateNewObjectWithObjectIdPrimaryKey(long,long,long,java.lang.String)
androidx.appcompat.widget.ActionBarOverlayLayout: void setActionBarVisibilityCallback(androidx.appcompat.widget.ActionBarOverlayLayout$ActionBarVisibilityCallback)
dev.octoshrimpy.quik.common.widget.RadioPreferenceView: dev.octoshrimpy.quik.common.util.Colors getColors()
androidx.constraintlayout.widget.Barrier: void setType(int)
kotlin.internal.jdk8.JDK8PlatformImplementations: JDK8PlatformImplementations()
io.realm.internal.core.NativeRealmAny: NativeRealmAny(io.realm.internal.RealmObjectProxy)
kotlin.reflect.jvm.internal.impl.builtins.PrimitiveType: kotlin.reflect.jvm.internal.impl.builtins.PrimitiveType valueOf(java.lang.String)
io.realm.OrderedCollectionChangeSet$State: io.realm.OrderedCollectionChangeSet$State[] values()
com.squareup.moshi.JsonAdapter: JsonAdapter()
com.google.android.exoplayer2.ui.PlayerView: android.widget.FrameLayout getOverlayFrameLayout()
io.realm.internal.core.NativeRealmAny: NativeRealmAny()
androidx.appcompat.widget.AppCompatTextView: int[] getAutoSizeTextAvailableSizes()
dev.octoshrimpy.quik.feature.main.NavItem: dev.octoshrimpy.quik.feature.main.NavItem valueOf(java.lang.String)
kotlin.reflect.jvm.internal.impl.load.java.FieldOverridabilityCondition: kotlin.reflect.jvm.internal.impl.resolve.ExternalOverridabilityCondition$Result isOverridable(kotlin.reflect.jvm.internal.impl.descriptors.CallableDescriptor,kotlin.reflect.jvm.internal.impl.descriptors.CallableDescriptor,kotlin.reflect.jvm.internal.impl.descriptors.ClassDescriptor)
androidx.appcompat.app.AlertController$RecycleListView: AlertController$RecycleListView(android.content.Context,android.util.AttributeSet)
io.realm.internal.OsSharedRealm: long nativeNumberOfVersions(long)
com.google.android.exoplayer2.ui.PlayerView: com.google.android.exoplayer2.ui.SubtitleView getSubtitleView()
kotlin.LazyThreadSafetyMode: kotlin.LazyThreadSafetyMode[] values()
io.michaelrocks.libphonenumber.android.Phonenumber$PhoneNumber$CountryCodeSource: io.michaelrocks.libphonenumber.android.Phonenumber$PhoneNumber$CountryCodeSource valueOf(java.lang.String)
io.realm.internal.OsList: void nativeSetDate(long,long,long)
io.michaelrocks.libphonenumber.android.NumberParseException$ErrorType: io.michaelrocks.libphonenumber.android.NumberParseException$ErrorType[] values()
dev.octoshrimpy.quik.receiver.MarkSeenReceiver: MarkSeenReceiver()
com.google.android.material.appbar.CollapsingToolbarLayout: void setContentScrimResource(int)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState: int getChangingConfigurations()
io.realm.internal.OsMap: long nativeGetRow(long,java.lang.String)
dev.octoshrimpy.quik.feature.backup.BackupActivity: BackupActivity()
androidx.appcompat.widget.SearchView$SearchAutoComplete: SearchView$SearchAutoComplete(android.content.Context,android.util.AttributeSet)
io.realm.internal.CheckedRow: void nativeSetLong(long,long,long)
androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$ItemAnimator getItemAnimator()
dev.octoshrimpy.quik.feature.settings.SettingsController: SettingsController()
io.reactivex.internal.observers.EmptyCompletableObserver: EmptyCompletableObserver()
kotlinx.coroutines.android.AndroidExceptionPreHandler: AndroidExceptionPreHandler()
dev.octoshrimpy.quik.receiver.SmsSentReceiver: SmsSentReceiver()
io.realm.internal.OsResults: long nativeCreateSnapshot(long)
kotlin.reflect.jvm.internal.impl.metadata.ProtoBuf$Expression$ConstantValue: kotlin.reflect.jvm.internal.impl.metadata.ProtoBuf$Expression$ConstantValue[] values()
com.google.android.exoplayer2.ui.PlayerControlView: int getRepeatToggleModes()
io.realm.internal.OsSet: boolean nativeContainsNull(long)
org.bson.types.ObjectId: ObjectId(int,int,short,int)
com.github.chrisbanes.photoview.PhotoView: void setZoomTransitionDuration(int)
com.google.android.material.appbar.AppBarLayout: float getTargetElevation()
io.realm.internal.OsSharedRealm: boolean compact()
io.realm.internal.OsResults: void nativeClear(long)
com.google.android.material.floatingactionbutton.FloatingActionButton: float getCompatHoveredFocusedTranslationZ()
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView: void setDropDownBackgroundResource(int)
kotlin.internal.jdk7.JDK7PlatformImplementations: JDK7PlatformImplementations()
androidx.appcompat.widget.AppCompatToggleButton: void setSupportBackgroundTintList(android.content.res.ColorStateList)
io.realm.internal.core.NativeRealmAnyCollection: long nativeCreateStringCollection(java.lang.String[],boolean[])
com.github.chrisbanes.photoview.PhotoView: void setScale(float)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPath: java.lang.String getPathName()
kotlin.reflect.jvm.internal.impl.protobuf.WireFormat$JavaType: kotlin.reflect.jvm.internal.impl.protobuf.WireFormat$JavaType valueOf(java.lang.String)
io.realm.internal.objectstore.OsKeyPathMapping: long nativeCreateMapping(long)
kotlin.reflect.jvm.internal.impl.builtins.functions.FunctionClassDescriptor$Kind: kotlin.reflect.jvm.internal.impl.builtins.functions.FunctionClassDescriptor$Kind[] values()
io.realm.internal.core.NativeRealmAnyCollection: long nativeCreateRealmAnyCollection(long[],boolean[])
androidx.emoji.widget.EmojiExtractEditText: void setKeyListener(android.text.method.KeyListener)
io.realm.internal.android.AndroidRealmNotifier: AndroidRealmNotifier(io.realm.internal.OsSharedRealm,io.realm.internal.Capabilities)
androidx.recyclerview.widget.RecyclerView: void setNestedScrollingEnabled(boolean)
com.google.android.material.floatingactionbutton.FloatingActionButton: void setHideMotionSpec(com.google.android.material.animation.MotionSpec)
androidx.appcompat.widget.AppCompatTextView: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
androidx.appcompat.widget.AppCompatCheckBox: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
dev.octoshrimpy.quik.feature.compose.editing.DetailedChipView: void setRecipient(dev.octoshrimpy.quik.model.Recipient)
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper$Impl23: void computeAndSetTextDirection(android.text.StaticLayout$Builder,android.widget.TextView)
com.google.android.material.appbar.CollapsingToolbarLayout: void setScrimAlpha(int)
androidx.appcompat.widget.AppCompatSpinner: void setDropDownHorizontalOffset(int)
androidx.appcompat.widget.SwitchCompat: android.graphics.drawable.Drawable getTrackDrawable()
androidx.constraintlayout.widget.Barrier: void setAllowsGoneWidget(boolean)
com.bumptech.glide.load.EncodeStrategy: com.bumptech.glide.load.EncodeStrategy[] values()
com.bumptech.glide.MemoryCategory: com.bumptech.glide.MemoryCategory[] values()
androidx.core.view.WindowInsetsCompat$Impl: androidx.core.view.WindowInsetsCompat consumeDisplayCutout()
io.realm.DefaultRealmModule: DefaultRealmModule()
io.realm.internal.core.NativeRealmAny: NativeRealmAny(org.bson.types.Decimal128)
kotlin.reflect.jvm.internal.impl.load.java.JavaIncompatibilityRulesOverridabilityCondition: JavaIncompatibilityRulesOverridabilityCondition()
kotlin.reflect.jvm.internal.impl.types.checker.TypeCheckingProcedure$EnrichedProjectionKind: kotlin.reflect.jvm.internal.impl.types.checker.TypeCheckingProcedure$EnrichedProjectionKind valueOf(java.lang.String)
io.realm.internal.OsSet: long[] nativeRemoveLong(long,long)
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper$Impl23: AppCompatTextViewAutoSizeHelper$Impl23()
io.realm.internal.UncheckedRow: int nativeGetColumnType(long,long)
kotlin.reflect.jvm.internal.impl.serialization.deserialization.builtins.BuiltInsLoaderImpl: BuiltInsLoaderImpl()
androidx.appcompat.widget.AppCompatSpinner: void setPopupBackgroundResource(int)
io.realm.internal.objectstore.OsObjectBuilder: void nativeAddRealmAnyListItem(long,long)
androidx.appcompat.widget.ActionBarContextView: void setSubtitle(java.lang.CharSequence)
com.google.android.flexbox.FlexboxLayout: void setFlexDirection(int)
kotlinx.coroutines.CoroutineStart: kotlinx.coroutines.CoroutineStart[] values()
androidx.recyclerview.widget.RecyclerView: void setOnFlingListener(androidx.recyclerview.widget.RecyclerView$OnFlingListener)
androidx.appcompat.widget.AppCompatImageView: void setImageResource(int)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityDestroyed(android.app.Activity)
androidx.appcompat.widget.Toolbar: void setTitleTextColor(android.content.res.ColorStateList)
kotlin.reflect.jvm.internal.impl.load.java.components.TypeUsage: kotlin.reflect.jvm.internal.impl.load.java.components.TypeUsage[] values()
com.google.android.material.floatingactionbutton.FloatingActionButton: android.content.res.ColorStateList getSupportImageTintList()
io.realm.internal.OsList: void nativeInsertFloat(long,long,float)
androidx.viewpager.widget.ViewPager: androidx.viewpager.widget.PagerAdapter getAdapter()
com.google.android.exoplayer2.ui.DefaultTimeBar: void setUnplayedColor(int)
io.reactivex.internal.schedulers.SingleScheduler: SingleScheduler()
io.realm.internal.objectstore.OsObjectBuilder: void nativeAddUUIDListItem(long,java.lang.String)
androidx.appcompat.widget.Toolbar: void setPopupTheme(int)
ezvcard.util.VCardDateFormat: ezvcard.util.VCardDateFormat[] values()
io.realm.internal.Table: long nativeAddPrimitiveDictionaryColumn(long,int,java.lang.String,boolean)
androidx.core.view.WindowInsetsCompat$BuilderImpl: androidx.core.view.WindowInsetsCompat build()
com.google.android.material.appbar.CollapsingToolbarLayout: void setCollapsedTitleTextAppearance(int)
kotlin.reflect.jvm.internal.impl.serialization.deserialization.builtins.BuiltInsLoaderImpl: kotlin.reflect.jvm.internal.impl.descriptors.PackageFragmentProvider createPackageFragmentProvider(kotlin.reflect.jvm.internal.impl.storage.StorageManager,kotlin.reflect.jvm.internal.impl.descriptors.ModuleDescriptor,java.lang.Iterable,kotlin.reflect.jvm.internal.impl.descriptors.deserialization.PlatformDependentDeclarationFilter,kotlin.reflect.jvm.internal.impl.descriptors.deserialization.AdditionalClassPartsProvider)
dev.octoshrimpy.quik.receiver.SendScheduledMessageReceiver: SendScheduledMessageReceiver()
com.google.android.material.appbar.CollapsingToolbarLayout: void setStatusBarScrimResource(int)
androidx.appcompat.app.AppCompatViewInflater: androidx.appcompat.widget.AppCompatToggleButton createToggleButton(android.content.Context,android.util.AttributeSet)
androidx.emoji.widget.EmojiExtractEditText: EmojiExtractEditText(android.content.Context,android.util.AttributeSet)
com.google.android.material.floatingactionbutton.FloatingActionButton: void setCompatElevationResource(int)
io.realm.internal.OsSet$ExternalCollectionOperation: io.realm.internal.OsSet$ExternalCollectionOperation valueOf(java.lang.String)
androidx.appcompat.widget.ActionBarContextView: java.lang.CharSequence getSubtitle()
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper$Impl: AppCompatTextViewAutoSizeHelper$Impl()
androidx.appcompat.app.AppCompatViewInflater: androidx.appcompat.widget.AppCompatEditText createEditText(android.content.Context,android.util.AttributeSet)
dev.octoshrimpy.quik.receiver.DefaultSmsChangedReceiver: DefaultSmsChangedReceiver()
io.reactivex.internal.subscriptions.BasicQueueSubscription: BasicQueueSubscription()
io.realm.internal.OsSharedRealm: void nativeCancelTransaction(long)
kotlin.reflect.jvm.internal.impl.metadata.ProtoBuf$QualifiedNameTable$QualifiedName$Kind: kotlin.reflect.jvm.internal.impl.metadata.ProtoBuf$QualifiedNameTable$QualifiedName$Kind[] values()
io.realm.internal.OsSharedRealm: boolean nativeWaitForChange(long)
com.google.android.material.appbar.AppBarLayout: void setTargetElevation(float)
androidx.appcompat.widget.ButtonBarLayout: int getMinimumHeight()
androidx.appcompat.widget.Toolbar: void setTitleTextColor(int)
androidx.core.view.WindowInsetsCompat$BuilderImpl29: void setMandatorySystemGestureInsets(androidx.core.graphics.Insets)
io.realm.RealmMapEntrySet$IteratorType: io.realm.RealmMapEntrySet$IteratorType[] values()
androidx.appcompat.widget.AppCompatRadioButton: android.content.res.ColorStateList getSupportBackgroundTintList()
androidx.appcompat.widget.Toolbar: void setTitleMarginStart(int)
io.realm.internal.OsSet: long[] nativeRemoveObjectId(long,java.lang.String)
com.google.android.material.button.MaterialButton: android.graphics.drawable.Drawable getIcon()
io.realm.internal.Table: void nativeAddSearchIndex(long,long)
androidx.appcompat.widget.SearchView: int getInputType()
com.bumptech.glide.request.SingleRequest$Status: com.bumptech.glide.request.SingleRequest$Status[] values()
kotlin.reflect.jvm.internal.impl.metadata.ProtoBuf$Type$Argument$Projection: kotlin.reflect.jvm.internal.impl.metadata.ProtoBuf$Type$Argument$Projection valueOf(java.lang.String)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: float getScaleX()
io.realm.exceptions.RealmFileException: RealmFileException(io.realm.exceptions.RealmFileException$Kind,java.lang.String,java.lang.Throwable)
androidx.constraintlayout.solver.SolverVariable$Type: androidx.constraintlayout.solver.SolverVariable$Type[] values()
io.realm.internal.OsSharedRealm: long nativeCreateTableWithPrimaryKeyField(long,java.lang.String,java.lang.String,int,boolean)
io.realm.internal.OsMap: long nativeValues(long)
androidx.coordinatorlayout.widget.CoordinatorLayout: android.graphics.drawable.Drawable getStatusBarBackground()
io.reactivex.Single: Single()
androidx.appcompat.widget.ActionMenuView: ActionMenuView(android.content.Context,android.util.AttributeSet)
androidx.appcompat.widget.SearchView: void setOnQueryTextFocusChangeListener(android.view.View$OnFocusChangeListener)
io.reactivex.disposables.CompositeDisposable: CompositeDisposable()
androidx.appcompat.widget.AppCompatImageView: void setImageBitmap(android.graphics.Bitmap)
com.google.android.material.floatingactionbutton.FloatingActionButton: void setImageResource(int)
dev.octoshrimpy.quik.common.widget.QkSwitch: void setColors(dev.octoshrimpy.quik.common.util.Colors)
androidx.core.widget.NestedScrollView: void setSmoothScrollingEnabled(boolean)
io.realm.internal.OsSharedRealm: long nativeGetSchemaInfo(long)
io.realm.internal.OsSharedRealm: java.lang.String[] nativeGetTablesName(long)
kotlin.reflect.jvm.internal.impl.renderer.ParameterNameRenderingPolicy: kotlin.reflect.jvm.internal.impl.renderer.ParameterNameRenderingPolicy[] values()
kotlin.reflect.jvm.internal.impl.resolve.OverridingUtil$OverrideCompatibilityInfo$Result: kotlin.reflect.jvm.internal.impl.resolve.OverridingUtil$OverrideCompatibilityInfo$Result valueOf(java.lang.String)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: void setTrimPathStart(float)
kotlin.reflect.jvm.internal.impl.load.java.AnnotationTypeQualifierResolver$QualifierApplicabilityType: kotlin.reflect.jvm.internal.impl.load.java.AnnotationTypeQualifierResolver$QualifierApplicabilityType valueOf(java.lang.String)
androidx.appcompat.widget.LinearLayoutCompat: int getGravity()
io.realm.internal.UncheckedRow: void nativeSetBoolean(long,long,boolean)
androidx.appcompat.widget.AppCompatTextView: void setLineHeight(int)
com.squareup.moshi.ArrayJsonAdapter: ArrayJsonAdapter(java.lang.Class,com.squareup.moshi.JsonAdapter)
androidx.appcompat.widget.AppCompatRadioButton: AppCompatRadioButton(android.content.Context,android.util.AttributeSet)
com.google.android.flexbox.FlexboxLayout: void setShowDivider(int)
androidx.appcompat.widget.Toolbar: int getContentInsetEnd()
androidx.appcompat.widget.LinearLayoutCompat: void setDividerDrawable(android.graphics.drawable.Drawable)
androidx.appcompat.widget.SearchView$SearchAutoComplete: int getSearchViewTextMinWidthDp()
io.realm.internal.OsList: void nativeSetLong(long,long,long)
androidx.fragment.app.FragmentContainerView: void setDrawDisappearingViewsLast(boolean)
com.github.chrisbanes.photoview.PhotoView: void setAllowParentInterceptOnEdge(boolean)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: void setTranslateY(float)
com.google.android.exoplayer2.ui.PlayerView: boolean getUseController()
androidx.viewpager2.widget.ViewPager2: ViewPager2(android.content.Context,android.util.AttributeSet)
io.realm.internal.core.NativeRealmAny: long getRealmModelRowKey()
io.realm.annotations.RealmModule: boolean allClasses()
io.realm.internal.ObservableCollection: void notifyChangeListeners(long)
org.bson.types.ObjectId: ObjectId(int,int,boolean)
dev.octoshrimpy.quik.common.widget.PreferenceView: void setSummary(java.lang.String)
dev.octoshrimpy.quik.common.widget.QkEditText: void setTextViewStyler(dev.octoshrimpy.quik.common.util.TextViewStyler)
com.bluelinelabs.conductor.archlifecycle.LifecycleController: LifecycleController()
io.realm.RealmFieldType: boolean isValid(java.lang.Object)
com.google.android.material.appbar.CollapsingToolbarLayout: long getScrimAnimationDuration()
io.reactivex.internal.schedulers.ComputationScheduler: ComputationScheduler()
androidx.appcompat.app.AppCompatViewInflater: androidx.appcompat.widget.AppCompatRatingBar createRatingBar(android.content.Context,android.util.AttributeSet)
androidx.appcompat.widget.AppCompatSpinner: void setBackgroundDrawable(android.graphics.drawable.Drawable)
io.reactivex.internal.observers.BasicQueueDisposable: BasicQueueDisposable()
io.realm.ImportFlag: io.realm.ImportFlag valueOf(java.lang.String)
io.realm.internal.OsResults: long nativeFreeze(long,long)
io.realm.Case: io.realm.Case valueOf(java.lang.String)
dev.octoshrimpy.quik.model.Message$AttachmentType: dev.octoshrimpy.quik.model.Message$AttachmentType[] values()
kotlin.reflect.jvm.internal.impl.metadata.ProtoBuf$MemberKind: kotlin.reflect.jvm.internal.impl.metadata.ProtoBuf$MemberKind valueOf(java.lang.String)
dev.octoshrimpy.quik.blocking.BlockingClient$Capability: dev.octoshrimpy.quik.blocking.BlockingClient$Capability valueOf(java.lang.String)
io.realm.internal.OsMapChangeSet: long nativeGetFinalizerPtr()
com.github.chrisbanes.photoview.PhotoView: void setOnMatrixChangeListener(com.github.chrisbanes.photoview.OnMatrixChangedListener)
androidx.appcompat.widget.AppCompatEditText: void setCustomSelectionActionModeCallback(android.view.ActionMode$Callback)
com.google.android.material.bottomsheet.BottomSheetBehavior: BottomSheetBehavior(android.content.Context,android.util.AttributeSet)
io.reactivex.exceptions.CompositeException$CompositeExceptionCausalChain: CompositeException$CompositeExceptionCausalChain()
dev.octoshrimpy.quik.common.widget.PreferenceView: java.lang.String getSummary()
kotlin.reflect.jvm.internal.impl.metadata.jvm.JvmProtoBuf$StringTableTypes$Record$Operation: kotlin.reflect.jvm.internal.impl.metadata.jvm.JvmProtoBuf$StringTableTypes$Record$Operation[] values()
dev.octoshrimpy.quik.common.widget.QkEditText: void setSupportsInputContent(boolean)
io.realm.internal.objectstore.OsObjectBuilder: void nativeAddBooleanSetItem(long,boolean)
com.google.android.material.snackbar.SnackbarContentLayout: android.widget.TextView getMessageView()
io.realm.internal.OsObject: long getNativeFinalizerPtr()
com.google.android.material.floatingactionbutton.FloatingActionButton: float getCompatElevation()
me.leolin.shortcutbadger.impl.SonyHomeBadger: SonyHomeBadger()
androidx.appcompat.widget.Toolbar: int getContentInsetLeft()
androidx.appcompat.widget.AppCompatTextView: android.view.textclassifier.TextClassifier getTextClassifier()
androidx.coordinatorlayout.widget.CoordinatorLayout: void setFitsSystemWindows(boolean)
androidx.viewpager2.widget.ViewPager2: int getCurrentItem()
com.google.android.flexbox.FlexboxLayout: int getFlexWrap()
androidx.appcompat.widget.AppCompatButton: void setCustomSelectionActionModeCallback(android.view.ActionMode$Callback)
io.realm.internal.Table: long nativeWhere(long)
androidx.core.view.WindowInsetsCompat$BuilderImpl29: WindowInsetsCompat$BuilderImpl29(androidx.core.view.WindowInsetsCompat)
io.realm.internal.OsMap: long nativeKeys(long)
io.realm.internal.OsSet: boolean nativeAsymmetricDifference(long,long)
io.reactivex.internal.operators.observable.ObservableEmpty: ObservableEmpty()
androidx.recyclerview.widget.RecyclerView: void setRecycledViewPool(androidx.recyclerview.widget.RecyclerView$RecycledViewPool)
io.realm.internal.objectstore.OsObjectBuilder: void nativeAddUUIDSetItem(long,java.lang.String)
io.realm.internal.OsObject: void setObserverPairs(io.realm.internal.ObserverPairList)
io.realm.internal.Util: java.lang.String nativeGetTablePrefix()
com.google.android.material.floatingactionbutton.FloatingActionButton: FloatingActionButton(android.content.Context,android.util.AttributeSet)
io.realm.internal.RealmNotifier: void addChangeListener(java.lang.Object,io.realm.RealmChangeListener)
androidx.appcompat.widget.LinearLayoutCompat: int getDividerWidth()
com.google.android.material.snackbar.SnackbarContentLayout: SnackbarContentLayout(android.content.Context,android.util.AttributeSet)
com.google.android.material.internal.NavigationMenuView: int getWindowAnimations()
com.google.android.material.internal.NavigationMenuItemView: void setTextAppearance(int)
io.realm.internal.OsObject: long nativeCreateEmbeddedObject(long,long,long)
dev.octoshrimpy.quik.common.widget.BubbleImageView: dev.octoshrimpy.quik.common.widget.BubbleImageView$Style getBubbleStyle()
com.google.android.material.button.MaterialButton: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
com.android.mms.transaction.TransactionService: TransactionService()
io.realm.internal.OsSharedRealm: io.realm.internal.Table createTableWithPrimaryKey(java.lang.String,java.lang.String,io.realm.RealmFieldType,boolean)
io.realm.internal.OsList: void nativeAddBoolean(long,boolean)
androidx.core.view.ViewCompat$Api21Impl: void callCompatInsetAnimationCallback(android.view.WindowInsets,android.view.View)
com.google.android.material.appbar.CollapsingToolbarLayout: void setExpandedTitleColor(int)
androidx.appcompat.view.menu.ExpandedMenuView: ExpandedMenuView(android.content.Context,android.util.AttributeSet)
androidx.viewpager2.widget.ViewPager2: void setOffscreenPageLimit(int)
io.realm.internal.OsSet: long[] nativeAddNull(long)
androidx.appcompat.widget.Toolbar: void setSubtitleTextColor(int)
androidx.appcompat.widget.SwitchCompat: android.graphics.PorterDuff$Mode getTrackTintMode()
com.google.android.material.button.MaterialButton: void setCornerRadius(int)
io.realm.internal.OsObjectSchemaInfo: long nativeGetFinalizerPtr()
io.realm.internal.CheckedRow: byte[] nativeGetByteArray(long,long)
androidx.appcompat.widget.SearchView: void setQuery(java.lang.CharSequence)
androidx.appcompat.widget.ContentFrameLayout: android.util.TypedValue getFixedHeightMinor()
com.google.android.flexbox.FlexboxLayout: void setShowDividerVertical(int)
io.realm.internal.TableQuery: java.lang.Long nativeMaximumInt(long,long)
androidx.appcompat.widget.AppCompatImageView: void setBackgroundDrawable(android.graphics.drawable.Drawable)
io.realm.internal.core.NativeRealmAny: NativeRealmAny(byte[])
kotlin.reflect.jvm.internal.impl.load.java.ErasedOverridabilityCondition: ErasedOverridabilityCondition()
dev.octoshrimpy.quik.common.widget.QkEditText: dev.octoshrimpy.quik.common.util.TextViewStyler getTextViewStyler()
kotlin.reflect.jvm.internal.impl.incremental.components.ScopeKind: kotlin.reflect.jvm.internal.impl.incremental.components.ScopeKind[] values()
androidx.appcompat.widget.AppCompatImageView: void setImageURI(android.net.Uri)
androidx.core.widget.NestedScrollView: float getBottomFadingEdgeStrength()
androidx.appcompat.widget.AppCompatTextView: void setSupportCompoundDrawablesTintMode(android.graphics.PorterDuff$Mode)
androidx.emoji.widget.EmojiAppCompatTextView: void setAllCaps(boolean)
io.realm.internal.OsObjectStore: long nativeGetSchemaVersion(long)
io.realm.internal.core.NativeRealmAny: long getNativeFinalizerPtr()
io.realm.internal.core.NativeRealmAnyCollection: long nativeCreateUUIDCollection(java.lang.String[],boolean[])
io.realm.internal.OsSet: boolean nativeContainsDouble(long,double)
com.google.android.material.floatingactionbutton.FloatingActionButton: void setBackgroundTintMode(android.graphics.PorterDuff$Mode)
io.realm.internal.OsList: void nativeAddString(long,java.lang.String)
io.realm.internal.OsList: void nativeInsertNull(long,long)
kotlin.reflect.jvm.internal.impl.descriptors.annotations.KotlinRetention: kotlin.reflect.jvm.internal.impl.descriptors.annotations.KotlinRetention[] values()
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper$Impl: boolean isHorizontallyScrollable(android.widget.TextView)
io.realm.internal.RealmNotifier: void addTransactionCallback(java.lang.Runnable)
androidx.appcompat.widget.AppCompatImageView: void setSupportImageTintList(android.content.res.ColorStateList)
com.google.android.material.floatingactionbutton.FloatingActionButton: void setRippleColor(android.content.res.ColorStateList)
kotlin.reflect.KVariance: kotlin.reflect.KVariance[] values()
androidx.appcompat.widget.AppCompatCheckBox: android.content.res.ColorStateList getSupportBackgroundTintList()
androidx.appcompat.widget.Toolbar: void setNavigationContentDescription(int)
androidx.core.view.WindowInsetsCompat$Impl28: boolean equals(java.lang.Object)
kotlin.reflect.jvm.internal.impl.renderer.RenderingFormat: kotlin.reflect.jvm.internal.impl.renderer.RenderingFormat[] values()
com.bumptech.glide.load.engine.DecodeJob$RunReason: com.bumptech.glide.load.engine.DecodeJob$RunReason valueOf(java.lang.String)
androidx.core.widget.NestedScrollView: void setFillViewport(boolean)
io.realm.internal.OsSharedRealm$SchemaChangedCallback: void onSchemaChanged()
io.realm.internal.OsSharedRealm$InitializationCallback: void onInit(io.realm.internal.OsSharedRealm)
androidx.core.view.WindowInsetsCompat$Impl: androidx.core.graphics.Insets getStableInsets()
androidx.appcompat.widget.SearchView$SearchAutoComplete: void setThreshold(int)
com.google.android.exoplayer2.ui.PlayerView: void setKeepContentOnPlayerReset(boolean)
androidx.core.view.WindowInsetsCompat$Impl: void copyWindowDataInto(androidx.core.view.WindowInsetsCompat)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableDelegateState: int getChangingConfigurations()
com.google.android.material.floatingactionbutton.FloatingActionButton: void setHideMotionSpecResource(int)
androidx.appcompat.widget.AppCompatImageView: void setSupportBackgroundTintList(android.content.res.ColorStateList)
dev.octoshrimpy.quik.common.widget.BubbleImageView$Style: dev.octoshrimpy.quik.common.widget.BubbleImageView$Style valueOf(java.lang.String)
com.google.android.exoplayer2.ui.PlayerControlView: void setShowMultiWindowTimeBar(boolean)
kotlin.reflect.jvm.internal.impl.resolve.ExternalOverridabilityCondition$Contract: kotlin.reflect.jvm.internal.impl.resolve.ExternalOverridabilityCondition$Contract valueOf(java.lang.String)
io.realm.exceptions.RealmFileException$Kind: io.realm.exceptions.RealmFileException$Kind[] values()
androidx.appcompat.widget.SwitchCompat: int getThumbScrollRange()
androidx.appcompat.view.menu.ActionMenuItemView: ActionMenuItemView(android.content.Context,android.util.AttributeSet)
androidx.appcompat.widget.AppCompatButton: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
io.realm.internal.OsList: void nativeSetNull(long,long)
io.realm.internal.OsSet: long nativeSize(long)
com.google.android.material.appbar.AppBarLayout: void setOrientation(int)
androidx.appcompat.widget.AppCompatTextView: androidx.core.text.PrecomputedTextCompat$Params getTextMetricsParamsCompat()
com.google.android.material.transformation.ExpandableBehavior: ExpandableBehavior(android.content.Context,android.util.AttributeSet)
io.realm.internal.core.NativeRealmAny: long nativeCreateLink(long,long)
com.google.android.material.floatingactionbutton.FloatingActionButton: android.content.res.ColorStateList getRippleColorStateList()
com.bumptech.glide.GeneratedAppGlideModuleImpl: GeneratedAppGlideModuleImpl()
kotlin.reflect.jvm.internal.impl.renderer.OverrideRenderingPolicy: kotlin.reflect.jvm.internal.impl.renderer.OverrideRenderingPolicy valueOf(java.lang.String)
kotlinx.coroutines.CoroutineStart: kotlinx.coroutines.CoroutineStart valueOf(java.lang.String)
io.realm.internal.UncheckedRow: boolean nativeIsNull(long,long)
io.realm.internal.OsList: void nativeRemove(long,long)
io.realm.internal.OsObject: long nativeCreate(long,long)
androidx.appcompat.widget.Toolbar: void setContentInsetEndWithActions(int)
com.google.android.material.internal.NavigationMenuItemView: void setChecked(boolean)
androidx.appcompat.widget.SwitchCompat: void setSwitchMinWidth(int)
io.reactivex.Observable: Observable()
androidx.appcompat.widget.AppCompatImageButton: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
androidx.viewpager2.widget.ViewPager2: int getOffscreenPageLimit()
com.google.android.material.appbar.CollapsingToolbarLayout: int getScrimAlpha()
com.google.android.exoplayer2.ui.SubtitleView: float getUserCaptionFontScaleV19()
androidx.recyclerview.widget.RecyclerView: int getMinFlingVelocity()
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityStarted(android.app.Activity)
androidx.loader.app.LoaderManagerImpl$LoaderViewModel: LoaderManagerImpl$LoaderViewModel()
kotlin.reflect.jvm.internal.impl.load.java.ErasedOverridabilityCondition: kotlin.reflect.jvm.internal.impl.resolve.ExternalOverridabilityCondition$Result isOverridable(kotlin.reflect.jvm.internal.impl.descriptors.CallableDescriptor,kotlin.reflect.jvm.internal.impl.descriptors.CallableDescriptor,kotlin.reflect.jvm.internal.impl.descriptors.ClassDescriptor)
io.reactivex.internal.disposables.EmptyDisposable: io.reactivex.internal.disposables.EmptyDisposable[] values()
io.realm.internal.RealmNotifier: void didSendNotifications()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: float getTrimPathOffset()
ezvcard.Messages: ezvcard.Messages valueOf(java.lang.String)
io.realm.internal.OsList: void nativeAddFloat(long,float)
androidx.appcompat.widget.Toolbar: void setNavigationOnClickListener(android.view.View$OnClickListener)
androidx.appcompat.widget.AppCompatEditText: void setBackgroundDrawable(android.graphics.drawable.Drawable)
io.realm.FieldAttribute: io.realm.FieldAttribute[] values()
io.realm.internal.OsMap: long nativeSize(long)
io.realm.internal.UncheckedRow: void nativeSetByteArray(long,long,byte[])
androidx.viewpager.widget.ViewPager: void setOnPageChangeListener(androidx.viewpager.widget.ViewPager$OnPageChangeListener)
io.realm.internal.OsSchemaInfo: long nativeCreateFromList(long[])
io.realm.internal.objectstore.OsObjectBuilder: void nativeAddDateDictionaryEntry(long,java.lang.String,long)
androidx.appcompat.widget.Toolbar: void setLogo(int)
io.realm.internal.core.NativeRealmAny: NativeRealmAny(org.bson.types.ObjectId)
com.google.android.material.behavior.HideBottomViewOnScrollBehavior: HideBottomViewOnScrollBehavior()
kotlin.LazyThreadSafetyMode: kotlin.LazyThreadSafetyMode valueOf(java.lang.String)
io.realm.internal.OsObject: io.realm.internal.UncheckedRow createWithPrimaryKey(io.realm.internal.Table,java.lang.Object)
kotlin.reflect.jvm.internal.impl.load.java.lazy.types.JavaTypeFlexibility: kotlin.reflect.jvm.internal.impl.load.java.lazy.types.JavaTypeFlexibility[] values()
com.github.chrisbanes.photoview.PhotoView: void setMinimumScale(float)
io.realm.internal.OsSet: boolean nativeContainsLong(long,long)
androidx.appcompat.widget.AppCompatToggleButton: android.content.res.ColorStateList getSupportBackgroundTintList()
androidx.appcompat.widget.SearchView: void setOnSearchClickListener(android.view.View$OnClickListener)
androidx.viewpager2.widget.ViewPager2: int getPageSize()
com.google.android.material.bottomappbar.BottomAppBar$Behavior: BottomAppBar$Behavior()
kotlin.reflect.jvm.internal.AnnotationConstructorCaller$Origin: kotlin.reflect.jvm.internal.AnnotationConstructorCaller$Origin valueOf(java.lang.String)
io.reactivex.internal.functions.Functions$OnErrorMissingConsumer: Functions$OnErrorMissingConsumer()
com.bumptech.glide.manager.SupportRequestManagerFragment: SupportRequestManagerFragment()
kotlin.reflect.jvm.internal.impl.resolve.jvm.JvmPrimitiveType: kotlin.reflect.jvm.internal.impl.resolve.jvm.JvmPrimitiveType[] values()
com.google.android.material.appbar.CollapsingToolbarLayout: int getScrimVisibleHeightTrigger()
androidx.appcompat.widget.Toolbar: java.lang.CharSequence getNavigationContentDescription()
com.google.android.flexbox.FlexboxLayout: void setDividerDrawableVertical(android.graphics.drawable.Drawable)
com.google.android.exoplayer2.ui.PlayerControlView: void setRewindIncrementMs(int)
androidx.core.view.WindowInsetsCompat$Impl28: WindowInsetsCompat$Impl28(androidx.core.view.WindowInsetsCompat,androidx.core.view.WindowInsetsCompat$Impl28)
io.realm.internal.objectstore.OsObjectBuilder: void nativeAddStringListItem(long,java.lang.String)
com.google.android.material.floatingactionbutton.FloatingActionButton: void setShowMotionSpec(com.google.android.material.animation.MotionSpec)
com.google.android.material.appbar.AppBarLayout: int getDownNestedScrollRange()
io.reactivex.schedulers.Schedulers$ComputationTask: Schedulers$ComputationTask()
androidx.constraintlayout.solver.widgets.ConstraintAnchor$Strength: androidx.constraintlayout.solver.widgets.ConstraintAnchor$Strength[] values()
io.realm.internal.objectstore.OsObjectBuilder: void nativeAddRealmAnyDictionaryEntry(long,java.lang.String,long)
io.realm.internal.Table: boolean nativeHasSameSchema(long,long)
ezvcard.VCardVersion: ezvcard.VCardVersion valueOf(java.lang.String)
com.google.android.material.button.MaterialButton: void setBackgroundTintList(android.content.res.ColorStateList)
kotlin.reflect.jvm.internal.impl.renderer.RenderingFormat: kotlin.reflect.jvm.internal.impl.renderer.RenderingFormat valueOf(java.lang.String)
androidx.core.view.WindowInsetsCompat$BuilderImpl: WindowInsetsCompat$BuilderImpl()
dev.octoshrimpy.quik.service.HeadlessSmsSendService: HeadlessSmsSendService()
io.realm.Case: io.realm.Case[] values()
io.realm.internal.Table: void nativeRemoveColumn(long,long)
com.google.android.material.transformation.ExpandableBehavior: ExpandableBehavior()
androidx.appcompat.widget.ActionMenuView: android.graphics.drawable.Drawable getOverflowIcon()
androidx.viewpager.widget.ViewPager: void setPageMarginDrawable(int)
io.realm.internal.OsRealmConfig$SchemaMode: io.realm.internal.OsRealmConfig$SchemaMode valueOf(java.lang.String)
androidx.appcompat.widget.Toolbar: void setOnMenuItemClickListener(androidx.appcompat.widget.Toolbar$OnMenuItemClickListener)
dev.octoshrimpy.quik.feature.blocking.manager.BlockingManagerPreferenceView: java.lang.String getTitle()
androidx.appcompat.widget.ActionBarContainer: void setPrimaryBackground(android.graphics.drawable.Drawable)
io.realm.internal.OsSharedRealm: void registerSchemaChangedCallback(io.realm.internal.OsSharedRealm$SchemaChangedCallback)
io.realm.internal.OsSharedRealm: long nativeGetActiveSubscriptionSet(long)
com.google.android.material.floatingactionbutton.FloatingActionButton: boolean getUseCompatPadding()
com.bumptech.glide.load.engine.DecodeJob$Stage: com.bumptech.glide.load.engine.DecodeJob$Stage[] values()
io.realm.internal.OsList: void nativeAddDate(long,long)
androidx.viewpager.widget.ViewPager: void setAdapter(androidx.viewpager.widget.PagerAdapter)
com.google.android.material.floatingactionbutton.FloatingActionButton: int getSizeDimension()
androidx.lifecycle.Lifecycle$State: androidx.lifecycle.Lifecycle$State valueOf(java.lang.String)
androidx.appcompat.widget.AppCompatTextView: android.content.res.ColorStateList getSupportBackgroundTintList()
io.reactivex.internal.functions.Functions$NullCallable: Functions$NullCallable()
io.realm.internal.OsSet: long[] nativeRemoveDecimal128(long,long,long)
androidx.core.view.WindowInsetsCompat$Impl21: androidx.core.view.WindowInsetsCompat consumeStableInsets()
io.reactivex.internal.disposables.EmptyDisposable: io.reactivex.internal.disposables.EmptyDisposable valueOf(java.lang.String)
com.google.android.flexbox.FlexboxLayout: android.graphics.drawable.Drawable getDividerDrawableHorizontal()
io.realm.internal.core.NativeRealmAny: long nativeCreateBoolean(boolean)
io.realm.internal.UncheckedRow: byte[] nativeGetByteArray(long,long)
io.realm.internal.objectstore.OsObjectBuilder: void nativeAddString(long,long,java.lang.String)
androidx.appcompat.widget.ActionBarOverlayLayout: ActionBarOverlayLayout(android.content.Context,android.util.AttributeSet)
io.realm.internal.core.NativeRealmAny: long nativeGetRealmModelRowKey(long)
android.support.v4.app.RemoteActionCompatParcelizer: RemoteActionCompatParcelizer()
com.google.android.exoplayer2.ui.DefaultTimeBar: void setPlayedAdMarkerColor(int)
androidx.appcompat.view.menu.ActionMenuItemView: void setCheckable(boolean)
kotlin.reflect.jvm.internal.impl.serialization.deserialization.AnnotatedCallableKind: kotlin.reflect.jvm.internal.impl.serialization.deserialization.AnnotatedCallableKind[] values()
androidx.appcompat.widget.Toolbar: void setContentInsetStartWithNavigation(int)
androidx.appcompat.widget.AppCompatImageButton: void setImageURI(android.net.Uri)
io.realm.internal.core.NativeRealmAny: long nativeGetFinalizerPtr()
io.reactivex.internal.schedulers.TrampolineScheduler$TrampolineWorker: TrampolineScheduler$TrampolineWorker()
dev.octoshrimpy.quik.receiver.NightModeReceiver: NightModeReceiver()
com.github.chrisbanes.photoview.PhotoView: void setImageDrawable(android.graphics.drawable.Drawable)
com.github.chrisbanes.photoview.PhotoView: android.widget.ImageView$ScaleType getScaleType()
io.reactivex.internal.schedulers.TrampolineScheduler: TrampolineScheduler()
com.google.android.exoplayer2.ui.PlayerView: void setCustomErrorMessage(java.lang.CharSequence)
androidx.core.widget.NestedScrollView: int getNestedScrollAxes()
com.google.android.material.button.MaterialButton: int getIconSize()
androidx.appcompat.widget.LinearLayoutCompat: int getBaselineAlignedChildIndex()
com.bluelinelabs.conductor.Controller$RetainViewMode: com.bluelinelabs.conductor.Controller$RetainViewMode valueOf(java.lang.String)
dev.octoshrimpy.quik.common.util.QkChooserTargetService: QkChooserTargetService()
com.bluelinelabs.conductor.ControllerChangeType: com.bluelinelabs.conductor.ControllerChangeType[] values()
io.realm.internal.TableQuery: java.lang.Float nativeMaximumFloat(long,long)
com.google.android.exoplayer2.ui.AspectRatioFrameLayout: void setResizeMode(int)
androidx.appcompat.widget.AppCompatAutoCompleteTextView: void setSupportBackgroundTintList(android.content.res.ColorStateList)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: void setScaleX(float)
androidx.emoji.widget.EmojiAppCompatTextView: androidx.emoji.widget.EmojiTextViewHelper getEmojiTextViewHelper()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: float getPivotX()
io.realm.internal.core.NativeRealmAny: long nativeCreateDate(long)
dev.octoshrimpy.quik.feature.blocking.BlockingActivity: BlockingActivity()
androidx.appcompat.widget.SwitchCompat: android.graphics.PorterDuff$Mode getThumbTintMode()
androidx.drawerlayout.widget.DrawerLayout: DrawerLayout(android.content.Context,android.util.AttributeSet)
androidx.core.app.NotificationCompat$BubbleMetadata$Api29Impl: android.app.Notification$BubbleMetadata toPlatform(androidx.core.app.NotificationCompat$BubbleMetadata)
io.realm.internal.OsSet: long[] nativeAddRow(long,long)
androidx.appcompat.widget.ActionBarOverlayLayout: void setHasNonEmbeddedTabs(boolean)
androidx.appcompat.widget.Toolbar: java.lang.CharSequence getLogoDescription()
androidx.appcompat.widget.SwitchCompat: void setThumbTintMode(android.graphics.PorterDuff$Mode)
io.realm.internal.core.NativeRealmAny: NativeRealmAny(java.lang.Double)
com.google.android.material.snackbar.BaseTransientBottomBar$SnackbarBaseLayout: void setOnAttachStateChangeListener(com.google.android.material.snackbar.BaseTransientBottomBar$OnAttachStateChangeListener)
androidx.constraintlayout.widget.Guideline: void setGuidelinePercent(float)
io.realm.internal.OsList: void nativeAddObjectId(long,java.lang.String)
androidx.appcompat.widget.SwitchCompat: java.lang.CharSequence getTextOn()
androidx.appcompat.widget.LinearLayoutCompat: int getShowDividers()
io.reactivex.internal.functions.Functions$TruePredicate: Functions$TruePredicate()
io.realm.internal.objectstore.OsObjectBuilder: void nativeAddNullListItem(long)
androidx.appcompat.widget.ButtonBarLayout: ButtonBarLayout(android.content.Context,android.util.AttributeSet)
io.realm.internal.core.NativeRealmAny: long createRealmAnyLink(io.realm.internal.RealmObjectProxy)
androidx.appcompat.view.menu.ActionMenuItemView: void setExpandedFormat(boolean)
io.realm.internal.OsMap: long[] nativeCreate(long,long,long)
io.realm.internal.OsList: void nativeAddDouble(long,double)
androidx.appcompat.widget.AppCompatImageButton: void setBackgroundDrawable(android.graphics.drawable.Drawable)
dev.octoshrimpy.quik.receiver.BootReceiver: BootReceiver()
io.realm.internal.OsList: void nativeSetUUID(long,long,java.lang.String)
androidx.appcompat.widget.SwitchCompat: void setCustomSelectionActionModeCallback(android.view.ActionMode$Callback)
io.realm.annotations.RealmModule: java.lang.Class[] classes()
com.google.android.exoplayer2.ui.DefaultTimeBar: java.lang.String getProgressText()
io.realm.RealmAny$Type: io.realm.RealmAny$Type[] values()
io.realm.internal.core.NativeRealmAnyCollection: long nativeCreateObjectIdCollection(java.lang.String[],boolean[])
androidx.appcompat.widget.AppCompatTextView: void setTextClassifier(android.view.textclassifier.TextClassifier)
kotlin.reflect.jvm.internal.impl.utils.ReportLevel: kotlin.reflect.jvm.internal.impl.utils.ReportLevel[] values()
androidx.drawerlayout.widget.DrawerLayout: void setScrimColor(int)
androidx.coordinatorlayout.widget.CoordinatorLayout: void setStatusBarBackgroundResource(int)
io.realm.internal.OsSet: boolean nativeRemoveAllRealmAnyCollection(long,long)
io.realm.RealmFieldType: io.realm.RealmFieldType[] values()
androidx.appcompat.widget.Toolbar: void setCollapseIcon(android.graphics.drawable.Drawable)
com.google.android.flexbox.FlexboxLayout: int getAlignContent()
com.google.android.exoplayer2.ui.PlayerView: void setControllerVisibilityListener(com.google.android.exoplayer2.ui.PlayerControlView$VisibilityListener)
com.google.android.material.appbar.CollapsingToolbarLayout: void setCollapsedTitleTextColor(int)
com.google.android.exoplayer2.ui.PlayerView: void setDefaultArtwork(android.graphics.Bitmap)
kotlin.reflect.jvm.internal.impl.load.java.components.TypeUsage: kotlin.reflect.jvm.internal.impl.load.java.components.TypeUsage valueOf(java.lang.String)
dev.octoshrimpy.quik.receiver.MarkReadReceiver: MarkReadReceiver()
androidx.appcompat.widget.SwitchCompat: void setThumbResource(int)
androidx.appcompat.widget.SearchView: SearchView(android.content.Context,android.util.AttributeSet)
androidx.appcompat.widget.SearchView: SearchView(android.content.Context)
com.google.android.material.appbar.AppBarLayout$Behavior: AppBarLayout$Behavior(android.content.Context,android.util.AttributeSet)
com.google.android.material.floatingactionbutton.FloatingActionButton: void setCompatElevation(float)
androidx.viewpager2.widget.ViewPager2: void setOrientation(int)
io.michaelrocks.libphonenumber.android.NumberParseException$ErrorType: io.michaelrocks.libphonenumber.android.NumberParseException$ErrorType valueOf(java.lang.String)
io.realm.internal.OsResults: long nativeCreateResultsFromBacklinks(long,long,long,long)
io.realm.internal.OsSet: long[] nativeRemoveRow(long,long)
io.realm.internal.OsSharedRealm: void nativeRefresh(long)
androidx.appcompat.widget.SearchView: void setAppSearchData(android.os.Bundle)
io.realm.internal.OsSharedRealm: boolean isSyncRealm()
kotlin.reflect.jvm.internal.impl.types.checker.CaptureStatus: kotlin.reflect.jvm.internal.impl.types.checker.CaptureStatus[] values()
io.realm.internal.OsMap: boolean nativeContainsString(long,java.lang.String)
androidx.appcompat.widget.FitWindowsFrameLayout: FitWindowsFrameLayout(android.content.Context,android.util.AttributeSet)
io.realm.internal.objectstore.OsObjectBuilder: void nativeAddDoubleDictionaryEntry(long,java.lang.String,double)
io.realm.internal.CheckedRow: java.lang.String nativeGetString(long,long)
io.realm.internal.OsSharedRealm: void runInitializationCallback(long,io.realm.internal.OsRealmConfig,io.realm.internal.OsSharedRealm$InitializationCallback)
io.realm.internal.core.NativeRealmAny: NativeRealmAny(java.util.UUID)
androidx.appcompat.widget.AppCompatImageButton: void setSupportImageTintList(android.content.res.ColorStateList)
androidx.appcompat.widget.SwitchCompat: int getCompoundPaddingRight()
androidx.appcompat.widget.Toolbar: android.view.MenuInflater getMenuInflater()
io.reactivex.internal.disposables.DisposableHelper: io.reactivex.internal.disposables.DisposableHelper[] values()
androidx.appcompat.widget.Toolbar: void setNavigationIcon(android.graphics.drawable.Drawable)
com.google.android.material.internal.NavigationMenuItemView: void setNeedsEmptyIcon(boolean)
kotlin.reflect.jvm.internal.impl.descriptors.CallableMemberDescriptor$Kind: kotlin.reflect.jvm.internal.impl.descriptors.CallableMemberDescriptor$Kind valueOf(java.lang.String)
com.google.android.material.appbar.CollapsingToolbarLayout: void setExpandedTitleTextColor(android.content.res.ColorStateList)
com.google.android.exoplayer2.ui.PlayerView: void setShowMultiWindowTimeBar(boolean)
androidx.appcompat.widget.LinearLayoutCompat: void setDividerPadding(int)
androidx.appcompat.widget.SwitchCompat: boolean getSplitTrack()
io.realm.internal.OsRealmConfig: void nativeEnableChangeNotification(long,boolean)
kotlinx.coroutines.android.AndroidExceptionPreHandler: void handleException(kotlin.coroutines.CoroutineContext,java.lang.Throwable)
kotlin.reflect.KVariance: kotlin.reflect.KVariance valueOf(java.lang.String)
io.realm.internal.OsList: void nativeSetDecimal128(long,long,long,long)
io.realm.internal.OsSet: boolean nativeContainsAllRealmAnyCollection(long,long)
com.google.android.material.internal.ForegroundLinearLayout: void setForegroundGravity(int)
io.realm.internal.OsList: void nativeStartListening(long)
androidx.core.app.NotificationCompat$BubbleMetadata$Api30Impl: android.app.Notification$BubbleMetadata toPlatform(androidx.core.app.NotificationCompat$BubbleMetadata)
com.google.android.exoplayer2.ui.DefaultTimeBar: void setBufferedPosition(long)
com.google.android.exoplayer2.ui.PlayerView: boolean getUseArtwork()
com.google.android.material.behavior.SwipeDismissBehavior: SwipeDismissBehavior()
dev.octoshrimpy.quik.manager.ChangelogManagerImpl$Changeset: ChangelogManagerImpl$Changeset(java.util.List,java.util.List,java.util.List,java.util.List,java.lang.String,int)
androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$RecycledViewPool getRecycledViewPool()
kotlin.reflect.jvm.internal.impl.types.checker.TypeCheckerContext$SeveralSupertypesWithSameConstructorPolicy: kotlin.reflect.jvm.internal.impl.types.checker.TypeCheckerContext$SeveralSupertypesWithSameConstructorPolicy[] values()
kotlinx.coroutines.android.AndroidDispatcherFactory: int getLoadPriority()
dev.octoshrimpy.quik.common.widget.PreferenceView: java.lang.String getTitle()
io.realm.internal.OsList: void nativeSetBoolean(long,long,boolean)
org.bson.types.ObjectId: ObjectId(java.nio.ByteBuffer)
androidx.appcompat.widget.MenuPopupWindow$MenuDropDownListView: void setSelector(android.graphics.drawable.Drawable)
com.github.chrisbanes.photoview.PhotoView: void setScaleType(android.widget.ImageView$ScaleType)
com.google.android.material.appbar.AppBarLayout$BaseBehavior: AppBarLayout$BaseBehavior()
io.realm.internal.OsSharedRealm: void nativeStopWaitForChange(long)
com.google.android.exoplayer2.ui.TrackSelectionView: TrackSelectionView(android.content.Context,android.util.AttributeSet)
androidx.appcompat.view.menu.ActionMenuItemView: void setItemInvoker(androidx.appcompat.view.menu.MenuBuilder$ItemInvoker)
kotlin.reflect.jvm.internal.impl.load.java.typeEnhancement.TypeComponentPosition: kotlin.reflect.jvm.internal.impl.load.java.typeEnhancement.TypeComponentPosition valueOf(java.lang.String)
io.realm.internal.OsSharedRealm: long nativeGetTableRef(long,java.lang.String)
com.uber.autodispose.lifecycle.LifecycleNotStartedException: LifecycleNotStartedException()
io.realm.internal.OsSet: long[] nativeAddUUID(long,java.lang.String)
androidx.appcompat.widget.SwitchCompat: void setSwitchTypeface(android.graphics.Typeface)
com.google.android.exoplayer2.ui.PlayerControlView: boolean getShowShuffleButton()
androidx.appcompat.widget.ViewStubCompat: void setOnInflateListener(androidx.appcompat.widget.ViewStubCompat$OnInflateListener)
com.bumptech.glide.load.resource.bitmap.DownsampleStrategy$SampleSizeRounding: com.bumptech.glide.load.resource.bitmap.DownsampleStrategy$SampleSizeRounding[] values()
io.realm.RealmCache$RealmCacheType: io.realm.RealmCache$RealmCacheType valueOf(java.lang.String)
androidx.core.app.RemoteActionCompat: RemoteActionCompat()
io.reactivex.internal.util.AtomicThrowable: AtomicThrowable()
androidx.appcompat.widget.MenuPopupWindow$MenuDropDownListView: void setHoverListener(androidx.appcompat.widget.MenuItemHoverListener)
io.realm.internal.Property: long nativeCreatePersistedLinkProperty(java.lang.String,java.lang.String,int,java.lang.String)
io.realm.internal.OsSet: long[] nativeCreate(long,long,long)
com.google.android.exoplayer2.ui.PlayerView: void setShowBuffering(int)
io.realm.internal.OsResults$Mode: io.realm.internal.OsResults$Mode[] values()
androidx.core.view.WindowInsetsCompat$Impl21: WindowInsetsCompat$Impl21(androidx.core.view.WindowInsetsCompat,androidx.core.view.WindowInsetsCompat$Impl21)
androidx.appcompat.widget.ActionBarContainer: void setTabContainer(androidx.appcompat.widget.ScrollingTabContainerView)
io.realm.internal.OsList: void nativeSetBinary(long,long,byte[])
androidx.appcompat.widget.ActionBarContainer: void setTransitioning(boolean)
kotlin.reflect.jvm.internal.impl.metadata.ProtoBuf$Effect$InvocationKind: kotlin.reflect.jvm.internal.impl.metadata.ProtoBuf$Effect$InvocationKind valueOf(java.lang.String)
androidx.core.view.WindowInsetsCompat$Impl: void copyRootViewBounds(android.view.View)
io.realm.internal.core.NativeRealmAny: java.lang.String nativeAsObjectId(long)
io.realm.internal.OsSet: long nativeGetFinalizerPtr()
androidx.appcompat.widget.Toolbar: int getTitleMarginTop()
io.michaelrocks.libphonenumber.android.PhoneNumberUtil$PhoneNumberType: io.michaelrocks.libphonenumber.android.PhoneNumberUtil$PhoneNumberType[] values()
dev.octoshrimpy.quik.common.widget.AvatarView: void setRecipient(dev.octoshrimpy.quik.model.Recipient)
kotlin.reflect.jvm.internal.impl.builtins.UnsignedType: kotlin.reflect.jvm.internal.impl.builtins.UnsignedType[] values()
io.realm.internal.UncheckedRow: long nativeGetTimestamp(long,long)
androidx.appcompat.widget.Toolbar: int getContentInsetEndWithActions()
androidx.appcompat.widget.AppCompatButton: int getAutoSizeTextType()
androidx.appcompat.view.menu.ListMenuItemView: void setChecked(boolean)
androidx.fragment.app.SpecialEffectsController$Operation$LifecycleImpact: androidx.fragment.app.SpecialEffectsController$Operation$LifecycleImpact valueOf(java.lang.String)
kotlin.reflect.jvm.internal.impl.builtins.jvm.JvmBuiltInsSettings$JDKMemberStatus: kotlin.reflect.jvm.internal.impl.builtins.jvm.JvmBuiltInsSettings$JDKMemberStatus[] values()
com.google.android.material.floatingactionbutton.FloatingActionButton: void setRippleColor(int)
com.google.android.exoplayer2.ui.PlayerView: void setPlayer(com.google.android.exoplayer2.Player)
dev.octoshrimpy.quik.feature.compose.editing.PhoneNumberAction: dev.octoshrimpy.quik.feature.compose.editing.PhoneNumberAction valueOf(java.lang.String)
kotlin.reflect.KParameter$Kind: kotlin.reflect.KParameter$Kind valueOf(java.lang.String)
io.realm.internal.core.NativeRealmAny: byte[] asBinary()
androidx.constraintlayout.widget.ConstraintLayout: int getMinHeight()
kotlin.reflect.jvm.internal.impl.resolve.jvm.JvmPrimitiveType: kotlin.reflect.jvm.internal.impl.resolve.jvm.JvmPrimitiveType valueOf(java.lang.String)
io.realm.internal.core.NativeRealmAny: java.lang.Class getModelClass(io.realm.internal.OsSharedRealm,io.realm.internal.RealmProxyMediator)
androidx.recyclerview.widget.RecyclerView: boolean getClipToPadding()
io.realm.internal.Table: long nativeFindFirstString(long,long,java.lang.String)
io.realm.internal.Table: void nativeSetBoolean(long,long,long,boolean,boolean)
io.realm.annotations.RealmModule: io.realm.annotations.RealmNamingPolicy fieldNamingPolicy()
io.realm.internal.CheckedRow: long nativeGetLong(long,long)
dev.octoshrimpy.quik.common.widget.GroupAvatarView: java.util.List getRecipients()
com.google.android.material.button.MaterialButton: void setIconTintMode(android.graphics.PorterDuff$Mode)
com.google.android.material.appbar.AppBarLayout: int getTotalScrollRange()
androidx.appcompat.widget.Toolbar: android.content.Context getPopupContext()
com.github.mangstadt.vinnie.io.Warning: com.github.mangstadt.vinnie.io.Warning[] values()
com.google.android.flexbox.FlexboxLayout: int getShowDividerVertical()
io.realm.internal.OsMap: boolean nativeContainsBinary(long,byte[])
com.google.android.material.transformation.FabTransformationSheetBehavior: FabTransformationSheetBehavior()
io.realm.internal.core.NativeRealmAny: NativeRealmAny(java.lang.Boolean)
com.github.mangstadt.vinnie.SyntaxStyle: com.github.mangstadt.vinnie.SyntaxStyle[] values()
dev.octoshrimpy.quik.common.widget.PagerTitleView: dev.octoshrimpy.quik.common.util.Colors getColors()
io.realm.internal.CheckedRow: int nativeGetColumnType(long,long)
com.bluelinelabs.conductor.ControllerChangeType: com.bluelinelabs.conductor.ControllerChangeType valueOf(java.lang.String)
dev.octoshrimpy.quik.receiver.SmsDeliveredReceiver: SmsDeliveredReceiver()
androidx.appcompat.view.menu.ListMenuItemView: void setTitle(java.lang.CharSequence)
androidx.viewpager2.widget.ViewPager2: int getItemDecorationCount()
androidx.coordinatorlayout.widget.CoordinatorLayout: androidx.core.view.WindowInsetsCompat getLastWindowInsets()
io.reactivex.subjects.BehaviorSubject: BehaviorSubject()
com.google.android.exoplayer2.ui.PlayerView: boolean getControllerAutoShow()
io.realm.ImportFlag: io.realm.ImportFlag[] values()
androidx.appcompat.widget.AppCompatSpinner: android.content.Context getPopupContext()
kotlin.reflect.jvm.internal.impl.load.java.structure.LightClassOriginKind: kotlin.reflect.jvm.internal.impl.load.java.structure.LightClassOriginKind[] values()
io.realm.internal.OsResults: long nativeGetTable(long)
androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerViewAccessibilityDelegate getCompatAccessibilityDelegate()
io.realm.internal.objectstore.OsObjectBuilder: void nativeAddIntegerListItem(long,long)
androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$OnFlingListener getOnFlingListener()
com.google.android.material.button.MaterialButton: void setBackground(android.graphics.drawable.Drawable)
io.reactivex.internal.functions.Functions$MaxRequestSubscription: Functions$MaxRequestSubscription()
com.github.chrisbanes.photoview.PhotoView: void setOnViewTapListener(com.github.chrisbanes.photoview.OnViewTapListener)
androidx.appcompat.widget.ActionMenuView: void setOverflowReserved(boolean)
androidx.appcompat.widget.Toolbar: void setCollapseIcon(int)
io.realm.internal.OsSharedRealm: void nativeCloseSharedRealm(long)
androidx.appcompat.widget.AppCompatRadioButton: void setSupportButtonTintMode(android.graphics.PorterDuff$Mode)
com.google.android.material.internal.NavigationMenuItemView: void setIconPadding(int)
androidx.appcompat.widget.ActivityChooserView$InnerLayout: ActivityChooserView$InnerLayout(android.content.Context,android.util.AttributeSet)
io.realm.internal.OsList: void nativeSetDouble(long,long,double)
com.google.android.material.snackbar.BaseTransientBottomBar$SnackbarBaseLayout: void setOnLayoutChangeListener(com.google.android.material.snackbar.BaseTransientBottomBar$OnLayoutChangeListener)
kotlin.reflect.jvm.internal.impl.load.java.ErasedOverridabilityCondition: kotlin.reflect.jvm.internal.impl.resolve.ExternalOverridabilityCondition$Contract getContract()
com.google.android.material.appbar.AppBarLayout: void setExpanded(boolean)
androidx.appcompat.widget.AppCompatButton: void setSupportAllCaps(boolean)
androidx.appcompat.widget.AppCompatImageButton: void setImageBitmap(android.graphics.Bitmap)
androidx.core.view.WindowInsetsCompat$Impl: androidx.core.view.WindowInsetsCompat consumeStableInsets()
kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState: kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState[] values()
io.reactivex.schedulers.Schedulers$IOTask: Schedulers$IOTask()
io.realm.internal.objectstore.OsObjectBuilder: void nativeAddFloatSetItem(long,float)
com.google.android.material.button.MaterialButton: void setSupportBackgroundTintList(android.content.res.ColorStateList)
androidx.core.view.ViewCompat$Api21Impl$1: android.view.WindowInsets onApplyWindowInsets(android.view.View,android.view.WindowInsets)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: java.lang.String getGroupName()
kotlin.reflect.jvm.internal.impl.resolve.ExternalOverridabilityCondition$Result: kotlin.reflect.jvm.internal.impl.resolve.ExternalOverridabilityCondition$Result[] values()
androidx.core.app.RemoteActionCompatParcelizer: void write(androidx.core.app.RemoteActionCompat,androidx.versionedparcelable.VersionedParcel)
kotlinx.coroutines.android.AndroidDispatcherFactory: kotlinx.coroutines.MainCoroutineDispatcher createDispatcher(java.util.List)
androidx.core.view.WindowInsetsCompat$Impl: boolean equals(java.lang.Object)
com.google.android.material.appbar.CollapsingToolbarLayout: void setStatusBarScrim(android.graphics.drawable.Drawable)
ezvcard.util.VCardDateFormat: ezvcard.util.VCardDateFormat valueOf(java.lang.String)
com.google.android.material.button.MaterialButton: void setStrokeWidth(int)
io.realm.internal.RealmNotifier: void didChange()
androidx.appcompat.widget.ContentFrameLayout: android.util.TypedValue getMinWidthMinor()
com.google.android.exoplayer2.ui.AspectRatioFrameLayout: void setAspectRatio(float)
io.realm.exceptions.RealmError: RealmError(java.lang.String)
io.realm.internal.OsObject: long nativeCreateNewObject(long)
androidx.appcompat.widget.AppCompatImageView: AppCompatImageView(android.content.Context,android.util.AttributeSet)
androidx.core.view.WindowInsetsCompat$Impl21: WindowInsetsCompat$Impl21(androidx.core.view.WindowInsetsCompat,android.view.WindowInsets)
androidx.appcompat.widget.SearchView: void setSearchableInfo(android.app.SearchableInfo)
androidx.viewpager2.widget.ViewPager2: void setUserInputEnabled(boolean)
io.realm.internal.OsMap: java.lang.Object[] nativeGetEntryForRealmAny(long,int)
kotlin.coroutines.AbstractCoroutineContextElement: kotlin.coroutines.CoroutineContext plus(kotlin.coroutines.CoroutineContext)
androidx.appcompat.widget.Toolbar: void setTitleMarginBottom(int)
androidx.constraintlayout.widget.ConstraintHelper: void setReferencedIds(int[])
androidx.appcompat.widget.AppCompatButton: void setBackgroundResource(int)
dev.octoshrimpy.quik.receiver.BlockThreadReceiver: BlockThreadReceiver()
kotlin.reflect.jvm.internal.impl.load.java.typeEnhancement.NullabilityQualifier: kotlin.reflect.jvm.internal.impl.load.java.typeEnhancement.NullabilityQualifier valueOf(java.lang.String)
androidx.coordinatorlayout.widget.CoordinatorLayout: int getSuggestedMinimumHeight()
androidx.appcompat.widget.AppCompatRadioButton: android.graphics.PorterDuff$Mode getSupportButtonTintMode()
androidx.fragment.app.FragmentContainerView: void setOnApplyWindowInsetsListener(android.view.View$OnApplyWindowInsetsListener)
androidx.viewpager.widget.ViewPager: int getCurrentItem()
androidx.recyclerview.widget.RecyclerView: void setAdapter(androidx.recyclerview.widget.RecyclerView$Adapter)
io.realm.internal.objectstore.OsObjectBuilder: void nativeAddDecimal128ListItem(long,long,long)
com.bluelinelabs.conductor.ChangeHandlerFrameLayout: ChangeHandlerFrameLayout(android.content.Context,android.util.AttributeSet)
com.google.android.exoplayer2.ui.TrackSelectionView: void setAllowAdaptiveSelections(boolean)
androidx.appcompat.widget.SearchView: java.lang.CharSequence getQueryHint()
androidx.core.view.WindowInsetsCompat$BuilderImpl20: void setSystemWindowInsets(androidx.core.graphics.Insets)
com.google.android.exoplayer2.ui.PlayerView: void setVisibility(int)
androidx.core.view.WindowInsetsCompat$Impl30: WindowInsetsCompat$Impl30(androidx.core.view.WindowInsetsCompat,androidx.core.view.WindowInsetsCompat$Impl30)
io.realm.internal.OsList: void nativeStopListening(long)
io.realm.internal.OsRealmConfig$Durability: io.realm.internal.OsRealmConfig$Durability[] values()
androidx.recyclerview.widget.RecyclerView: void setLayoutManager(androidx.recyclerview.widget.RecyclerView$LayoutManager)
com.google.android.exoplayer2.ui.PlayerView: void setControllerAutoShow(boolean)
io.realm.internal.Property: long nativeGetColumnKey(long)
io.realm.internal.core.NativeRealmAnyCollection: long nativeCreateFloatCollection(float[],boolean[])
dev.octoshrimpy.quik.receiver.SendSmsReceiver: SendSmsReceiver()
com.google.android.material.floatingactionbutton.FloatingActionButton: int getCustomSize()
io.realm.internal.UncheckedRow: float nativeGetFloat(long,long)
io.realm.internal.core.NativeRealmAny: long nativeCreateUUID(java.lang.String)
androidx.appcompat.widget.AppCompatTextView: int getAutoSizeTextType()
io.realm.internal.OsObjectSchemaInfo: long nativeGetProperty(long,java.lang.String)
io.realm.internal.OsMap: void nativePutUUID(long,java.lang.String,java.lang.String)
dev.octoshrimpy.quik.common.widget.PagerTitleView: androidx.viewpager.widget.ViewPager getPager()
androidx.appcompat.widget.AppCompatSpinner: void setPrompt(java.lang.CharSequence)
io.realm.internal.OsSharedRealm: long nativeCreateTable(long,java.lang.String)
com.google.android.material.floatingactionbutton.FloatingActionButton: int getExpandedComponentIdHint()
androidx.appcompat.widget.Toolbar: void setLogo(android.graphics.drawable.Drawable)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: float getScaleY()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: void setTrimPathOffset(float)
com.squareup.moshi.CollectionJsonAdapter: CollectionJsonAdapter(com.squareup.moshi.JsonAdapter,com.squareup.moshi.CollectionJsonAdapter$1)
io.realm.internal.CheckedRow: void nativeSetLink(long,long,long)
com.github.mangstadt.vinnie.SyntaxStyle: com.github.mangstadt.vinnie.SyntaxStyle valueOf(java.lang.String)
androidx.appcompat.widget.AppCompatButton: void setBackgroundDrawable(android.graphics.drawable.Drawable)
com.google.android.exoplayer2.ui.DefaultTimeBar: void setDuration(long)
io.realm.internal.OsRealmConfig$Durability: io.realm.internal.OsRealmConfig$Durability valueOf(java.lang.String)
io.realm.internal.OsObject: long nativeCreateNewObjectWithUUIDPrimaryKey(long,long,long,java.lang.String)
androidx.recyclerview.widget.RecyclerView: void setEdgeEffectFactory(androidx.recyclerview.widget.RecyclerView$EdgeEffectFactory)
kotlin.reflect.jvm.internal.impl.types.checker.TypeCheckerContext$LowerCapturedTypePolicy: kotlin.reflect.jvm.internal.impl.types.checker.TypeCheckerContext$LowerCapturedTypePolicy valueOf(java.lang.String)
kotlin.reflect.jvm.internal.impl.load.java.lazy.types.JavaTypeFlexibility: kotlin.reflect.jvm.internal.impl.load.java.lazy.types.JavaTypeFlexibility valueOf(java.lang.String)
com.google.android.material.button.MaterialButton: void setStrokeColorResource(int)
com.google.android.material.appbar.CollapsingToolbarLayout: void setExpandedTitleGravity(int)
io.realm.log.RealmLog: void nativeLog(int,java.lang.String,java.lang.Throwable,java.lang.String)
io.realm.internal.UncheckedRow: void nativeNullifyLink(long,long)
com.google.android.material.transformation.FabTransformationBehavior: FabTransformationBehavior()
io.realm.internal.OsSet: boolean nativeContainsBinary(long,byte[])
io.realm.internal.OsSharedRealm: io.realm.internal.OsSharedRealm freeze()
com.google.android.material.appbar.AppBarLayout: int getPendingAction()
io.realm.internal.UncheckedRow: long nativeGetLink(long,long)
io.realm.internal.TableQuery: void nativeRawPredicate(long,java.lang.String,long[],long)
io.realm.internal.OsSharedRealm: void addPendingRow(io.realm.internal.PendingRow)
com.google.android.flexbox.FlexboxLayoutManager: FlexboxLayoutManager(android.content.Context,android.util.AttributeSet,int,int)
androidx.appcompat.widget.SearchView: void setMaxWidth(int)
androidx.appcompat.widget.LinearLayoutCompat: void setBaselineAlignedChildIndex(int)
com.google.android.material.appbar.CollapsingToolbarLayout: void setExpandedTitleTextAppearance(int)
io.realm.internal.Table: int nativeGetColumnType(long,long)
io.realm.internal.Property: long nativeGetFinalizerPtr()
androidx.appcompat.widget.SwitchCompat: int getSwitchMinWidth()
io.realm.FrozenPendingRow: io.realm.FrozenPendingRow valueOf(java.lang.String)
androidx.appcompat.widget.SwitchCompat: java.lang.CharSequence getTextOff()
com.bumptech.glide.Priority: com.bumptech.glide.Priority valueOf(java.lang.String)
